{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"explainer\"\n}, [/*#__PURE__*/_createTextVNode(\"Indtast tal og etiketter herunder. Tryk \"), /*#__PURE__*/_createElementVNode(\"b\", null, \"tilføj data\"), /*#__PURE__*/_createTextVNode(\" for flere punkter. \")], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"inputbox\"\n};\nconst _hoisted_6 = [\"value\", \"onInput\"];\nconst _hoisted_7 = [\"value\", \"onInput\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"explainer\"\n}, [/*#__PURE__*/_createTextVNode(\"Når du er tilfreds med din graf, så tryk \"), /*#__PURE__*/_createElementVNode(\"b\", null, \"hent graf\"), /*#__PURE__*/_createTextVNode(\". \")], -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"column\"\n};\nconst _hoisted_11 = {\n  class: \"Chart\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_WellnessPlan = _resolveComponent(\"WellnessPlan\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentDataSet, (val, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i\n    }, [_createElementVNode(\"input\", {\n      type: \"number\",\n      placeholder: \"Tal\",\n      value: $options.currentDataSet[i],\n      onInput: $event => $options.updateAmount($event.target.value, i)\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6), _createElementVNode(\"input\", {\n      type: \"text\",\n      value: $data.chartData.labels[i],\n      onInput: $event => $options.updateName($event.target.value, i)\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_7), _createElementVNode(\"button\", {\n      class: \"button\",\n      onClick: $event => $options.remove(i)\n    }, \"Fjern\", 8 /* PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    class: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addExperience && $options.addExperience(...args))\n  }, \"Tilføj data\")]), _hoisted_9]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_WellnessPlan, {\n    class: \"drawChart\",\n    ref: \"skills_chart\",\n    \"chart-data\": $data.chartData,\n    options: $data.options\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])]), _hoisted_12, _hoisted_13, _createElementVNode(\"button\", {\n    class: \"button\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.hentGraf('skills_chart'))\n  }, \"Hent graf\")])])]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAQ;gCACjBC,oBAEM;EAFDD,KAAK,EAAC;AAAW,kCAAC,0CACrB,oCAAkB,WAAf,aAAW,iCAAI,sBACpB;;EACKA,KAAK,EAAC;AAAU;;;;gCAiBrBC,oBAEM;EAFDD,KAAK,EAAC;AAAW,kCAAC,2CACrB,oCAAgB,WAAb,WAAS,iCAAI,IAClB;;EAEGA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAO;iCAQlBC,oBAAI;iCACJA,oBAAI;;;;uBArCVC,oBAyCM,OAzCNC,UAyCM,GAxCJF,oBAuCM,OAvCNG,UAuCM,GAtCJH,oBAwBM,OAxBNI,UAwBM,GAvBJC,UAEM,EACNL,oBAgBM,OAhBNM,UAgBM,sBAfJL,oBAaMM,6BAbkBC,uBAAc,GAAzBC,GAAG,EAAEC,CAAC;yBAAnBT,oBAaM;MAbmCU,GAAG,EAAED;IAAC,IAC7CV,oBAKC;MAJCY,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,KAAK;MACjBC,KAAK,EAAEN,uBAAc,CAACE,CAAC;MACtBK,OAAK,YAAEP,qBAAY,CAACQ,MAAM,CAACC,MAAM,CAACH,KAAK,EAAEJ,CAAC;0DAE7CV,oBAIC;MAHCY,IAAI,EAAC,MAAM;MACVE,KAAK,EAAEI,eAAS,CAACC,MAAM,CAACT,CAAC;MACzBK,OAAK,YAAEP,mBAAU,CAACQ,MAAM,CAACC,MAAM,CAACH,KAAK,EAAEJ,CAAC;0DAE3CV,oBAAwD;MAAhDD,KAAK,EAAC,QAAQ;MAAEqB,OAAK,YAAEZ,eAAM,CAACE,CAAC;OAAG,OAAK;kCAEjDV,oBAAkE;IAA1DD,KAAK,EAAC,QAAQ;IAAEqB,OAAK,yCAAEZ,yDAAa;KAAE,aAAW,KAE3Da,UAEM,IAERrB,oBAYM,OAZNsB,WAYM,GAXJtB,oBAOM,OAPNuB,WAOM,GANJC,aAKgBC;IAJd1B,KAAK,EAAC,WAAW;IACjB2B,GAAG,EAAC,cAAc;IACjB,YAAU,EAAER,eAAS;IACrBS,OAAO,EAAET;wDAGdU,WAAI,EACJC,WAAI,EACJ7B,oBAA2E;IAAnED,KAAK,EAAC,QAAQ;IAAEqB,OAAK,sCAAEZ,iBAAQ;KAAkB,WAAS","names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","$options","val","i","key","type","placeholder","value","onInput","$event","target","$data","labels","onClick","_hoisted_9","_hoisted_10","_hoisted_11","_createVNode","_component_WellnessPlan","ref","options","_hoisted_12","_hoisted_13"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"row\">\n      <div class=\"column\">\n        <div class=\"explainer\">Indtast tal og etiketter herunder. Tryk\n          <b>tilføj data</b> for flere punkter.\n        </div>\n        <div class=\"inputbox\">\n          <div v-for=\"(val, i) in currentDataSet\" :key=\"i\">\n            <input\n              type=\"number\"\n              placeholder=\"Tal\"\n             :value=\"currentDataSet[i]\"\n              @input=\"updateAmount($event.target.value, i)\"\n            >\n            <input\n              type=\"text\"\n              :value=\"chartData.labels[i]\"\n              @input=\"updateName($event.target.value, i)\"\n            >\n            <button class=\"button\" @click=\"remove(i)\">Fjern</button>\n          </div>\n          <button class=\"button\" @click=\"addExperience\">Tilføj data</button>\n        </div>\n        <div class=\"explainer\">Når du er tilfreds med din graf, så tryk\n          <b>hent graf</b>.\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"Chart\">\n          <WellnessPlan\n            class=\"drawChart\"\n            ref=\"skills_chart\"\n            :chart-data=\"chartData\"\n            :options=\"options\"\n          ></WellnessPlan>\n        </div>\n        <br>\n        <br>\n        <button class=\"button\" @click=\"hentGraf('skills_chart')\">Hent graf</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WellnessPlan from \"./components/WellnessPlan\";\nimport randomColor from \"randomcolor\";\nimport filesaver from \"filesaver.js\";\nimport outlabeledChart from \"chartjs-plugin-piechart-outlabels\";\n// import toblob from \"canvas-to-blob\";\n\nconst options = {\n  devicePixelRatio: 4,\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n    animateRotate: false\n  },\n  legend: {\n    position: 'top',\n    labels: {\n        boxWidth: 12,\n    }\n  },\nlayout: {\n            padding: {\n                left: 0,\n                right: 80,\n                top: 80,\n                bottom: 80\n            }\n        },\nplugins: {\n        legend: false,\n        outlabels: {\n           text: '%l %p',\n           color: 'white',\n           stretch: 45,\n           font: {\n               resizable: true,\n               minSize: 12,\n               maxSize: 18\n           }\n        }\n     }\n};\n\nexport default {\n  name: \"App\",\n  components: { WellnessPlan },\n  data() {\n    return {\n      options,\n      chartData: {\n        labels: [\"Kategori\"],\n        datasets: [\n          {\n            backgroundColor: [\"#dc3545\"],\n            data: [1]\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    currentDataSet() {\n      return this.chartData.datasets[0].data;\n    }\n  },\n  methods: {\n    updateChart() {\n      this.$refs.skills_chart.update();\n    },\n    updateAmount(amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount);\n      this.updateChart();\n    },\n    updateName(text, index) {\n      this.chartData.labels.splice(index, 1, text);\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0];\n      this.chartData.labels.push(`Data ${currentDataset.data.length + 1}`);\n      currentDataset.data.push(1);\n      currentDataset.backgroundColor.push(\n        randomColor({\n          luminosity: \"bright\",\n          hue: \"#dc3545\"\n        })\n      );\n      this.updateChart();\n    },\n    remove(index) {\n      const currentDataset = this.chartData.datasets[0];\n      currentDataset.data.splice(index, 1);\n      this.chartData.labels.splice(index, 1);\n      currentDataset.backgroundColor.splice(index, 1);\n      this.updateChart();\n    },\n    hentGraf(ref) {\n      const component = this.$refs[ref];\n      const canvas = component.$refs.canvas;\n      canvas.toBlob(function(blob) {\n        filesaver.saveAs(blob, \"graf.png\");\n      });\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-size: 1.75rem;\n  font-family: TTCommons-DemiBold, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #dc3545;\n  margin-top: 60px;\n}\n.Chart {\n  margin: auto;\n  width: 400px;\n  height: 400px;\n  text-align: center;\n}\ninput {\n  margin: 5px;\n  font-family: TTCommons-DemiBold, sans-serif;\n  border: 2px solid #dc3545;\n  border-radius: 3px;\n  color: black;\n  padding: 8px 1px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n}\n.button {\n  margin: 5px;\n  background-color: #dc3545;\n  font-family: TTCommons-DemiBold, sans-serif;\n  border: 2px solid #dc3545;\n  border-radius: 3px;\n  color: white;\n  padding: 8px 16px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n}\n.column {\n  float: left;\n  width: 450px;\n}\n.explainer {\n  font-size: 1.15rem;\n  margin-left: 70px;\n  margin-right: 70px;\n  margin-bottom: 40px;\n}\n.inputbox {\n  margin-bottom: 40px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}