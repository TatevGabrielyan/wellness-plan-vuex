{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport WellnessPlan from \"./components/WellnessPlan\";\nimport randomColor from \"randomcolor\";\nimport filesaver from \"filesaver.js\";\nimport outlabeledChart from \"chartjs-plugin-piechart-outlabels\";\n// import toblob from \"canvas-to-blob\";\n\nconst options = {\n  devicePixelRatio: 4,\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n    animateRotate: false\n  },\n  legend: {\n    position: \"top\",\n    labels: {\n      boxWidth: 12\n    }\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 80,\n      top: 80,\n      bottom: 80\n    }\n  },\n  plugins: {\n    legend: false,\n    outlabels: {\n      text: \"%l %p\",\n      color: \"white\",\n      stretch: 45,\n      font: {\n        resizable: true,\n        minSize: 12,\n        maxSize: 18\n      }\n    }\n  }\n};\nexport default {\n  name: \"App\",\n  components: {\n    WellnessPlan\n  },\n  data() {\n    return {\n      options,\n      chartData: {\n        labels: [\"Kategori\", \"kk\", \"test\"],\n        datasets: [{\n          backgroundColor: [\"#dc3545\", \"green\"],\n          data: [1, 2, 3]\n        }]\n      }\n    };\n  },\n  computed: {\n    currentDataSet() {\n      return this.chartData.datasets[0].data;\n    }\n  },\n  methods: {\n    updateChart() {\n      this.$refs.skills_chart.update();\n    },\n    updateAmount(amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount);\n      this.updateChart();\n    },\n    updateName(text, index) {\n      this.chartData.labels.splice(index, 1, text);\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0];\n      this.chartData.labels.push(`Data ${currentDataset.data.length + 1}`);\n      currentDataset.data.push(1);\n      currentDataset.backgroundColor.push(randomColor({\n        luminosity: \"bright\",\n        hue: \"#dc3545\"\n      }));\n      this.updateChart();\n    },\n    remove(index) {\n      const currentDataset = this.chartData.datasets[0];\n      currentDataset.data.splice(index, 1);\n      this.chartData.labels.splice(index, 1);\n      currentDataset.backgroundColor.splice(index, 1);\n      this.updateChart();\n    },\n    hentGraf(ref) {\n      const component = this.$refs[ref];\n      const canvas = component.$refs.canvas;\n      canvas.toBlob(function (blob) {\n        filesaver.saveAs(blob, \"graf.png\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["WellnessPlan","randomColor","filesaver","outlabeledChart","options","devicePixelRatio","responsive","maintainAspectRatio","animation","animateRotate","legend","position","labels","boxWidth","layout","padding","left","right","top","bottom","plugins","outlabels","text","color","stretch","font","resizable","minSize","maxSize","name","components","data","chartData","datasets","backgroundColor","computed","currentDataSet","methods","updateChart","$refs","skills_chart","update","updateAmount","amount","index","splice","updateName","addExperience","currentDataset","push","length","luminosity","hue","remove","hentGraf","ref","component","canvas","toBlob","blob","saveAs"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"row\">\n      <div class=\"column\">\n        <div class=\"explainer\">\n          Indtast tal og etiketter herunder. Tryk <b>tilføj data</b> for flere\n          punkter.\n        </div>\n        <div class=\"inputbox\">\n          <div v-for=\"(val, i) in currentDataSet\" :key=\"i\">\n            <input\n              type=\"number\"\n              placeholder=\"Tal\"\n              :value=\"currentDataSet[i]\"\n              @input=\"updateAmount($event.target.value, i)\"\n            />\n            <input\n              type=\"text\"\n              :value=\"chartData.labels[i]\"\n              @input=\"updateName($event.target.value, i)\"\n            />\n            <button class=\"button\" @click=\"remove(i)\">Fjern</button>\n          </div>\n          <button class=\"button\" @click=\"addExperience\">Tilføj data</button>\n        </div>\n        <div class=\"explainer\">\n          Når du er tilfreds med din graf, så tryk <b>hent graf</b>.\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"Chart\">\n          <WellnessPlan\n            class=\"drawChart\"\n            ref=\"skills_chart\"\n            :chart-data=\"chartData\"\n            :options=\"options\"\n          ></WellnessPlan>\n        </div>\n        <br />\n        <br />\n        <button class=\"button\" @click=\"hentGraf('skills_chart')\">\n          Hent graf\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WellnessPlan from \"./components/WellnessPlan\";\nimport randomColor from \"randomcolor\";\nimport filesaver from \"filesaver.js\";\nimport outlabeledChart from \"chartjs-plugin-piechart-outlabels\";\n// import toblob from \"canvas-to-blob\";\n\nconst options = {\n  devicePixelRatio: 4,\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n    animateRotate: false,\n  },\n  legend: {\n    position: \"top\",\n    labels: {\n      boxWidth: 12,\n    },\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 80,\n      top: 80,\n      bottom: 80,\n    },\n  },\n  plugins: {\n    legend: false,\n    outlabels: {\n      text: \"%l %p\",\n      color: \"white\",\n      stretch: 45,\n      font: {\n        resizable: true,\n        minSize: 12,\n        maxSize: 18,\n      },\n    },\n  },\n};\n\nexport default {\n  name: \"App\",\n  components: { WellnessPlan },\n  data() {\n    return {\n      options,\n      chartData: {\n        labels: [\"Kategori\", \"kk\", \"test\"],\n        datasets: [\n          {\n            backgroundColor: [\"#dc3545\", \"green\"],\n            data: [1, 2, 3],\n          },\n        ],\n      },\n    };\n  },\n  computed: {\n    currentDataSet() {\n      return this.chartData.datasets[0].data;\n    },\n  },\n  methods: {\n    updateChart() {\n      this.$refs.skills_chart.update();\n    },\n    updateAmount(amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount);\n      this.updateChart();\n    },\n    updateName(text, index) {\n      this.chartData.labels.splice(index, 1, text);\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0];\n      this.chartData.labels.push(`Data ${currentDataset.data.length + 1}`);\n      currentDataset.data.push(1);\n      currentDataset.backgroundColor.push(\n        randomColor({\n          luminosity: \"bright\",\n          hue: \"#dc3545\",\n        })\n      );\n      this.updateChart();\n    },\n    remove(index) {\n      const currentDataset = this.chartData.datasets[0];\n      currentDataset.data.splice(index, 1);\n      this.chartData.labels.splice(index, 1);\n      currentDataset.backgroundColor.splice(index, 1);\n      this.updateChart();\n    },\n    hentGraf(ref) {\n      const component = this.$refs[ref];\n      const canvas = component.$refs.canvas;\n      canvas.toBlob(function (blob) {\n        filesaver.saveAs(blob, \"graf.png\");\n      });\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-size: 1.75rem;\n  font-family: TTCommons-DemiBold, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #dc3545;\n  margin-top: 60px;\n}\n.Chart {\n  margin: auto;\n  width: 400px;\n  height: 400px;\n  text-align: center;\n}\ninput {\n  margin: 5px;\n  font-family: TTCommons-DemiBold, sans-serif;\n  border: 2px solid #dc3545;\n  border-radius: 3px;\n  color: black;\n  padding: 8px 1px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n}\n.button {\n  margin: 5px;\n  background-color: #dc3545;\n  font-family: TTCommons-DemiBold, sans-serif;\n  border: 2px solid #dc3545;\n  border-radius: 3px;\n  color: white;\n  padding: 8px 16px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n}\n.column {\n  float: left;\n  width: 450px;\n}\n.explainer {\n  font-size: 1.15rem;\n  margin-left: 70px;\n  margin-right: 70px;\n  margin-bottom: 40px;\n}\n.inputbox {\n  margin-bottom: 40px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}