{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DoughnutExample from \"./components/DoughnutExample\";\nimport randomColor from \"randomcolor\";\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n    animateRotate: false\n  }\n};\nexport default {\n  name: \"App\",\n  components: {\n    DoughnutExample\n  },\n  data() {\n    return {\n      options,\n      chartData: {\n        labels: [\"skill1\"],\n        datasets: [{\n          backgroundColor: [randomColor()],\n          data: [1, 5]\n        }]\n      }\n    };\n  },\n  computed: {\n    currentDataSet() {\n      return this.chartData.datasets[0].data;\n    }\n  },\n  methods: {\n    updateChart() {\n      this.$refs.skills_chart.update();\n    },\n    updateAmount(amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount);\n      this.updateChart();\n    },\n    updateName(text, index) {\n      this.chartData.labels.splice(index, 1, text);\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0];\n      this.chartData.labels.push(`Skill ${currentDataset.data.length + 1}`);\n      currentDataset.data.push(0);\n      currentDataset.backgroundColor.push(randomColor());\n      this.updateChart();\n    },\n    remove(index) {\n      const currentDataset = this.chartData.datasets[0];\n      currentDataset.data.splice(index, 1);\n      this.chartData.labels.splice(index, 1);\n      currentDataset.backgroundColor.splice(index, 1);\n      this.updateChart();\n    }\n  }\n};","map":{"version":3,"mappings":";AAiCA,OAAOA,eAAc,MAAO,8BAA8B;AAC1D,OAAOC,WAAU,MAAO,aAAa;AAErC,MAAMC,OAAM,GAAI;EACdC,UAAU,EAAE,IAAI;EAChBC,mBAAmB,EAAE,KAAK;EAC1BC,SAAS,EAAE;IACTC,aAAa,EAAE;EACjB;AACF,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAER;EAAgB,CAAC;EAC/BS,IAAI,GAAG;IACL,OAAO;MACLP,OAAO;MACPQ,SAAS,EAAE;QACTC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAClBC,QAAQ,EAAE,CACR;UACEC,eAAe,EAAE,CAACZ,WAAW,EAAE,CAAC;UAChCQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;QACb,CAAC;MAEL;IACF,CAAC;EACH,CAAC;EACDK,QAAQ,EAAE;IACRC,cAAc,GAAG;MACf,OAAO,IAAI,CAACL,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAI;IACxC;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,MAAM,EAAE;IAClC,CAAC;IACDC,YAAY,CAACC,MAAM,EAAEC,KAAK,EAAE;MAC1B,IAAI,CAACb,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAI,CAACe,MAAM,CAACD,KAAK,EAAE,CAAC,EAAED,MAAM,CAAC;MACxD,IAAI,CAACL,WAAW,EAAE;IACpB,CAAC;IACDQ,UAAU,CAACC,IAAI,EAAEH,KAAK,EAAE;MACtB,IAAI,CAACb,SAAS,CAACC,MAAM,CAACa,MAAM,CAACD,KAAK,EAAE,CAAC,EAAEG,IAAI,CAAC;MAC5C,IAAI,CAACT,WAAW,EAAE;IACpB,CAAC;IACDU,aAAa,GAAG;MACd,MAAMC,cAAa,GAAI,IAAI,CAAClB,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC;MACjD,IAAI,CAACF,SAAS,CAACC,MAAM,CAACkB,IAAI,CAAE,SAAQD,cAAc,CAACnB,IAAI,CAACqB,MAAK,GAAI,CAAE,EAAC,CAAC;MACrEF,cAAc,CAACnB,IAAI,CAACoB,IAAI,CAAC,CAAC,CAAC;MAC3BD,cAAc,CAACf,eAAe,CAACgB,IAAI,CAAC5B,WAAW,EAAE,CAAC;MAClD,IAAI,CAACgB,WAAW,EAAE;IACpB,CAAC;IACDc,MAAM,CAACR,KAAK,EAAE;MACZ,MAAMK,cAAa,GAAI,IAAI,CAAClB,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC;MACjDgB,cAAc,CAACnB,IAAI,CAACe,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MACpC,IAAI,CAACb,SAAS,CAACC,MAAM,CAACa,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MACtCK,cAAc,CAACf,eAAe,CAACW,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MAC/C,IAAI,CAACN,WAAW,EAAE;IACpB;EACF;AACF,CAAC","names":["DoughnutExample","randomColor","options","responsive","maintainAspectRatio","animation","animateRotate","name","components","data","chartData","labels","datasets","backgroundColor","computed","currentDataSet","methods","updateChart","$refs","skills_chart","update","updateAmount","amount","index","splice","updateName","text","addExperience","currentDataset","push","length","remove"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <button class=\"button\" @click=\"addExperience\">Add experience</button>\n    <div class=\"Chart\">\n      <DoughnutExample\n        ref=\"skills_chart\"\n        :chart-data=\"chartData\"\n        :options=\"options\"\n      >\n      </DoughnutExample>\n\n      <div v-for=\"(val, i) in currentDataSet\" :key=\"i\">\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          placeholder=\"name\"\n          :value=\"currentDataSet[i]\"\n          @input=\"updateAmount($event.target.value, i)\"\n        />\n        <span> {{ currentDataSet[i] }} years </span>\n        <input\n          type=\"text\"\n          :value=\"chartData.labels[i]\"\n          @input=\"updateName($event.target.value, i)\"\n        />\n        <button @click=\"remove(i)\">remove</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport DoughnutExample from \"./components/DoughnutExample\";\nimport randomColor from \"randomcolor\";\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n    animateRotate: false,\n  },\n};\n\nexport default {\n  name: \"App\",\n  components: { DoughnutExample },\n  data() {\n    return {\n      options,\n      chartData: {\n        labels: [\"skill1\"],\n        datasets: [\n          {\n            backgroundColor: [randomColor()],\n            data: [1, 5],\n          },\n        ],\n      },\n    };\n  },\n  computed: {\n    currentDataSet() {\n      return this.chartData.datasets[0].data;\n    },\n  },\n  methods: {\n    updateChart() {\n      this.$refs.skills_chart.update();\n    },\n    updateAmount(amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount);\n      this.updateChart();\n    },\n    updateName(text, index) {\n      this.chartData.labels.splice(index, 1, text);\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0];\n      this.chartData.labels.push(`Skill ${currentDataset.data.length + 1}`);\n      currentDataset.data.push(0);\n      currentDataset.backgroundColor.push(randomColor());\n      this.updateChart();\n    },\n    remove(index) {\n      const currentDataset = this.chartData.datasets[0];\n      currentDataset.data.splice(index, 1);\n      this.chartData.labels.splice(index, 1);\n      currentDataset.backgroundColor.splice(index, 1);\n      this.updateChart();\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}