{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Completed appointments\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_radial_progress_bar = _resolveComponent(\"radial-progress-bar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_radial_progress_bar, {\n    diameter: 200,\n    \"completed-steps\": $data.completedSteps,\n    \"total-steps\": $data.totalSteps,\n    \"start-color\": $data.startColor,\n    \"stop-color\": $data.stopColor,\n    \"inner-stroke-color\": $data.innerStrokeColor,\n    \"stroke-width\": $data.strokeWidth,\n    \"inner-stroke-width\": $data.innerStrokeWidth\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", null, \"Total steps: \" + _toDisplayString($data.totalSteps) + \" %\", 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"completed-steps\", \"total-steps\", \"start-color\", \"stop-color\", \"inner-stroke-color\", \"stroke-width\", \"inner-stroke-width\"]), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCA+HEA,oBAA6B,WAA1B,wBAAsB;;;;6DAbzBC,aAYsBC;IAZAC,QAAQ,EAAE,GAAG;IACb,iBAAe,EAAEC,oBAAc;IAC/B,aAAW,EAAEA,gBAAU;IACvB,aAAW,EAAEA,gBAAU;IACvB,YAAU,EAAEA,eAAS;IACrB,oBAAkB,EAAEA,sBAAgB;IACpC,cAAY,EAAEA,iBAAW;IACzB,oBAAkB,EAAEA;;sBAGzC,MAAsC,CAAtCJ,oBAAsC,WAAnC,eAAa,oBAAGI,gBAAU,IAAG,IAAE;;;kJAGnCC,UAA6B","names":["_createElementVNode","_createVNode","_component_radial_progress_bar","diameter","$data","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\App.vue"],"sourcesContent":["<!-- <template>\n  <DxPieChart\n    id=\"pie\"\n    :data-source=\"internetLanguages\"\n    type=\"doughnut\"\n    title=\"Top Internet Languages\"\n    palette=\"Soft Pastel\"\n  >\n    <DxSeries\n      argument-field=\"language\"\n      value-field=\"percent\"\n    >\n      <DxSmallValuesGrouping\n        :top-count=\"3\"\n        mode=\"topN\"\n      />\n      <DxLabel\n        :visible=\"true\"\n        :customize-text=\"customizeLabel\"\n        format=\"fixedPoint\"\n      >\n        <DxConnector\n          :visible=\"true\"\n          :width=\"1\"\n        />\n      </DxLabel>\n    </DxSeries>\n    <DxExport :enabled=\"true\"/>\n    <DxLegend\n      horizontal-alignment=\"center\"\n      vertical-alignment=\"bottom\"\n    />\n  </DxPieChart>\n</template>\n<script>\n\nimport DxPieChart, {\n  DxSmallValuesGrouping,\n  DxLegend,\n  DxSeries,\n  DxLabel,\n  DxConnector,\n  DxExport,\n} from 'devextreme-vue/pie-chart';\n\nimport { internetLanguages } from './data.js';\n\nexport default {\n  components: {\n    DxPieChart,\n    DxSmallValuesGrouping,\n    DxLegend,\n    DxSeries,\n    \n    DxLabel,\n    DxConnector,\n    DxExport,\n  },\n  data() {\n    return {\n      internetLanguages,\n    };\n  },\n  methods: {\n    customizeLabel(pointInfo) {\n      return `${pointInfo.argumentText}: ${pointInfo.valueText}%`;\n    },\n  },\n};\n</script>\n<style>\n#pie {\n  height: 440px;\n}\n</style> -->\n<!-- <template>\n  <vc-donut\n    background=\"white\" foreground=\"grey\"\n    :size=\"200\" unit=\"px\" :thickness=\"30\"\n    has-legend legend-placement=\"top\"\n    :sections=\"sections\" :total=\"100\"\n    :start-angle=\"0\" :auto-adjust-text-size=\"true\"\n    @section-click=\"handleSectionClick\">\n    <h1>75%</h1>\n  </vc-donut>\n</template>\n<script>\n\nimport { createApp } from 'vue';\nimport Donut from 'vue-css-donut-chart';\nimport 'vue-css-donut-chart/dist/vcdonut.css';\n\nconst app = createApp({});\napp.use(Donut);\n\n\nexport default {\n  data() {\n      return {\n        sections: [\n          { label: 'Red section', value: 25, color: 'red' },\n          { label: 'Green section', value: 25, color: 'green' },\n          { label: 'Blue section', value: 25, color: 'blue' }\n        ]\n      };\n    },\n    methods: {\n      handleSectionClick(section) {\n        console.log(`${section.label} clicked.`);\n      }\n    }\n  };\n</script> -->\n<template>\n  <radial-progress-bar :diameter=\"200\"\n                       :completed-steps=\"completedSteps\"\n                       :total-steps=\"totalSteps\"\n                       :start-color=\"startColor\"\n                       :stop-color=\"stopColor\"\n                       :inner-stroke-color=\"innerStrokeColor\"\n                       :stroke-width=\"strokeWidth\"\n                       :inner-stroke-width=\"innerStrokeWidth\"\n                      \n                       >\n   <p>Total steps: {{ totalSteps }} %</p>\n   \n  </radial-progress-bar>\n  <p>Completed appointments</p>\n</template>\n\n<script>\nimport RadialProgressBar from 'vue-radial-progress'\n\nexport default {\n  data () {\n    return {\n      completedSteps: 5,\n      totalSteps: 100,\n      startColor:'#bbff42',\n      stopColor:'#429321',\n      innerStrokeColor:'#323232',\n      strokeWidth:10,\n      innerStrokeWidth:10,\n      \n    }\n  },\n\n  components: {\n    RadialProgressBar\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}