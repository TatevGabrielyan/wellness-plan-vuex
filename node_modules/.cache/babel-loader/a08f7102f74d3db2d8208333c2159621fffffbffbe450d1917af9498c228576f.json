{"ast":null,"code":"import { Doughnut } from \"vue-chartjs/legacy\";\nimport { Chart } from \"chart.js\";\nexport default {\n  extends: Doughnut,\n  data: () => ({\n    chartdata: {\n      labels: [\"Cambodia\", \"Thailand\", \"Vietnam\", \"Laos\"],\n      datasets: [{\n        backgroundColor: [\"#a3c7c9\", \"#889d9e\", \"#647678\", \"f87979\"],\n        data: [91, 3, 3, 3]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      responsive: true,\n      maintainAspectRatio: false\n    }\n  }),\n  //  mounted() {\n  //    this.renderChart(this.chartdata, this.options);\n  //    this.textCenter(880);\n\n  //  },\n  mounted() {\n    const customPlugin = chart => {\n      const {\n        width,\n        height,\n        ctx\n      } = chart.chart;\n      ctx.restore();\n      const fontSize = (height / 114).toFixed(2);\n      ctx.font = `${fontSize}rem sans-serif`;\n      ctx.textBaseline = \"middle\";\n      const text = \"75%\";\n      const textX = Math.round((width - ctx.measureText(text).width) / 2);\n      const textY = height / 2;\n      ctx.fillText(text, textX, textY);\n      ctx.save();\n    };\n    this.addPlugin(ChartDataLabels);\n    this.addPlugin({\n      id: \"my-plugin\",\n      beforeDraw: customPlugin\n    });\n    this.renderChart(this.chartData, this.options);\n  },\n  methods: {\n    textCenter(val) {\n      Chart.pluginService.register({\n        beforeDraw: function (chart) {\n          var width = chart.chart.width;\n          var height = chart.chart.height;\n          var ctx = chart.chart.ctx;\n          ctx.restore();\n          var fontSize = (height / 114).toFixed(2);\n          ctx.font = fontSize + \"em sans-serif\";\n          ctx.textBaseline = \"middle\";\n          var text = val;\n          var textX = Math.round((width - ctx.measureText(text).width) / 2);\n          var textY = height / 2;\n          ctx.fillText(text, textX, textY);\n          ctx.save();\n        }\n      });\n      Chart.plugins.unregister(this.chartdata);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Doughnut","Chart","extends","data","chartdata","labels","datasets","backgroundColor","options","legend","display","responsive","maintainAspectRatio","mounted","customPlugin","chart","width","height","ctx","restore","fontSize","toFixed","font","textBaseline","text","textX","Math","round","measureText","textY","fillText","save","addPlugin","ChartDataLabels","id","beforeDraw","renderChart","chartData","methods","textCenter","val","pluginService","register","plugins","unregister"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\WellnessPlan.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"WellnessPlan\" class=\"\">\n    \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WellnessPlan',\n\n}\n</script>\n -->\n <template>\n  <div>\n    <Doughnut/>\n    <Chart/>\n  </div>\n </template>\n<script>\n import { Doughnut } from \"vue-chartjs/legacy\";\n import { Chart } from \"chart.js\";\n \n export default {\n extends: Doughnut,\n   data: () => ({\n   chartdata: {\n   labels: [\"Cambodia\", \"Thailand\", \"Vietnam\", \"Laos\"],\n   datasets: [\n     {\n       backgroundColor: [\"#a3c7c9\", \"#889d9e\", \"#647678\", \"f87979\"],\n       data: [91, 3, 3, 3]\n       }\n      ]\n      },\n   options: {\n     legend: {\n       display: false\n     },\n     responsive: true,\n     maintainAspectRatio: false\n   }\n }),\n \n//  mounted() {\n//    this.renderChart(this.chartdata, this.options);\n//    this.textCenter(880);\n   \n//  },\nmounted() {\n    const customPlugin = (chart) => {\n      const { width, height, ctx } = chart.chart;\n      ctx.restore();\n      const fontSize = (height / 114).toFixed(2);\n      ctx.font = `${fontSize}rem sans-serif`;\n      ctx.textBaseline = \"middle\";\n\n      const text = \"75%\";\n      const textX = Math.round((width - ctx.measureText(text).width) / 2);\n      const textY = height / 2;\n\n      ctx.fillText(text, textX, textY);\n      ctx.save();\n    };\n    this.addPlugin(ChartDataLabels);\n    this.addPlugin({\n      id: \"my-plugin\",\n      beforeDraw: customPlugin\n    });\n\n    this.renderChart(this.chartData, this.options);\n  },\n methods: {\n   textCenter(val) {\n     Chart.pluginService.register({\n       beforeDraw: function(chart) {\n         var width = chart.chart.width;\n         var height = chart.chart.height;\n         var ctx = chart.chart.ctx;\n \n         ctx.restore();\n         var fontSize = (height / 114).toFixed(2);\n         ctx.font = fontSize + \"em sans-serif\";\n         ctx.textBaseline = \"middle\";\n \n         var text = val;\n         var textX = Math.round((width - ctx.measureText(text).width) / 2);\n         var textY = height / 2;\n \n          ctx.fillText(text, textX, textY);\n          ctx.save();\n        }\n      });\n \n      Chart.plugins.unregister(this.chartdata);\n    }\n  }};\n</script>\n\n\n \n <style>\n #app {\n   font-family: Avenir, Helvetica, Arial, sans-serif;\n   -webkit-font-smoothing: antialiased;\n   -moz-osx-font-smoothing: grayscale;\n   text-align: center;\n   color: #2c3e50;\n   margin-top: 60px;\n }\n </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}