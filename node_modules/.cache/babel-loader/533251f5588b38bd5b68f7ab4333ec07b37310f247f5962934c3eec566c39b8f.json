{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, [_createTextVNode(_toDisplayString(product.title) + \" - \" + _toDisplayString($options.currency(product.price)) + \" \", 1 /* TEXT */), _hoisted_1, _createElementVNode(\"button\", {\n      disabled: !product.inventory,\n      onClick: $event => _ctx.addProductToCart(product)\n    }, \" Add to cart \", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";gCAMMA,oBAAI;;;uBALRC,oBAYK,gCAXHA,oBAUKC,6BATeC,aAAQ,EAAnBC,OAAO;yBADhBH,oBAUK;MARFI,GAAG,EAAED,OAAO,CAACE;0CACXF,OAAO,CAACG,KAAK,IAAG,KAAG,oBAAGC,iBAAQ,CAACJ,OAAO,CAACK,KAAK,KAAI,GACnD,2BAAI,EACJT,oBAIS;MAHNU,QAAQ,GAAGN,OAAO,CAACO,SAAS;MAC5BC,OAAK,YAAET,qBAAgB,CAACC,OAAO;OAAG,eAErC","names":["_createElementVNode","_createElementBlock","_Fragment","_ctx","product","key","id","title","$options","price","disabled","inventory","onClick"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\ProductList.vue"],"sourcesContent":["<template>\n  <ul>\n    <li\n      v-for=\"product in products\"\n      :key=\"product.id\">\n      {{ product.title }} - {{ currency(product.price) }}\n      <br>\n      <button\n        :disabled=\"!product.inventory\"\n        @click=\"addProductToCart(product)\">\n        Add to cart\n      </button>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { currency } from '../currency'\n\nexport default {\n  computed: mapState({\n    products: state => state.products.all\n  }),\n  methods: {\n    ...mapActions('cart', [\n      'addProductToCart'\n    ]),\n    currency\n  },\n  created () {\n    this.$store.dispatch('products/getAllProducts')\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}