{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/points/polar_point.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../../core/utils/extend\";\nvar _extend = extend;\nimport symbolPoint from \"./symbol_point\";\nimport barPoint from \"./bar_point\";\nimport piePoint from \"./pie_point\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { normalizeAngle, convertPolarToXY, getCosAndSin, convertXYToPolar } from \"../../core/utils\";\nvar _math = Math;\nvar _max = _math.max;\nimport consts from \"../../components/consts\";\nvar RADIAL_LABEL_INDENT = consts.radialLabelIndent;\nvar ERROR_BARS_ANGLE_OFFSET = 90;\nvar CANVAS_POSITION_START = \"canvas_position_start\";\nvar CANVAS_POSITION_END = \"canvas_position_end\";\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\nexport var polarSymbolPoint = _extend({}, symbolPoint, {\n  _getLabelCoords: piePoint._getLabelCoords,\n  _getElementCoords: piePoint._getElementCoords,\n  _moveLabelOnCanvas: function (coord, visibleArea, labelBBox) {\n    var x = coord.x;\n    var y = coord.y;\n    if (visibleArea.minX > x) {\n      x = visibleArea.minX;\n    }\n    if (visibleArea.maxX < x + labelBBox.width) {\n      x = visibleArea.maxX - labelBBox.width;\n    }\n    if (visibleArea.minY > y) {\n      y = visibleArea.minY;\n    }\n    if (visibleArea.maxY < y + labelBBox.height) {\n      y = visibleArea.maxY - labelBBox.height;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getLabelPosition: function () {\n    return \"outside\";\n  },\n  _getCoords: function (argument, value) {\n    var axis = this.series.getValueAxis();\n    var startAngle = axis.getAngles()[0];\n    var angle = this._getArgTranslator().translate(argument);\n    var radius = this._getValTranslator().translate(value);\n    var coords = convertPolarToXY(axis.getCenter(), axis.getAngles()[0], angle, radius);\n    coords.angle = angle + startAngle - 90, coords.radius = radius;\n    return coords;\n  },\n  _translate() {\n    var center = this.series.getValueAxis().getCenter();\n    var coord = this._getCoords(this.argument, this.value);\n    var translator = this._getValTranslator();\n    var maxRadius = translator.isInverted() ? translator.translate(CANVAS_POSITION_START) : translator.translate(CANVAS_POSITION_END);\n    var normalizedRadius = isDefined(coord.radius) && coord.radius >= 0 ? coord.radius : null;\n    this.vx = normalizeAngle(coord.angle);\n    this.vy = this.radiusOuter = this.radiusLabels = normalizedRadius;\n    this.radiusLabels += RADIAL_LABEL_INDENT;\n    this.radius = normalizedRadius;\n    this.middleAngle = -coord.angle;\n    this.angle = -coord.angle;\n    this.x = coord.x;\n    this.y = coord.y;\n    this.defaultX = this.centerX = center.x;\n    this.defaultY = this.centerY = center.y;\n    this._translateErrorBars();\n    this.inVisibleArea = this._checkRadiusForVisibleArea(normalizedRadius, maxRadius);\n  },\n  _checkRadiusForVisibleArea: (radius, maxRadius) => isDefined(radius) && radius <= maxRadius,\n  _translateErrorBars: function () {\n    var errorBars = this._options.errorBars;\n    var translator = this._getValTranslator();\n    if (!errorBars) {\n      return;\n    }\n    isDefined(this.lowError) && (this._lowErrorCoord = this.centerY - translator.translate(this.lowError));\n    isDefined(this.highError) && (this._highErrorCoord = this.centerY - translator.translate(this.highError));\n    this._errorBarPos = this.centerX;\n    this._baseErrorBarPos = \"stdDeviation\" === errorBars.type ? this._lowErrorCoord + (this._highErrorCoord - this._lowErrorCoord) / 2 : this.centerY - this.radius;\n  },\n  _getTranslates: function (animationEnabled) {\n    return animationEnabled ? this.getDefaultCoords() : {\n      x: this.x,\n      y: this.y\n    };\n  },\n  getDefaultCoords: function () {\n    var cosSin = getCosAndSin(-this.angle);\n    var radius = this._getValTranslator().translate(CANVAS_POSITION_DEFAULT);\n    var x = this.defaultX + radius * cosSin.cos;\n    var y = this.defaultY + radius * cosSin.sin;\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _addLabelAlignmentAndOffset: function (label, coord) {\n    return coord;\n  },\n  _checkLabelPosition: function (label, coord) {\n    var visibleArea = this._getVisibleArea();\n    var graphicBBox = this._getGraphicBBox();\n    if (this._isPointInVisibleArea(visibleArea, graphicBBox)) {\n      coord = this._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect());\n    }\n    return coord;\n  },\n  _getErrorBarSettings: function (errorBarOptions, animationEnabled) {\n    var settings = symbolPoint._getErrorBarSettings.call(this, errorBarOptions, animationEnabled);\n    settings.rotate = ERROR_BARS_ANGLE_OFFSET - this.angle;\n    settings.rotateX = this.centerX;\n    settings.rotateY = this.centerY;\n    return settings;\n  },\n  getCoords: function (min) {\n    return min ? this.getDefaultCoords() : {\n      x: this.x,\n      y: this.y\n    };\n  }\n});\nexport var polarBarPoint = _extend({}, barPoint, {\n  _translateErrorBars: polarSymbolPoint._translateErrorBars,\n  _getErrorBarSettings: polarSymbolPoint._getErrorBarSettings,\n  _moveLabelOnCanvas: polarSymbolPoint._moveLabelOnCanvas,\n  _getLabelCoords: piePoint._getLabelCoords,\n  _getElementCoords: piePoint._getElementCoords,\n  _getLabelConnector: piePoint._getLabelConnector,\n  getTooltipParams: piePoint.getTooltipParams,\n  _getLabelPosition: piePoint._getLabelPosition,\n  _getCoords: polarSymbolPoint._getCoords,\n  _translate() {\n    var translator = this._getValTranslator();\n    var businessRange = translator.getBusinessRange();\n    var maxRadius = translator.isInverted() ? translator.translate(CANVAS_POSITION_START) : translator.translate(CANVAS_POSITION_END);\n    this.radiusInner = translator.translate(this.minValue);\n    polarSymbolPoint._translate.call(this);\n    if (null === this.radiusInner) {\n      this.radiusInner = this.radius = maxRadius;\n    } else if (null === this.radius) {\n      this.radius = this.value >= businessRange.minVisible ? maxRadius : 0;\n    } else if (this.radius > maxRadius) {\n      this.radius = maxRadius;\n    }\n    this.radiusOuter = this.radiusLabels = _max(this.radiusInner, this.radius);\n    this.radiusLabels += RADIAL_LABEL_INDENT;\n    this.radiusInner = this.defaultRadius = _math.min(this.radiusInner, this.radius);\n    this.middleAngle = this.angle = -normalizeAngle(this.middleAngleCorrection - this.angle);\n  },\n  _checkRadiusForVisibleArea(radius) {\n    return isDefined(radius) || this._getValTranslator().translate(this.minValue) > 0;\n  },\n  _getErrorBarBaseEdgeLength() {\n    var coord = this.getMarkerCoords();\n    return _math.PI * coord.outerRadius * _math.abs(coord.startAngle - coord.endAngle) / 180;\n  },\n  getMarkerCoords: function () {\n    return {\n      x: this.centerX,\n      y: this.centerY,\n      outerRadius: this.radiusOuter,\n      innerRadius: this.defaultRadius,\n      startAngle: this.middleAngle - this.interval / 2,\n      endAngle: this.middleAngle + this.interval / 2\n    };\n  },\n  _drawMarker: function (renderer, group, animationEnabled) {\n    var styles = this._getStyle();\n    var coords = this.getMarkerCoords();\n    var innerRadius = coords.innerRadius;\n    var outerRadius = coords.outerRadius;\n    var start = this._getCoords(this.argument, CANVAS_POSITION_DEFAULT);\n    var x = coords.x;\n    var y = coords.y;\n    if (animationEnabled) {\n      innerRadius = 0;\n      outerRadius = 0;\n      x = start.x;\n      y = start.y;\n    }\n    this.graphic = renderer.arc(x, y, innerRadius, outerRadius, coords.startAngle, coords.endAngle).attr(styles).data({\n      \"chart-data-point\": this\n    }).append(group);\n  },\n  _checkLabelPosition: function (label, coord) {\n    var visibleArea = this._getVisibleArea();\n    var angleFunctions = getCosAndSin(this.middleAngle);\n    var x = this.centerX + this.defaultRadius * angleFunctions.cos;\n    var y = this.centerY - this.defaultRadius * angleFunctions.sin;\n    if (x > visibleArea.minX && x < visibleArea.maxX && y > visibleArea.minY && y < visibleArea.maxY) {\n      coord = this._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect());\n    }\n    return coord;\n  },\n  _addLabelAlignmentAndOffset: function (label, coord) {\n    return coord;\n  },\n  correctCoordinates: function (correctOptions) {\n    this.middleAngleCorrection = correctOptions.offset;\n    this.interval = correctOptions.width;\n  },\n  coordsIn: function (x, y) {\n    var val = convertXYToPolar(this.series.getValueAxis().getCenter(), x, y);\n    var coords = this.getMarkerCoords();\n    var isBetweenAngles = coords.startAngle < coords.endAngle ? -val.phi >= coords.startAngle && -val.phi <= coords.endAngle : -val.phi <= coords.startAngle && -val.phi >= coords.endAngle;\n    return val.r >= coords.innerRadius && val.r <= coords.outerRadius && isBetweenAngles;\n  }\n});","map":{"version":3,"names":["extend","_extend","symbolPoint","barPoint","piePoint","isDefined","normalizeAngle","convertPolarToXY","getCosAndSin","convertXYToPolar","_math","Math","_max","max","consts","RADIAL_LABEL_INDENT","radialLabelIndent","ERROR_BARS_ANGLE_OFFSET","CANVAS_POSITION_START","CANVAS_POSITION_END","CANVAS_POSITION_DEFAULT","polarSymbolPoint","_getLabelCoords","_getElementCoords","_moveLabelOnCanvas","coord","visibleArea","labelBBox","x","y","minX","maxX","width","minY","maxY","height","_getLabelPosition","_getCoords","argument","value","axis","series","getValueAxis","startAngle","getAngles","angle","_getArgTranslator","translate","radius","_getValTranslator","coords","getCenter","_translate","center","translator","maxRadius","isInverted","normalizedRadius","vx","vy","radiusOuter","radiusLabels","middleAngle","defaultX","centerX","defaultY","centerY","_translateErrorBars","inVisibleArea","_checkRadiusForVisibleArea","errorBars","_options","lowError","_lowErrorCoord","highError","_highErrorCoord","_errorBarPos","_baseErrorBarPos","type","_getTranslates","animationEnabled","getDefaultCoords","cosSin","cos","sin","_addLabelAlignmentAndOffset","label","_checkLabelPosition","_getVisibleArea","graphicBBox","_getGraphicBBox","_isPointInVisibleArea","getBoundingRect","_getErrorBarSettings","errorBarOptions","settings","call","rotate","rotateX","rotateY","getCoords","min","polarBarPoint","_getLabelConnector","getTooltipParams","businessRange","getBusinessRange","radiusInner","minValue","minVisible","defaultRadius","middleAngleCorrection","_getErrorBarBaseEdgeLength","getMarkerCoords","PI","outerRadius","abs","endAngle","innerRadius","interval","_drawMarker","renderer","group","styles","_getStyle","start","graphic","arc","attr","data","append","angleFunctions","correctCoordinates","correctOptions","offset","coordsIn","val","isBetweenAngles","phi","r"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/series/points/polar_point.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/points/polar_point.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nvar _extend = extend;\r\nimport symbolPoint from \"./symbol_point\";\r\nimport barPoint from \"./bar_point\";\r\nimport piePoint from \"./pie_point\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    normalizeAngle,\r\n    convertPolarToXY,\r\n    getCosAndSin,\r\n    convertXYToPolar\r\n} from \"../../core/utils\";\r\nvar _math = Math;\r\nvar _max = _math.max;\r\nimport consts from \"../../components/consts\";\r\nvar RADIAL_LABEL_INDENT = consts.radialLabelIndent;\r\nvar ERROR_BARS_ANGLE_OFFSET = 90;\r\nvar CANVAS_POSITION_START = \"canvas_position_start\";\r\nvar CANVAS_POSITION_END = \"canvas_position_end\";\r\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\r\nexport var polarSymbolPoint = _extend({}, symbolPoint, {\r\n    _getLabelCoords: piePoint._getLabelCoords,\r\n    _getElementCoords: piePoint._getElementCoords,\r\n    _moveLabelOnCanvas: function(coord, visibleArea, labelBBox) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (visibleArea.minX > x) {\r\n            x = visibleArea.minX\r\n        }\r\n        if (visibleArea.maxX < x + labelBBox.width) {\r\n            x = visibleArea.maxX - labelBBox.width\r\n        }\r\n        if (visibleArea.minY > y) {\r\n            y = visibleArea.minY\r\n        }\r\n        if (visibleArea.maxY < y + labelBBox.height) {\r\n            y = visibleArea.maxY - labelBBox.height\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getLabelPosition: function() {\r\n        return \"outside\"\r\n    },\r\n    _getCoords: function(argument, value) {\r\n        var axis = this.series.getValueAxis();\r\n        var startAngle = axis.getAngles()[0];\r\n        var angle = this._getArgTranslator().translate(argument);\r\n        var radius = this._getValTranslator().translate(value);\r\n        var coords = convertPolarToXY(axis.getCenter(), axis.getAngles()[0], angle, radius);\r\n        coords.angle = angle + startAngle - 90, coords.radius = radius;\r\n        return coords\r\n    },\r\n    _translate() {\r\n        var center = this.series.getValueAxis().getCenter();\r\n        var coord = this._getCoords(this.argument, this.value);\r\n        var translator = this._getValTranslator();\r\n        var maxRadius = translator.isInverted() ? translator.translate(CANVAS_POSITION_START) : translator.translate(CANVAS_POSITION_END);\r\n        var normalizedRadius = isDefined(coord.radius) && coord.radius >= 0 ? coord.radius : null;\r\n        this.vx = normalizeAngle(coord.angle);\r\n        this.vy = this.radiusOuter = this.radiusLabels = normalizedRadius;\r\n        this.radiusLabels += RADIAL_LABEL_INDENT;\r\n        this.radius = normalizedRadius;\r\n        this.middleAngle = -coord.angle;\r\n        this.angle = -coord.angle;\r\n        this.x = coord.x;\r\n        this.y = coord.y;\r\n        this.defaultX = this.centerX = center.x;\r\n        this.defaultY = this.centerY = center.y;\r\n        this._translateErrorBars();\r\n        this.inVisibleArea = this._checkRadiusForVisibleArea(normalizedRadius, maxRadius)\r\n    },\r\n    _checkRadiusForVisibleArea: (radius, maxRadius) => isDefined(radius) && radius <= maxRadius,\r\n    _translateErrorBars: function() {\r\n        var errorBars = this._options.errorBars;\r\n        var translator = this._getValTranslator();\r\n        if (!errorBars) {\r\n            return\r\n        }\r\n        isDefined(this.lowError) && (this._lowErrorCoord = this.centerY - translator.translate(this.lowError));\r\n        isDefined(this.highError) && (this._highErrorCoord = this.centerY - translator.translate(this.highError));\r\n        this._errorBarPos = this.centerX;\r\n        this._baseErrorBarPos = \"stdDeviation\" === errorBars.type ? this._lowErrorCoord + (this._highErrorCoord - this._lowErrorCoord) / 2 : this.centerY - this.radius\r\n    },\r\n    _getTranslates: function(animationEnabled) {\r\n        return animationEnabled ? this.getDefaultCoords() : {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    },\r\n    getDefaultCoords: function() {\r\n        var cosSin = getCosAndSin(-this.angle);\r\n        var radius = this._getValTranslator().translate(CANVAS_POSITION_DEFAULT);\r\n        var x = this.defaultX + radius * cosSin.cos;\r\n        var y = this.defaultY + radius * cosSin.sin;\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _addLabelAlignmentAndOffset: function(label, coord) {\r\n        return coord\r\n    },\r\n    _checkLabelPosition: function(label, coord) {\r\n        var visibleArea = this._getVisibleArea();\r\n        var graphicBBox = this._getGraphicBBox();\r\n        if (this._isPointInVisibleArea(visibleArea, graphicBBox)) {\r\n            coord = this._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect())\r\n        }\r\n        return coord\r\n    },\r\n    _getErrorBarSettings: function(errorBarOptions, animationEnabled) {\r\n        var settings = symbolPoint._getErrorBarSettings.call(this, errorBarOptions, animationEnabled);\r\n        settings.rotate = ERROR_BARS_ANGLE_OFFSET - this.angle;\r\n        settings.rotateX = this.centerX;\r\n        settings.rotateY = this.centerY;\r\n        return settings\r\n    },\r\n    getCoords: function(min) {\r\n        return min ? this.getDefaultCoords() : {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    }\r\n});\r\nexport var polarBarPoint = _extend({}, barPoint, {\r\n    _translateErrorBars: polarSymbolPoint._translateErrorBars,\r\n    _getErrorBarSettings: polarSymbolPoint._getErrorBarSettings,\r\n    _moveLabelOnCanvas: polarSymbolPoint._moveLabelOnCanvas,\r\n    _getLabelCoords: piePoint._getLabelCoords,\r\n    _getElementCoords: piePoint._getElementCoords,\r\n    _getLabelConnector: piePoint._getLabelConnector,\r\n    getTooltipParams: piePoint.getTooltipParams,\r\n    _getLabelPosition: piePoint._getLabelPosition,\r\n    _getCoords: polarSymbolPoint._getCoords,\r\n    _translate() {\r\n        var translator = this._getValTranslator();\r\n        var businessRange = translator.getBusinessRange();\r\n        var maxRadius = translator.isInverted() ? translator.translate(CANVAS_POSITION_START) : translator.translate(CANVAS_POSITION_END);\r\n        this.radiusInner = translator.translate(this.minValue);\r\n        polarSymbolPoint._translate.call(this);\r\n        if (null === this.radiusInner) {\r\n            this.radiusInner = this.radius = maxRadius\r\n        } else if (null === this.radius) {\r\n            this.radius = this.value >= businessRange.minVisible ? maxRadius : 0\r\n        } else if (this.radius > maxRadius) {\r\n            this.radius = maxRadius\r\n        }\r\n        this.radiusOuter = this.radiusLabels = _max(this.radiusInner, this.radius);\r\n        this.radiusLabels += RADIAL_LABEL_INDENT;\r\n        this.radiusInner = this.defaultRadius = _math.min(this.radiusInner, this.radius);\r\n        this.middleAngle = this.angle = -normalizeAngle(this.middleAngleCorrection - this.angle)\r\n    },\r\n    _checkRadiusForVisibleArea(radius) {\r\n        return isDefined(radius) || this._getValTranslator().translate(this.minValue) > 0\r\n    },\r\n    _getErrorBarBaseEdgeLength() {\r\n        var coord = this.getMarkerCoords();\r\n        return _math.PI * coord.outerRadius * _math.abs(coord.startAngle - coord.endAngle) / 180\r\n    },\r\n    getMarkerCoords: function() {\r\n        return {\r\n            x: this.centerX,\r\n            y: this.centerY,\r\n            outerRadius: this.radiusOuter,\r\n            innerRadius: this.defaultRadius,\r\n            startAngle: this.middleAngle - this.interval / 2,\r\n            endAngle: this.middleAngle + this.interval / 2\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled) {\r\n        var styles = this._getStyle();\r\n        var coords = this.getMarkerCoords();\r\n        var innerRadius = coords.innerRadius;\r\n        var outerRadius = coords.outerRadius;\r\n        var start = this._getCoords(this.argument, CANVAS_POSITION_DEFAULT);\r\n        var x = coords.x;\r\n        var y = coords.y;\r\n        if (animationEnabled) {\r\n            innerRadius = 0;\r\n            outerRadius = 0;\r\n            x = start.x;\r\n            y = start.y\r\n        }\r\n        this.graphic = renderer.arc(x, y, innerRadius, outerRadius, coords.startAngle, coords.endAngle).attr(styles).data({\r\n            \"chart-data-point\": this\r\n        }).append(group)\r\n    },\r\n    _checkLabelPosition: function(label, coord) {\r\n        var visibleArea = this._getVisibleArea();\r\n        var angleFunctions = getCosAndSin(this.middleAngle);\r\n        var x = this.centerX + this.defaultRadius * angleFunctions.cos;\r\n        var y = this.centerY - this.defaultRadius * angleFunctions.sin;\r\n        if (x > visibleArea.minX && x < visibleArea.maxX && y > visibleArea.minY && y < visibleArea.maxY) {\r\n            coord = this._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect())\r\n        }\r\n        return coord\r\n    },\r\n    _addLabelAlignmentAndOffset: function(label, coord) {\r\n        return coord\r\n    },\r\n    correctCoordinates: function(correctOptions) {\r\n        this.middleAngleCorrection = correctOptions.offset;\r\n        this.interval = correctOptions.width\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var val = convertXYToPolar(this.series.getValueAxis().getCenter(), x, y);\r\n        var coords = this.getMarkerCoords();\r\n        var isBetweenAngles = coords.startAngle < coords.endAngle ? -val.phi >= coords.startAngle && -val.phi <= coords.endAngle : -val.phi <= coords.startAngle && -val.phi >= coords.endAngle;\r\n        return val.r >= coords.innerRadius && val.r <= coords.outerRadius && isBetweenAngles\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}