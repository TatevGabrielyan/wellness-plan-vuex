{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport WellnessPlan from './WellnessPlan.vue';\nimport TodoItem from './TodoItem.vue';\nconst filters = {\n  all: todos => todos,\n  active: todos => todos.filter(todo => !todo.done),\n  completed: todos => todos.filter(todo => todo.done)\n};\nexport default {\n  components: {\n    WellnessPlan,\n    TodoItem\n  },\n  setup() {\n    const visibility = ref('all');\n    const store = useStore();\n    const todos = computed(() => store.state.todos);\n    const allChecked = computed(() => todos.value.every(todo => todo.done));\n    const filteredTodos = computed(() => filters[visibility.value](todos.value));\n    const remaining = computed(() => todos.value.filter(todo => !todo.done).length);\n    const toggleAll = done => store.dispatch('toggleAll', done);\n    const clearCompleted = () => store.dispatch('clearCompleted');\n    function addTodo(e) {\n      const text = e.target.value;\n      if (text.trim()) {\n        store.dispatch('addTodo', text);\n      }\n      e.target.value = '';\n    }\n    const pluralize = (n, w) => n === 1 ? w : w + 's';\n    const capitalize = s => s.charAt(0).toUpperCase() + s.slice(1);\n    return {\n      visibility,\n      filters,\n      todos,\n      allChecked,\n      filteredTodos,\n      remaining,\n      addTodo,\n      clearCompleted,\n      toggleAll,\n      pluralize,\n      capitalize\n    };\n  }\n};","map":{"version":3,"mappings":"AAoEA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,YAAW,MAAO,oBAAmB;AAC5C,OAAOC,QAAO,MAAO,gBAAe;AAEpC,MAAMC,OAAM,GAAI;EACdC,GAAG,EAAEC,KAAI,IAAKA,KAAK;EACnBC,MAAM,EAAED,KAAI,IAAKA,KAAK,CAACE,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC;EACjDC,SAAS,EAAEL,KAAI,IAAKA,KAAK,CAACE,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI;AACpD;AAEA,eAAe;EACbE,UAAU,EAAE;IAACV,YAAY;IAAEC;EAAS,CAAC;EACrCU,KAAI,GAAK;IACP,MAAMC,UAAS,GAAIf,GAAG,CAAC,KAAK;IAE5B,MAAMgB,KAAI,GAAId,QAAQ,EAAC;IAEvB,MAAMK,KAAI,GAAIN,QAAQ,CAAC,MAAMe,KAAK,CAACC,KAAK,CAACV,KAAK;IAC9C,MAAMW,UAAS,GAAIjB,QAAQ,CAAC,MAAMM,KAAK,CAACY,KAAK,CAACC,KAAK,CAACV,IAAG,IAAKA,IAAI,CAACC,IAAI,CAAC;IACtE,MAAMU,aAAY,GAAIpB,QAAQ,CAAC,MAAMI,OAAO,CAACU,UAAU,CAACI,KAAK,CAAC,CAACZ,KAAK,CAACY,KAAK,CAAC;IAC3E,MAAMG,SAAQ,GAAIrB,QAAQ,CAAC,MAAMM,KAAK,CAACY,KAAK,CAACV,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC,CAACY,MAAM;IAE9E,MAAMC,SAAQ,GAAKb,IAAI,IAAKK,KAAK,CAACS,QAAQ,CAAC,WAAW,EAAEd,IAAI;IAC5D,MAAMe,cAAa,GAAI,MAAMV,KAAK,CAACS,QAAQ,CAAC,gBAAgB;IAE5D,SAASE,OAAM,CAAGC,CAAC,EAAE;MACnB,MAAMC,IAAG,GAAID,CAAC,CAACE,MAAM,CAACX,KAAI;MAC1B,IAAIU,IAAI,CAACE,IAAI,EAAE,EAAE;QACff,KAAK,CAACS,QAAQ,CAAC,SAAS,EAAEI,IAAI;MAChC;MACAD,CAAC,CAACE,MAAM,CAACX,KAAI,GAAI,EAAC;IACpB;IAEA,MAAMa,SAAQ,GAAI,CAACC,CAAC,EAAEC,CAAC,KAAKD,MAAM,IAAIC,IAAKA,IAAI,GAAG;IAClD,MAAMC,UAAS,GAAIC,KAAKA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAC,GAAIF,CAAC,CAACG,KAAK,CAAC,CAAC;IAE7D,OAAO;MACLxB,UAAU;MACVV,OAAO;MACPE,KAAK;MACLW,UAAU;MACVG,aAAa;MACbC,SAAS;MACTK,OAAO;MACPD,cAAc;MACdF,SAAS;MACTQ,SAAS;MACTG;IACF;EACF;AACF","names":["ref","computed","useStore","WellnessPlan","TodoItem","filters","all","todos","active","filter","todo","done","completed","components","setup","visibility","store","state","allChecked","value","every","filteredTodos","remaining","length","toggleAll","dispatch","clearCompleted","addTodo","e","text","target","trim","pluralize","n","w","capitalize","s","charAt","toUpperCase","slice"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\App.vue"],"sourcesContent":["\n\n<template>\n  <section class=\"todoapp\">\n    <header>\n      <h1 class=\"wellness-header\">2021 wellness plan</h1>\n    </header>\n    <div class=\"wellness-plan-div\">\n      <div class=\"flex-container\">\n        <h3>Your progress <span class=\"steps-to-complete\">3 steps to complete</span>  </h3>\n      </div>\n      <div>\n        <button>hide</button>\n      </div>\n<div class=\"flex-container\">\n  <div class=\"flex-item-left\">\n    <WellnessPlan/>\n  </div>\n  <div class=\"flex-item-right\">\n    <input class=\"new-todo\"\n        autofocus\n        autocomplete=\"off\"\n        placeholder=\"What needs to be done?\"\n        @keyup.enter=\"addTodo\">\n    <!-- main section -->\n    <section class=\"main\" v-show=\"todos.length\">\n      <input class=\"toggle-all\" id=\"toggle-all\"\n        type=\"checkbox\"\n        :checked=\"allChecked\"\n        @change=\"toggleAll(!allChecked)\">\n      <label for=\"toggle-all\"></label>\n      <ul class=\"todo-list\">\n        <TodoItem\n          v-for=\"(todo, index) in filteredTodos\"\n          :key=\"index\"\n          :todo=\"todo\"\n        />\n      </ul>\n    </section>\n    <!-- footer -->\n    <footer class=\"footer\" v-show=\"todos.length\">\n      <span class=\"todo-count\">\n        <strong>{{ remaining }}</strong>\n        {{ pluralize(remaining, 'item') }} left\n      </span>\n      <ul class=\"filters\">\n        <li v-for=\"(val, key) in filters\" :key=\"key\">\n          <a :href=\"'#/' + key\"\n            :class=\"{ selected: visibility === key }\"\n            @click=\"visibility = key\">{{ capitalize(key) }}</a>\n        </li>\n      </ul>\n      <button class=\"clear-completed\"\n        v-show=\"todos.length > remaining\"\n        @click=\"clearCompleted\">\n        Clear completed\n      </button>\n    </footer>\n  </div>\n</div>\n  \n</div>\n  \n   \n  </section>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport WellnessPlan from './WellnessPlan.vue'\nimport TodoItem from './TodoItem.vue'\n\nconst filters = {\n  all: todos => todos,\n  active: todos => todos.filter(todo => !todo.done),\n  completed: todos => todos.filter(todo => todo.done)\n}\n\nexport default {\n  components: {WellnessPlan, TodoItem },\n  setup () {\n    const visibility = ref('all')\n\n    const store = useStore()\n\n    const todos = computed(() => store.state.todos)\n    const allChecked = computed(() => todos.value.every(todo => todo.done))\n    const filteredTodos = computed(() => filters[visibility.value](todos.value))\n    const remaining = computed(() => todos.value.filter(todo => !todo.done).length)\n\n    const toggleAll = (done) => store.dispatch('toggleAll', done)\n    const clearCompleted = () => store.dispatch('clearCompleted')\n\n    function addTodo (e) {\n      const text = e.target.value\n      if (text.trim()) {\n        store.dispatch('addTodo', text)\n      }\n      e.target.value = ''\n    }\n\n    const pluralize = (n, w) => n === 1 ? w : (w + 's')\n    const capitalize = s => s.charAt(0).toUpperCase() + s.slice(1)\n\n    return {\n      visibility,\n      filters,\n      todos,\n      allChecked,\n      filteredTodos,\n      remaining,\n      addTodo,\n      clearCompleted,\n      toggleAll,\n      pluralize,\n      capitalize\n    }\n  }\n}\n</script>\n\n<style>\n  \n  .wellness-header{\n    text-transform: capitalize;\n    padding-left: 1rem;\n    font-weight: 600;\n    font-size: 27px;\n  }\n  .wellness-plan-div{\n    border: 2px solid #EFF2F2;\n    border-radius: 15px\n  }\n  .steps-to-complete{\n    color: #929396;\n  }\n  .flex-container {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n\n  }\n\n  .flex-container > div {\n    margin: 10px;\n    text-align: center;\n    line-height: 75px;\n    font-size: 30px;\n  }\n  .flex-item-left {\n  flex: 20%;\n}\n\n.flex-item-right {\n  flex: 80%;\n}\n\n\n/* media */\n\n@media (max-width: 800px) {\n  .flex-container{\n    flex-wrap: wrap;\n  }\n  .flex-item-right, .flex-item-left {\n    flex: 100%;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}