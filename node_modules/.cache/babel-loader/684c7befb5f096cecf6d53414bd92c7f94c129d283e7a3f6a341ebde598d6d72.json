{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/**\r\n * DevExtreme (esm/viz/chart_components/base_chart.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop, grep } from \"../../core/utils/common\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined as _isDefined, isFunction } from \"../../core/utils/type\";\nimport { each as _each, reverseEach as _reverseEach } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isTouchEvent, isPointerEvent } from \"../../events/utils/index\";\nimport BaseWidget from \"../core/base_widget\";\nimport { Legend } from \"../components/legend\";\nimport { validateData } from \"../components/data_validator\";\nimport { Series } from \"../series/base_series\";\nimport { ThemeManager } from \"../components/chart_theme_manager\";\nimport { LayoutManager } from \"./layout_manager\";\nimport * as trackerModule from \"./tracker\";\nimport { map as _map, setCanvasValues as _setCanvasValues, processSeriesTemplate } from \"../core/utils\";\nvar _isArray = Array.isArray;\nvar REINIT_REFRESH_ACTION = \"_reinit\";\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\nvar RESIZE_REFRESH_ACTION = \"_resize\";\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\nvar DEFAULT_OPACITY = .3;\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"minBubbleSize\", \"maxBubbleSize\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"stickyHovering\"];\nvar FONT = \"font\";\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\n  var canvasSize = stubCanvas.end - stubCanvas.start;\n  var size = 0;\n  rollingStocks.forEach(function (rollingStock) {\n    size += rollingStock.getBoundingRect().width;\n  });\n  while (canvasSize < size) {\n    size -= findAndKillSmallValue(rollingStocks);\n  }\n}\nfunction findAndKillSmallValue(rollingStocks) {\n  var smallestObject = rollingStocks.reduce(function (prev, rollingStock, index) {\n    if (!rollingStock) {\n      return prev;\n    }\n    var value = rollingStock.value();\n    return value < prev.value ? {\n      value: value,\n      rollingStock: rollingStock,\n      index: index\n    } : prev;\n  }, {\n    rollingStock: void 0,\n    value: 1 / 0,\n    index: void 0\n  });\n  smallestObject.rollingStock.getLabels()[0].draw(false);\n  var width = smallestObject.rollingStock.getBoundingRect().width;\n  rollingStocks[smallestObject.index] = null;\n  return width;\n}\nfunction checkStackOverlap(rollingStocks) {\n  var i;\n  var j;\n  var iLength;\n  var jLength;\n  var overlap = false;\n  for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\n    for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\n      if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\n        overlap = true;\n        break;\n      }\n    }\n    if (overlap) {\n      break;\n    }\n  }\n  return overlap;\n}\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, isInverted, shiftFunction) {\n  var customSorting = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : () => 0;\n  var rollingStocks = [];\n  var stubCanvas = {\n    start: isRotated ? canvas.left : canvas.top,\n    end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\n  };\n  var hasStackedSeries = false;\n  var sortRollingStocks;\n  points.forEach(function (p) {\n    if (!p) {\n      return;\n    }\n    hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\n    p.getLabels().forEach(function (l) {\n      l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction));\n    });\n  });\n  if (hasStackedSeries) {\n    !isRotated ^ isInverted && rollingStocks.reverse();\n    sortRollingStocks = !isInverted ? sortRollingStocksByValue(rollingStocks) : rollingStocks;\n  } else {\n    var rollingStocksTmp = rollingStocks.slice();\n    sortRollingStocks = rollingStocks.sort(function (a, b) {\n      return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b);\n    });\n  }\n  if (!checkStackOverlap(sortRollingStocks)) {\n    return false;\n  }\n  checkHeightRollingStock(sortRollingStocks, stubCanvas);\n  prepareOverlapStacks(sortRollingStocks);\n  sortRollingStocks.reverse();\n  moveRollingStock(sortRollingStocks, stubCanvas);\n  return true;\n}\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\n  if (!firstRolling || !secondRolling) {\n    return;\n  }\n  var firstRect = firstRolling.getBoundingRect();\n  var secondRect = secondRolling.getBoundingRect();\n  var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\n  return firstRect.end > secondRect.start && oppositeOverlapping;\n}\nfunction sortRollingStocksByValue(rollingStocks) {\n  var positiveRollingStocks = [];\n  var negativeRollingStocks = [];\n  rollingStocks.forEach(stock => {\n    if (stock.value() > 0) {\n      positiveRollingStocks.push(stock);\n    } else {\n      negativeRollingStocks.unshift(stock);\n    }\n  });\n  return positiveRollingStocks.concat(negativeRollingStocks);\n}\nfunction prepareOverlapStacks(rollingStocks) {\n  var i;\n  var currentRollingStock;\n  var root;\n  for (i = 0; i < rollingStocks.length - 1; i++) {\n    currentRollingStock = root || rollingStocks[i];\n    if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\n      currentRollingStock.toChain(rollingStocks[i + 1]);\n      rollingStocks[i + 1] = null;\n      root = currentRollingStock;\n    } else {\n      root = rollingStocks[i + 1] || currentRollingStock;\n    }\n  }\n}\nfunction moveRollingStock(rollingStocks, canvas) {\n  var i;\n  var j;\n  var currentRollingStock;\n  var nextRollingStock;\n  var currentBBox;\n  var nextBBox;\n  for (i = 0; i < rollingStocks.length; i++) {\n    currentRollingStock = rollingStocks[i];\n    if (rollingStocksIsOut(currentRollingStock, canvas)) {\n      currentBBox = currentRollingStock.getBoundingRect();\n      for (j = i + 1; j < rollingStocks.length; j++) {\n        nextRollingStock = rollingStocks[j];\n        if (!nextRollingStock) {\n          continue;\n        }\n        nextBBox = nextRollingStock.getBoundingRect();\n        if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\n          nextRollingStock.toChain(currentRollingStock);\n          rollingStocks[i] = currentRollingStock = null;\n          break;\n        }\n      }\n    }\n    currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas);\n  }\n}\nfunction rollingStocksIsOut(rollingStock, canvas) {\n  return rollingStock && rollingStock.getBoundingRect().end > canvas.end;\n}\nfunction RollingStock(label, isRotated, shiftFunction) {\n  var bBox = label.getBoundingRect();\n  var x = bBox.x;\n  var y = bBox.y;\n  var endX = bBox.x + bBox.width;\n  var endY = bBox.y + bBox.height;\n  this.labels = [label];\n  this.shiftFunction = shiftFunction;\n  this._bBox = {\n    start: isRotated ? x : y,\n    width: isRotated ? bBox.width : bBox.height,\n    end: isRotated ? endX : endY,\n    oppositeStart: isRotated ? y : x,\n    oppositeEnd: isRotated ? endY : endX\n  };\n  this._initialPosition = isRotated ? bBox.x : bBox.y;\n  return this;\n}\nRollingStock.prototype = {\n  toChain: function (nextRollingStock) {\n    var nextRollingStockBBox = nextRollingStock.getBoundingRect();\n    nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\n    this._changeBoxWidth(nextRollingStockBBox.width);\n    this.labels = this.labels.concat(nextRollingStock.labels);\n  },\n  getBoundingRect: function () {\n    return this._bBox;\n  },\n  shift: function (shiftLength) {\n    var shiftFunction = this.shiftFunction;\n    _each(this.labels, function (index, label) {\n      var bBox = label.getBoundingRect();\n      var coords = shiftFunction(bBox, shiftLength);\n      if (!label.hideInsideLabel(coords)) {\n        label.shift(coords.x, coords.y);\n      }\n    });\n    this._bBox.end -= shiftLength;\n    this._bBox.start -= shiftLength;\n  },\n  setRollingStockInCanvas: function (canvas) {\n    if (this._bBox.end > canvas.end) {\n      this.shift(this._bBox.end - canvas.end);\n    }\n  },\n  getLabels: function () {\n    return this.labels;\n  },\n  value() {\n    return this.labels[0].getData().value;\n  },\n  getInitialPosition: function () {\n    return this._initialPosition;\n  },\n  _changeBoxWidth: function (width) {\n    this._bBox.end += width;\n    this._bBox.width += width;\n  }\n};\nfunction getLegendFields(name) {\n  return {\n    nameField: name + \"Name\",\n    colorField: name + \"Color\",\n    indexField: name + \"Index\"\n  };\n}\nfunction getLegendSettings(legendDataField) {\n  var formatObjectFields = getLegendFields(legendDataField);\n  return {\n    getFormatObject: function (data) {\n      var res = {};\n      res[formatObjectFields.indexField] = data.id;\n      res[formatObjectFields.colorField] = data.states.normal.fill;\n      res[formatObjectFields.nameField] = data.text;\n      return res;\n    },\n    textField: formatObjectFields.nameField\n  };\n}\nfunction checkOverlapping(firstRect, secondRect) {\n  return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height);\n}\nexport var overlapping = {\n  resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\n};\nexport var BaseChart = BaseWidget.inherit({\n  _eventsMap: {\n    onSeriesClick: {\n      name: \"seriesClick\"\n    },\n    onPointClick: {\n      name: \"pointClick\"\n    },\n    onArgumentAxisClick: {\n      name: \"argumentAxisClick\"\n    },\n    onLegendClick: {\n      name: \"legendClick\"\n    },\n    onSeriesSelectionChanged: {\n      name: \"seriesSelectionChanged\"\n    },\n    onPointSelectionChanged: {\n      name: \"pointSelectionChanged\"\n    },\n    onSeriesHoverChanged: {\n      name: \"seriesHoverChanged\"\n    },\n    onPointHoverChanged: {\n      name: \"pointHoverChanged\"\n    },\n    onDone: {\n      name: \"done\",\n      actionSettings: {\n        excludeValidators: [\"disabled\"]\n      }\n    },\n    onZoomStart: {\n      name: \"zoomStart\"\n    },\n    onZoomEnd: {\n      name: \"zoomEnd\"\n    }\n  },\n  _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\n  _rootClassPrefix: \"dxc\",\n  _rootClass: \"dxc-chart\",\n  _initialChanges: [\"INIT\"],\n  _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\n  _getThemeManagerOptions() {\n    var themeOptions = this.callBase.apply(this, arguments);\n    themeOptions.options = this.option();\n    return themeOptions;\n  },\n  _createThemeManager: function () {\n    var chartOption = this.option();\n    var themeManager = new ThemeManager(this._getThemeManagerOptions());\n    themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\n    return themeManager;\n  },\n  _initCore: function () {\n    this._canvasClipRect = this._renderer.clipRect();\n    this._createHtmlStructure();\n    this._createLegend();\n    this._createTracker();\n    this._needHandleRenderComplete = true;\n    this.layoutManager = new LayoutManager();\n    this._createScrollBar();\n    eventsEngine.on(this._$element, \"contextmenu\", function (event) {\n      if (isTouchEvent(event) || isPointerEvent(event)) {\n        event.preventDefault();\n      }\n    });\n    eventsEngine.on(this._$element, \"MSHoldVisual\", function (event) {\n      event.preventDefault();\n    });\n  },\n  _getLayoutItems: noop,\n  _layoutManagerOptions: function () {\n    return this._themeManager.getOptions(\"adaptiveLayout\");\n  },\n  _reinit() {\n    _setCanvasValues(this._canvas);\n    this._reinitAxes();\n    this._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n  _correctAxes: noop,\n  _createHtmlStructure: function () {\n    var that = this;\n    var renderer = that._renderer;\n    var root = renderer.root;\n    var createConstantLinesGroup = function () {\n      return renderer.g().attr({\n        class: \"dxc-constant-lines-group\"\n      }).linkOn(root, \"constant-lines\");\n    };\n    that._constantLinesGroup = {\n      dispose: function () {\n        this.under.dispose();\n        this.above.dispose();\n      },\n      linkOff: function () {\n        this.under.linkOff();\n        this.above.linkOff();\n      },\n      clear: function () {\n        this.under.linkRemove().clear();\n        this.above.linkRemove().clear();\n      },\n      linkAppend: function () {\n        this.under.linkAppend();\n        this.above.linkAppend();\n      }\n    };\n    that._labelsAxesGroup = renderer.g().attr({\n      class: \"dxc-elements-axes-group\"\n    });\n    var appendLabelsAxesGroup = () => {\n      that._labelsAxesGroup.linkOn(root, \"elements\");\n    };\n    that._backgroundRect = renderer.rect().attr({\n      fill: \"gray\",\n      opacity: 1e-4\n    }).append(root);\n    that._panesBackgroundGroup = renderer.g().attr({\n      class: \"dxc-background\"\n    }).append(root);\n    that._stripsGroup = renderer.g().attr({\n      class: \"dxc-strips-group\"\n    }).linkOn(root, \"strips\");\n    that._gridGroup = renderer.g().attr({\n      class: \"dxc-grids-group\"\n    }).linkOn(root, \"grids\");\n    that._panesBorderGroup = renderer.g().attr({\n      class: \"dxc-border\"\n    }).linkOn(root, \"border\");\n    that._axesGroup = renderer.g().attr({\n      class: \"dxc-axes-group\"\n    }).linkOn(root, \"axes\");\n    that._executeAppendBeforeSeries(appendLabelsAxesGroup);\n    that._stripLabelAxesGroup = renderer.g().attr({\n      class: \"dxc-strips-labels-group\"\n    }).linkOn(root, \"strips-labels\");\n    that._constantLinesGroup.under = createConstantLinesGroup();\n    that._seriesGroup = renderer.g().attr({\n      class: \"dxc-series-group\"\n    }).linkOn(root, \"series\");\n    that._executeAppendAfterSeries(appendLabelsAxesGroup);\n    that._constantLinesGroup.above = createConstantLinesGroup();\n    that._scaleBreaksGroup = renderer.g().attr({\n      class: \"dxc-scale-breaks\"\n    }).linkOn(root, \"scale-breaks\");\n    that._labelsGroup = renderer.g().attr({\n      class: \"dxc-labels-group\"\n    }).linkOn(root, \"labels\");\n    that._crosshairCursorGroup = renderer.g().attr({\n      class: \"dxc-crosshair-cursor\"\n    }).linkOn(root, \"crosshair\");\n    that._legendGroup = renderer.g().attr({\n      class: \"dxc-legend\",\n      \"clip-path\": that._getCanvasClipRectID()\n    }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\n    that._scrollBarGroup = renderer.g().attr({\n      class: \"dxc-scroll-bar\"\n    }).linkOn(root, \"scroll-bar\");\n  },\n  _executeAppendBeforeSeries() {},\n  _executeAppendAfterSeries() {},\n  _disposeObjectsInArray: function (propName, fieldNames) {\n    _each(this[propName] || [], function (_, item) {\n      if (fieldNames && item) {\n        _each(fieldNames, function (_, field) {\n          item[field] && item[field].dispose();\n        });\n      } else {\n        item && item.dispose();\n      }\n    });\n    this[propName] = null;\n  },\n  _disposeCore: function () {\n    var that = this;\n    var disposeObject = function (propName) {\n      if (that[propName]) {\n        that[propName].dispose();\n        that[propName] = null;\n      }\n    };\n    var unlinkGroup = function (name) {\n      that[name].linkOff();\n    };\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n    that._renderer.stopAllAnimations();\n    disposeObjectsInArray.call(that, \"series\");\n    disposeObject(\"_tracker\");\n    disposeObject(\"_crosshair\");\n    that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\n    unlinkGroup(\"_stripsGroup\");\n    unlinkGroup(\"_gridGroup\");\n    unlinkGroup(\"_axesGroup\");\n    unlinkGroup(\"_constantLinesGroup\");\n    unlinkGroup(\"_stripLabelAxesGroup\");\n    unlinkGroup(\"_panesBorderGroup\");\n    unlinkGroup(\"_seriesGroup\");\n    unlinkGroup(\"_labelsGroup\");\n    unlinkGroup(\"_crosshairCursorGroup\");\n    unlinkGroup(\"_legendGroup\");\n    unlinkGroup(\"_scrollBarGroup\");\n    unlinkGroup(\"_scaleBreaksGroup\");\n    disposeObject(\"_canvasClipRect\");\n    disposeObject(\"_panesBackgroundGroup\");\n    disposeObject(\"_backgroundRect\");\n    disposeObject(\"_stripsGroup\");\n    disposeObject(\"_gridGroup\");\n    disposeObject(\"_axesGroup\");\n    disposeObject(\"_constantLinesGroup\");\n    disposeObject(\"_stripLabelAxesGroup\");\n    disposeObject(\"_panesBorderGroup\");\n    disposeObject(\"_seriesGroup\");\n    disposeObject(\"_labelsGroup\");\n    disposeObject(\"_crosshairCursorGroup\");\n    disposeObject(\"_legendGroup\");\n    disposeObject(\"_scrollBarGroup\");\n    disposeObject(\"_scaleBreaksGroup\");\n  },\n  _getAnimationOptions: function () {\n    return this._themeManager.getOptions(\"animation\");\n  },\n  _getDefaultSize: function () {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _getOption: function (name) {\n    return this._themeManager.getOptions(name);\n  },\n  _applySize: function (rect) {\n    this._rect = rect.slice();\n    if (!this._changes.has(\"FULL_RENDER\")) {\n      this._processRefreshData(RESIZE_REFRESH_ACTION);\n    }\n  },\n  _resize: function () {\n    this._doRender(this.__renderOptions || {\n      animate: false,\n      isResize: true\n    });\n  },\n  _trackerType: \"ChartTracker\",\n  _createTracker: function () {\n    this._tracker = new trackerModule[this._trackerType]({\n      seriesGroup: this._seriesGroup,\n      renderer: this._renderer,\n      tooltip: this._tooltip,\n      legend: this._legend,\n      eventTrigger: this._eventTrigger\n    });\n  },\n  _getTrackerSettings: function () {\n    return extend({\n      chart: this\n    }, this._getSelectionModes());\n  },\n  _getSelectionModes: function () {\n    var themeManager = this._themeManager;\n    return {\n      seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\n      pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\n    };\n  },\n  _updateTracker: function (trackerCanvases) {\n    this._tracker.update(this._getTrackerSettings());\n    this._tracker.setCanvases({\n      left: 0,\n      right: this._canvas.width,\n      top: 0,\n      bottom: this._canvas.height\n    }, trackerCanvases);\n  },\n  _createCanvasFromRect(rect) {\n    var currentCanvas = this._canvas;\n    return _setCanvasValues({\n      left: rect[0],\n      top: rect[1],\n      right: currentCanvas.width - rect[2],\n      bottom: currentCanvas.height - rect[3],\n      width: currentCanvas.width,\n      height: currentCanvas.height\n    });\n  },\n  _doRender: function (_options) {\n    if (0 === this._canvas.width && 0 === this._canvas.height) {\n      return;\n    }\n    this._resetIsReady();\n    var drawOptions = this._prepareDrawOptions(_options);\n    var recreateCanvas = drawOptions.recreateCanvas;\n    this._preserveOriginalCanvas();\n    if (recreateCanvas) {\n      this.__currentCanvas = this._canvas;\n    } else {\n      this._canvas = this.__currentCanvas;\n    }\n    recreateCanvas && this._updateCanvasClipRect(this._canvas);\n    this._canvas = this._createCanvasFromRect(this._rect);\n    this._renderer.stopAllAnimations(true);\n    this._cleanGroups();\n    var startTime = new Date();\n    this._renderElements(drawOptions);\n    this._lastRenderingTime = new Date() - startTime;\n  },\n  _preserveOriginalCanvas() {\n    this.__originalCanvas = this._canvas;\n    this._canvas = extend({}, this._canvas);\n  },\n  _layoutAxes: noop,\n  _renderElements: function (drawOptions) {\n    var that = this;\n    var preparedOptions = that._prepareToRender(drawOptions);\n    var isRotated = that._isRotated();\n    var isLegendInside = that._isLegendInside();\n    var trackerCanvases = [];\n    extend({}, that._canvas);\n    var argBusinessRange;\n    var zoomMinArg;\n    var zoomMaxArg;\n    that._renderer.lock();\n    if (drawOptions.drawLegend && that._legend) {\n      that._legendGroup.linkAppend();\n    }\n    that.layoutManager.setOptions(that._layoutManagerOptions());\n    var layoutTargets = that._getLayoutTargets();\n    this._layoutAxes(needSpace => {\n      var axisDrawOptions = needSpace ? extend({}, drawOptions, {\n        animate: false,\n        recreateCanvas: true\n      }) : drawOptions;\n      var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\n      that._shrinkAxes(needSpace, canvas);\n    });\n    that._applyClipRects(preparedOptions);\n    that._appendSeriesGroups();\n    that._createCrosshairCursor();\n    layoutTargets.forEach(_ref => {\n      var {\n        canvas: canvas\n      } = _ref;\n      trackerCanvases.push({\n        left: canvas.left,\n        right: canvas.width - canvas.right,\n        top: canvas.top,\n        bottom: canvas.height - canvas.bottom\n      });\n    });\n    if (that._scrollBar) {\n      argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\n      if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\n        zoomMinArg = zoomMaxArg = void 0;\n      } else {\n        zoomMinArg = argBusinessRange.minVisible;\n        zoomMaxArg = argBusinessRange.maxVisible;\n      }\n      that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg);\n    }\n    that._updateTracker(trackerCanvases);\n    that._updateLegendPosition(drawOptions, isLegendInside);\n    that._applyPointMarkersAutoHiding();\n    that._renderSeries(drawOptions, isRotated, isLegendInside);\n    that._renderer.unlock();\n  },\n  _updateLegendPosition: noop,\n  _createCrosshairCursor: noop,\n  _appendSeriesGroups: function () {\n    this._seriesGroup.linkAppend();\n    this._labelsGroup.linkAppend();\n    this._appendAdditionalSeriesGroups();\n  },\n  _renderSeries: function (drawOptions, isRotated, isLegendInside) {\n    this._calculateSeriesLayout(drawOptions, isRotated);\n    this._renderSeriesElements(drawOptions, isLegendInside);\n  },\n  _calculateSeriesLayout: function (drawOptions, isRotated) {\n    drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\n    this._updateSeriesDimensions(drawOptions);\n  },\n  _getArgFilter: () => () => true,\n  _getValFilter: series => () => true,\n  _getPointsToAnimation(series) {\n    var argViewPortFilter = this._getArgFilter();\n    return series.map(s => {\n      var valViewPortFilter = this._getValFilter(s);\n      return s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).length;\n    });\n  },\n  _renderSeriesElements: function (drawOptions, isLegendInside) {\n    var i;\n    var series = this.series;\n    var singleSeries;\n    var seriesLength = series.length;\n    var resolveLabelOverlapping = this._themeManager.getOptions(\"resolveLabelOverlapping\");\n    var pointsToAnimation = this._getPointsToAnimation(series);\n    for (i = 0; i < seriesLength; i++) {\n      singleSeries = series[i];\n      this._applyExtraSettings(singleSeries, drawOptions);\n      singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && this._renderer.animationEnabled(), drawOptions.hideLayoutLabels, this._getLegendCallBack(singleSeries));\n    }\n    if (\"none\" === resolveLabelOverlapping) {\n      this._adjustSeriesLabels(false);\n    } else {\n      this._locateLabels(resolveLabelOverlapping);\n    }\n    this._renderTrackers(isLegendInside);\n    this._tracker.repairTooltip();\n    this._renderExtraElements();\n    this._clearCanvas();\n    this._seriesElementsDrawn = true;\n  },\n  _changesApplied() {\n    if (this._seriesElementsDrawn) {\n      this._seriesElementsDrawn = false;\n      this._drawn();\n      this._renderCompleteHandler();\n    }\n  },\n  _locateLabels(resolveLabelOverlapping) {\n    this._resolveLabelOverlapping(resolveLabelOverlapping);\n  },\n  _renderExtraElements() {},\n  _clearCanvas: function () {\n    this._canvas = this.__originalCanvas;\n  },\n  _resolveLabelOverlapping: function (resolveLabelOverlapping) {\n    var func;\n    switch (resolveLabelOverlapping) {\n      case \"stack\":\n        func = this._resolveLabelOverlappingStack;\n        break;\n      case \"hide\":\n        func = this._resolveLabelOverlappingHide;\n        break;\n      case \"shift\":\n        func = this._resolveLabelOverlappingShift;\n    }\n    return isFunction(func) && func.call(this);\n  },\n  _getVisibleSeries: function () {\n    return grep(this.getAllSeries(), function (series) {\n      return series.isVisible();\n    });\n  },\n  _resolveLabelOverlappingHide: function () {\n    var labels = [];\n    var currentLabel;\n    var nextLabel;\n    var currentLabelRect;\n    var nextLabelRect;\n    var i;\n    var j;\n    var points;\n    var series = this._getVisibleSeries();\n    for (i = 0; i < series.length; i++) {\n      points = series[i].getVisiblePoints();\n      for (j = 0; j < points.length; j++) {\n        labels.push.apply(labels, points[j].getLabels());\n      }\n    }\n    for (i = 0; i < labels.length; i++) {\n      currentLabel = labels[i];\n      if (!currentLabel.isVisible()) {\n        continue;\n      }\n      currentLabelRect = currentLabel.getBoundingRect();\n      for (j = i + 1; j < labels.length; j++) {\n        nextLabel = labels[j];\n        nextLabelRect = nextLabel.getBoundingRect();\n        if (checkOverlapping(currentLabelRect, nextLabelRect)) {\n          nextLabel.draw(false);\n        }\n      }\n    }\n  },\n  _cleanGroups: function () {\n    this._stripsGroup.linkRemove().clear();\n    this._gridGroup.linkRemove().clear();\n    this._axesGroup.linkRemove().clear();\n    this._constantLinesGroup.above.clear();\n    this._stripLabelAxesGroup.linkRemove().clear();\n    this._labelsGroup.linkRemove().clear();\n    this._crosshairCursorGroup.linkRemove().clear();\n    this._scaleBreaksGroup.linkRemove().clear();\n  },\n  _allowLegendInsidePosition: () => false,\n  _createLegend: function () {\n    var legendSettings = getLegendSettings(this._legendDataField);\n    this._legend = new Legend({\n      renderer: this._renderer,\n      widget: this,\n      group: this._legendGroup,\n      backgroundClass: \"dxc-border\",\n      itemGroupClass: \"dxc-item\",\n      titleGroupClass: \"dxc-title\",\n      textField: legendSettings.textField,\n      getFormatObject: legendSettings.getFormatObject,\n      allowInsidePosition: this._allowLegendInsidePosition()\n    });\n    this._updateLegend();\n    this._layout.add(this._legend);\n  },\n  _updateLegend: function () {\n    var themeManager = this._themeManager;\n    var legendOptions = themeManager.getOptions(\"legend\");\n    var legendData = this._getLegendData();\n    legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\n    legendOptions._incidentOccurred = this._incidentOccurred;\n    this._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\n    this._change([\"LAYOUT\"]);\n  },\n  _prepareDrawOptions: function (drawOptions) {\n    var animationOptions = this._getAnimationOptions();\n    var options = extend({}, {\n      force: false,\n      adjustAxes: true,\n      drawLegend: true,\n      drawTitle: true,\n      animate: animationOptions.enabled,\n      animationPointsLimit: animationOptions.maxPointCountSupported\n    }, drawOptions, this.__renderOptions);\n    if (!_isDefined(options.recreateCanvas)) {\n      options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle;\n    }\n    return options;\n  },\n  _processRefreshData: function (newRefreshAction) {\n    var currentRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(this._currentRefreshData);\n    var newRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(newRefreshAction);\n    if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\n      this._currentRefreshData = newRefreshAction;\n    }\n    this._requestChange([\"REFRESH\"]);\n  },\n  _getLegendData: function () {\n    return _map(this._getLegendTargets(), function (item) {\n      var legendData = item.legendData;\n      var style = item.getLegendStyles;\n      var opacity = style.normal.opacity;\n      if (!item.visible) {\n        if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\n          opacity = DEFAULT_OPACITY;\n        }\n        legendData.textOpacity = DEFAULT_OPACITY;\n      }\n      var opacityStyle = {\n        opacity: opacity\n      };\n      legendData.states = {\n        hover: extend({}, style.hover, opacityStyle),\n        selection: extend({}, style.selection, opacityStyle),\n        normal: extend({}, style.normal, opacityStyle)\n      };\n      return legendData;\n    });\n  },\n  _getLegendOptions: function (item) {\n    return {\n      legendData: {\n        text: item[this._legendItemTextField],\n        id: item.index,\n        visible: true\n      },\n      getLegendStyles: item.getLegendStyles(),\n      visible: item.isVisible()\n    };\n  },\n  _disposeSeries(seriesIndex) {\n    var _that$series;\n    if (this.series) {\n      if (_isDefined(seriesIndex)) {\n        this.series[seriesIndex].dispose();\n        this.series.splice(seriesIndex, 1);\n      } else {\n        _each(this.series, (_, s) => s.dispose());\n        this.series.length = 0;\n      }\n    }\n    if (!(null !== (_that$series = this.series) && void 0 !== _that$series && _that$series.length)) {\n      this.series = [];\n    }\n  },\n  _disposeSeriesFamilies() {\n    _each(this.seriesFamilies || [], function (_, family) {\n      family.dispose();\n    });\n    this.seriesFamilies = null;\n    this._needHandleRenderComplete = true;\n  },\n  _optionChanged: function (arg) {\n    this._themeManager.resetOptions(arg.name);\n    this.callBase.apply(this, arguments);\n  },\n  _applyChanges() {\n    this._themeManager.update(this._options.silent());\n    this.callBase.apply(this, arguments);\n  },\n  _optionChangesMap: {\n    animation: \"ANIMATION\",\n    dataSource: \"DATA_SOURCE\",\n    palette: \"PALETTE\",\n    paletteExtensionMode: \"PALETTE\",\n    legend: \"FORCE_DATA_INIT\",\n    seriesTemplate: \"FORCE_DATA_INIT\",\n    export: \"FORCE_RENDER\",\n    valueAxis: \"AXES_AND_PANES\",\n    argumentAxis: \"AXES_AND_PANES\",\n    commonAxisSettings: \"AXES_AND_PANES\",\n    panes: \"AXES_AND_PANES\",\n    commonPaneSettings: \"AXES_AND_PANES\",\n    defaultPane: \"AXES_AND_PANES\",\n    containerBackgroundColor: \"AXES_AND_PANES\",\n    rotated: \"ROTATED\",\n    autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\n    customizePoint: \"REFRESH_SERIES_REINIT\",\n    customizeLabel: \"REFRESH_SERIES_REINIT\",\n    scrollBar: \"SCROLL_BAR\"\n  },\n  _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"USE_SPIDER_WEB\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\n  _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_FIRST_DRAWING\", \"FORCE_DRAWING\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\n  _change_ANIMATION: function () {\n    this._renderer.updateAnimationOptions(this._getAnimationOptions());\n  },\n  _change_DATA_SOURCE: function () {\n    this._needHandleRenderComplete = true;\n    this._updateDataSource();\n  },\n  _change_PALETTE: function () {\n    this._themeManager.updatePalette();\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_REFRESH_SERIES_DATA_INIT: function () {\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_DATA_INIT: function () {\n    if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\n      this._dataInit();\n    }\n  },\n  _change_FORCE_DATA_INIT: function () {\n    this._dataInit();\n  },\n  _change_REFRESH_SERIES_FAMILIES: function () {\n    this._processSeriesFamilies();\n    this._populateBusinessRange();\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_FORCE_RENDER: function () {\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_AXES_AND_PANES: function () {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_ROTATED: function () {\n    this._createScrollBar();\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_SERIES_REINIT: function () {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_AXES() {\n    _setCanvasValues(this._canvas);\n    this._reinitAxes();\n    this._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n  _change_SCROLL_BAR: function () {\n    this._createScrollBar();\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_REINIT: function () {\n    this._processRefreshData(REINIT_REFRESH_ACTION);\n  },\n  _change_FORCE_DRAWING: function () {\n    this._resetComponentsAnimation();\n  },\n  _change_FORCE_FIRST_DRAWING: function () {\n    this._resetComponentsAnimation(true);\n  },\n  _resetComponentsAnimation: function (isFirstDrawing) {\n    this.series.forEach(s => {\n      s.resetApplyingAnimation(isFirstDrawing);\n    });\n    this._resetAxesAnimation(isFirstDrawing);\n  },\n  _resetAxesAnimation: noop,\n  _refreshSeries: function (actionName) {\n    this.needToPopulateSeries = true;\n    this._requestChange([actionName]);\n  },\n  _change_CORRECT_AXIS() {\n    this._correctAxes();\n  },\n  _doRefresh: function () {\n    var methodName = this._currentRefreshData;\n    if (methodName) {\n      this._currentRefreshData = null;\n      this._renderer.stopAllAnimations(true);\n      this[methodName]();\n    }\n  },\n  _updateCanvasClipRect: function (canvas) {\n    var width = Math.max(canvas.width - canvas.left - canvas.right, 0);\n    var height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\n    this._canvasClipRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n    this._backgroundRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n  },\n  _getCanvasClipRectID: function () {\n    return this._canvasClipRect.id;\n  },\n  _dataSourceChangedHandler: function () {\n    if (this._changes.has(\"INIT\")) {\n      this._requestChange([\"DATA_INIT\"]);\n    } else {\n      this._requestChange([\"FORCE_DATA_INIT\"]);\n    }\n  },\n  _dataInit: function () {\n    this._dataSpecificInit(true);\n  },\n  _processSingleSeries: function (singleSeries) {\n    singleSeries.createPoints(false);\n  },\n  _handleSeriesDataUpdated() {\n    if (this._getVisibleSeries().some(s => s.useAggregation())) {\n      this._populateMarginOptions();\n    }\n    this.series.forEach(s => this._processSingleSeries(s), this);\n  },\n  _dataSpecificInit(needRedraw) {\n    if (!this.series || this.needToPopulateSeries) {\n      this.series = this._populateSeries();\n    }\n    this._repopulateSeries();\n    this._seriesPopulatedHandlerCore();\n    this._populateBusinessRange();\n    this._tracker.updateSeries(this.series, this._changes.has(\"INIT\"));\n    this._updateLegend();\n    if (needRedraw) {\n      this._requestChange([\"FULL_RENDER\"]);\n    }\n  },\n  _forceRender: function () {\n    this._doRender({\n      force: true\n    });\n  },\n  _repopulateSeries: function () {\n    var themeManager = this._themeManager;\n    var data = this._dataSourceItems();\n    var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n    if (seriesTemplate) {\n      this._populateSeries(data);\n    }\n    this._groupSeries();\n    var parsedData = validateData(data, this._groupsData, this._incidentOccurred, dataValidatorOptions);\n    themeManager.resetPalette();\n    this.series.forEach(function (singleSeries) {\n      singleSeries.updateData(parsedData[singleSeries.getArgumentField()]);\n    });\n    this._handleSeriesDataUpdated();\n  },\n  _renderCompleteHandler: function () {\n    var allSeriesInited = true;\n    if (this._needHandleRenderComplete) {\n      _each(this.series, function (_, s) {\n        allSeriesInited = allSeriesInited && s.canRenderCompleteHandle();\n      });\n      if (allSeriesInited) {\n        this._needHandleRenderComplete = false;\n        this._eventTrigger(\"done\", {\n          target: this\n        });\n      }\n    }\n  },\n  _dataIsReady: function () {\n    return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded();\n  },\n  _populateSeriesOptions(data) {\n    var that = this;\n    var themeManager = that._themeManager;\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n    var seriesOptions = seriesTemplate ? processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\n    var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\n    var extraOptions = that._getExtraOptions();\n    var particularSeriesOptions;\n    var seriesTheme;\n    var seriesThemes = [];\n    var seriesVisibilityChanged = target => {\n      that._specialProcessSeries();\n      that._populateBusinessRange(target && target.getValueAxis(), true);\n      that._renderer.stopAllAnimations(true);\n      that._updateLegend();\n      that._requestChange([\"FULL_RENDER\"]);\n    };\n    for (var i = 0; i < allSeriesOptions.length; i++) {\n      particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\n      if (!_isDefined(particularSeriesOptions.name) || \"\" === particularSeriesOptions.name) {\n        particularSeriesOptions.name = \"Series \" + (i + 1).toString();\n      }\n      particularSeriesOptions.rotated = that._isRotated();\n      particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\n      particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\n      particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\n      particularSeriesOptions.incidentOccurred = that._incidentOccurred;\n      seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\n      if (that._checkPaneName(seriesTheme)) {\n        seriesThemes.push(seriesTheme);\n      }\n    }\n    return seriesThemes;\n  },\n  _populateSeries(data) {\n    var _that$series2;\n    var that = this;\n    var seriesBasis = [];\n    var incidentOccurred = that._incidentOccurred;\n    var seriesThemes = that._populateSeriesOptions(data);\n    var particularSeries;\n    var disposeSeriesFamilies = false;\n    that.needToPopulateSeries = false;\n    _each(seriesThemes, (_, theme) => {\n      var curSeries = that.series && that.series.filter(s => s.name === theme.name && -1 === seriesBasis.map(sb => sb.series).indexOf(s))[0];\n      if (curSeries && curSeries.type === theme.type) {\n        seriesBasis.push({\n          series: curSeries,\n          options: theme\n        });\n      } else {\n        seriesBasis.push({\n          options: theme\n        });\n        disposeSeriesFamilies = true;\n      }\n    });\n    0 !== (null === (_that$series2 = that.series) || void 0 === _that$series2 ? void 0 : _that$series2.length) && that._tracker.clearHover();\n    _reverseEach(that.series, (index, series) => {\n      if (!seriesBasis.some(s => series === s.series)) {\n        that._disposeSeries(index);\n        disposeSeriesFamilies = true;\n      }\n    });\n    !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(sb => sb.series.name !== seriesThemes[sb.series.index].name));\n    that.series = [];\n    disposeSeriesFamilies && that._disposeSeriesFamilies();\n    that._themeManager.resetPalette();\n    var eventPipe = function (data) {\n      that.series.forEach(function (currentSeries) {\n        currentSeries.notify(data);\n      });\n    };\n    _each(seriesBasis, (_, basis) => {\n      var _that$_argumentAxes$f, _that$_argumentAxes;\n      var seriesTheme = basis.options;\n      var argumentAxis = null !== (_that$_argumentAxes$f = null === (_that$_argumentAxes = that._argumentAxes) || void 0 === _that$_argumentAxes ? void 0 : _that$_argumentAxes.filter(a => a.pane === seriesTheme.pane)[0]) && void 0 !== _that$_argumentAxes$f ? _that$_argumentAxes$f : that.getArgumentAxis();\n      var renderSettings = {\n        commonSeriesModes: that._getSelectionModes(),\n        argumentAxis: argumentAxis,\n        valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\n      };\n      if (basis.series) {\n        particularSeries = basis.series;\n        particularSeries.updateOptions(seriesTheme, renderSettings);\n      } else {\n        particularSeries = new Series(extend({\n          renderer: that._renderer,\n          seriesGroup: that._seriesGroup,\n          labelsGroup: that._labelsGroup,\n          eventTrigger: that._eventTrigger,\n          eventPipe: eventPipe,\n          incidentOccurred: incidentOccurred\n        }, renderSettings), seriesTheme);\n      }\n      if (!particularSeries.isUpdated) {\n        incidentOccurred(\"E2101\", [seriesTheme.type]);\n      } else {\n        particularSeries.index = that.series.length;\n        that.series.push(particularSeries);\n      }\n    });\n    return that.series;\n  },\n  getStackedPoints: function (point) {\n    var stackName = point.series.getStackName();\n    return this._getVisibleSeries().reduce((stackPoints, series) => {\n      if (!_isDefined(series.getStackName()) || !_isDefined(stackName) || stackName === series.getStackName()) {\n        stackPoints = stackPoints.concat(series.getPointsByArg(point.argument));\n      }\n      return stackPoints;\n    }, []);\n  },\n  getAllSeries: function () {\n    return (this.series || []).slice();\n  },\n  getSeriesByName: function (name) {\n    var found = null;\n    _each(this.series, function (i, singleSeries) {\n      if (singleSeries.name === name) {\n        found = singleSeries;\n        return false;\n      }\n    });\n    return found;\n  },\n  getSeriesByPos: function (pos) {\n    return (this.series || [])[pos];\n  },\n  clearSelection: function () {\n    this._tracker.clearSelection();\n  },\n  hideTooltip: function () {\n    this._tracker._hideTooltip();\n  },\n  clearHover() {\n    this._tracker.clearHover();\n  },\n  render: function (renderOptions) {\n    var that = this;\n    that.__renderOptions = renderOptions;\n    that.__forceRender = renderOptions && renderOptions.force;\n    that.callBase.apply(that, arguments);\n    that.__renderOptions = that.__forceRender = null;\n    return that;\n  },\n  refresh: function () {\n    this._disposeSeries();\n    this._disposeSeriesFamilies();\n    this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"]);\n  },\n  _getMinSize() {\n    var adaptiveLayout = this._layoutManagerOptions();\n    return [adaptiveLayout.width, adaptiveLayout.height];\n  },\n  _change_REFRESH() {\n    if (!this._changes.has(\"INIT\")) {\n      this._doRefresh();\n    } else {\n      this._currentRefreshData = null;\n    }\n  },\n  _change_FULL_RENDER() {\n    this._forceRender();\n  },\n  _change_INIT() {\n    this._reinit();\n  },\n  _stopCurrentHandling: function () {\n    this._tracker.stopCurrentHandling();\n  }\n});\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\";\n});\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\";\n});\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\";\n});\nimport { plugin as exportPlugin } from \"../core/export\";\nimport { plugin as titlePlugin } from \"../core/title\";\nimport { plugin as dataSourcePlugin } from \"../core/data_source\";\nimport { plugin as tooltipPlugin } from \"../core/tooltip\";\nimport { plugin as loadingIndicatorPlugin } from \"../core/loading_indicator\";\nBaseChart.addPlugin(exportPlugin);\nBaseChart.addPlugin(titlePlugin);\nBaseChart.addPlugin(dataSourcePlugin);\nBaseChart.addPlugin(tooltipPlugin);\nBaseChart.addPlugin(loadingIndicatorPlugin);\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\nBaseChart.prototype._change_TITLE = function () {\n  _change_TITLE.apply(this, arguments);\n  this._change([\"FORCE_RENDER\"]);\n};","map":{"version":3,"names":["noop","grep","eventsEngine","isDefined","_isDefined","isFunction","each","_each","reverseEach","_reverseEach","extend","isTouchEvent","isPointerEvent","BaseWidget","Legend","validateData","Series","ThemeManager","LayoutManager","trackerModule","map","_map","setCanvasValues","_setCanvasValues","processSeriesTemplate","_isArray","Array","isArray","REINIT_REFRESH_ACTION","REINIT_DATA_SOURCE_REFRESH_ACTION","DATA_INIT_REFRESH_ACTION","FORCE_RENDER_REFRESH_ACTION","RESIZE_REFRESH_ACTION","ACTIONS_BY_PRIORITY","DEFAULT_OPACITY","REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS","REFRESH_SERIES_FAMILIES_ACTION_OPTIONS","FORCE_RENDER_REFRESH_ACTION_OPTIONS","FONT","checkHeightRollingStock","rollingStocks","stubCanvas","canvasSize","end","start","size","forEach","rollingStock","getBoundingRect","width","findAndKillSmallValue","smallestObject","reduce","prev","index","value","getLabels","draw","checkStackOverlap","i","j","iLength","jLength","overlap","length","checkStacksOverlapping","resolveLabelOverlappingInOneDirection","points","canvas","isRotated","isInverted","shiftFunction","customSorting","arguments","left","top","right","height","bottom","hasStackedSeries","sortRollingStocks","p","series","isStackedSeries","isFullStackedSeries","l","isVisible","push","RollingStock","reverse","sortRollingStocksByValue","rollingStocksTmp","slice","sort","a","b","getInitialPosition","indexOf","prepareOverlapStacks","moveRollingStock","firstRolling","secondRolling","inTwoSides","firstRect","secondRect","oppositeOverlapping","oppositeStart","oppositeEnd","positiveRollingStocks","negativeRollingStocks","stock","unshift","concat","currentRollingStock","root","toChain","nextRollingStock","currentBBox","nextBBox","rollingStocksIsOut","setRollingStockInCanvas","label","bBox","x","y","endX","endY","labels","_bBox","_initialPosition","prototype","nextRollingStockBBox","shift","_changeBoxWidth","shiftLength","coords","hideInsideLabel","getData","getLegendFields","name","nameField","colorField","indexField","getLegendSettings","legendDataField","formatObjectFields","getFormatObject","data","res","id","states","normal","fill","text","textField","checkOverlapping","overlapping","BaseChart","inherit","_eventsMap","onSeriesClick","onPointClick","onArgumentAxisClick","onLegendClick","onSeriesSelectionChanged","onPointSelectionChanged","onSeriesHoverChanged","onPointHoverChanged","onDone","actionSettings","excludeValidators","onZoomStart","onZoomEnd","_fontFields","_rootClassPrefix","_rootClass","_initialChanges","_themeDependentChanges","_getThemeManagerOptions","themeOptions","callBase","apply","options","option","_createThemeManager","chartOption","themeManager","setTheme","theme","rtlEnabled","_initCore","_canvasClipRect","_renderer","clipRect","_createHtmlStructure","_createLegend","_createTracker","_needHandleRenderComplete","layoutManager","_createScrollBar","on","_$element","event","preventDefault","_getLayoutItems","_layoutManagerOptions","_themeManager","getOptions","_reinit","_canvas","_reinitAxes","_requestChange","_correctAxes","that","renderer","createConstantLinesGroup","g","attr","class","linkOn","_constantLinesGroup","dispose","under","above","linkOff","clear","linkRemove","linkAppend","_labelsAxesGroup","appendLabelsAxesGroup","_backgroundRect","rect","opacity","append","_panesBackgroundGroup","_stripsGroup","_gridGroup","_panesBorderGroup","_axesGroup","_executeAppendBeforeSeries","_stripLabelAxesGroup","_seriesGroup","_executeAppendAfterSeries","_scaleBreaksGroup","_labelsGroup","_crosshairCursorGroup","_legendGroup","_getCanvasClipRectID","enableLinks","_scrollBarGroup","_disposeObjectsInArray","propName","fieldNames","_","item","field","_disposeCore","disposeObject","unlinkGroup","disposeObjectsInArray","stopAllAnimations","call","_userOptions","_groupsData","_getAnimationOptions","_getDefaultSize","_getOption","_applySize","_rect","_changes","has","_processRefreshData","_resize","_doRender","__renderOptions","animate","isResize","_trackerType","_tracker","seriesGroup","tooltip","_tooltip","legend","_legend","eventTrigger","_eventTrigger","_getTrackerSettings","chart","_getSelectionModes","seriesSelectionMode","pointSelectionMode","_updateTracker","trackerCanvases","update","setCanvases","_createCanvasFromRect","currentCanvas","_options","_resetIsReady","drawOptions","_prepareDrawOptions","recreateCanvas","_preserveOriginalCanvas","__currentCanvas","_updateCanvasClipRect","_cleanGroups","startTime","Date","_renderElements","_lastRenderingTime","__originalCanvas","_layoutAxes","preparedOptions","_prepareToRender","_isRotated","isLegendInside","_isLegendInside","argBusinessRange","zoomMinArg","zoomMaxArg","lock","drawLegend","setOptions","layoutTargets","_getLayoutTargets","needSpace","axisDrawOptions","_renderAxes","_shrinkAxes","_applyClipRects","_appendSeriesGroups","_createCrosshairCursor","_ref","_scrollBar","_argumentAxes","getTranslator","getBusinessRange","axisType","categories","min","max","minVisible","maxVisible","init","valueMarginsEnabled","setPosition","_updateLegendPosition","_applyPointMarkersAutoHiding","_renderSeries","unlock","_appendAdditionalSeriesGroups","_calculateSeriesLayout","_renderSeriesElements","hideLayoutLabels","needMoreSpaceForPanesCanvas","keepLabels","_updateSeriesDimensions","_getArgFilter","_getValFilter","_getPointsToAnimation","argViewPortFilter","s","valViewPortFilter","getPoints","filter","visible","argument","getMinValue","getMaxValue","singleSeries","seriesLength","resolveLabelOverlapping","pointsToAnimation","_applyExtraSettings","animationPointsLimit","animationEnabled","_getLegendCallBack","_adjustSeriesLabels","_locateLabels","_renderTrackers","repairTooltip","_renderExtraElements","_clearCanvas","_seriesElementsDrawn","_changesApplied","_drawn","_renderCompleteHandler","_resolveLabelOverlapping","func","_resolveLabelOverlappingStack","_resolveLabelOverlappingHide","_resolveLabelOverlappingShift","_getVisibleSeries","getAllSeries","currentLabel","nextLabel","currentLabelRect","nextLabelRect","getVisiblePoints","_allowLegendInsidePosition","legendSettings","_legendDataField","widget","group","backgroundClass","itemGroupClass","titleGroupClass","allowInsidePosition","_updateLegend","_layout","add","legendOptions","legendData","_getLegendData","containerBackgroundColor","_incidentOccurred","title","_change","animationOptions","force","adjustAxes","drawTitle","enabled","maxPointCountSupported","newRefreshAction","currentRefreshActionPosition","_currentRefreshData","newRefreshActionPosition","_getLegendTargets","style","getLegendStyles","textOpacity","opacityStyle","hover","selection","_getLegendOptions","_legendItemTextField","_disposeSeries","seriesIndex","_that$series","splice","_disposeSeriesFamilies","seriesFamilies","family","_optionChanged","arg","resetOptions","_applyChanges","silent","_optionChangesMap","animation","dataSource","palette","paletteExtensionMode","seriesTemplate","export","valueAxis","argumentAxis","commonAxisSettings","panes","commonPaneSettings","defaultPane","rotated","autoHidePointMarkers","customizePoint","customizeLabel","scrollBar","_optionChangesOrder","_customChangesOrder","_change_ANIMATION","updateAnimationOptions","_change_DATA_SOURCE","_updateDataSource","_change_PALETTE","updatePalette","_refreshSeries","_change_REFRESH_SERIES_DATA_INIT","_change_DATA_INIT","needToPopulateSeries","_dataInit","_change_FORCE_DATA_INIT","_change_REFRESH_SERIES_FAMILIES","_processSeriesFamilies","_populateBusinessRange","_change_FORCE_RENDER","_change_AXES_AND_PANES","_change_ROTATED","_change_REFRESH_SERIES_REINIT","_change_REFRESH_AXES","_change_SCROLL_BAR","_change_REINIT","_change_FORCE_DRAWING","_resetComponentsAnimation","_change_FORCE_FIRST_DRAWING","isFirstDrawing","resetApplyingAnimation","_resetAxesAnimation","actionName","_change_CORRECT_AXIS","_doRefresh","methodName","Math","_dataSourceChangedHandler","_dataSpecificInit","_processSingleSeries","createPoints","_handleSeriesDataUpdated","some","useAggregation","_populateMarginOptions","needRedraw","_populateSeries","_repopulateSeries","_seriesPopulatedHandlerCore","updateSeries","_forceRender","_dataSourceItems","dataValidatorOptions","_groupSeries","parsedData","resetPalette","updateData","getArgumentField","allSeriesInited","canRenderCompleteHandle","target","_dataIsReady","_dataIsLoaded","_populateSeriesOptions","seriesOptions","allSeriesOptions","extraOptions","_getExtraOptions","particularSeriesOptions","seriesTheme","seriesThemes","seriesVisibilityChanged","_specialProcessSeries","getValueAxis","toString","visibilityChanged","incidentOccurred","_checkPaneName","_that$series2","seriesBasis","particularSeries","disposeSeriesFamilies","curSeries","sb","type","clearHover","eventPipe","currentSeries","notify","basis","_that$_argumentAxes$f","_that$_argumentAxes","pane","getArgumentAxis","renderSettings","commonSeriesModes","_getValueAxis","axis","updateOptions","labelsGroup","isUpdated","getStackedPoints","point","stackName","getStackName","stackPoints","getPointsByArg","getSeriesByName","found","getSeriesByPos","pos","clearSelection","hideTooltip","_hideTooltip","render","renderOptions","__forceRender","refresh","_getMinSize","adaptiveLayout","_change_REFRESH","_change_FULL_RENDER","_change_INIT","_stopCurrentHandling","stopCurrentHandling","plugin","exportPlugin","titlePlugin","dataSourcePlugin","tooltipPlugin","loadingIndicatorPlugin","addPlugin","_change_TITLE"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/chart_components/base_chart.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/chart_components/base_chart.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop,\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined as _isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each as _each,\r\n    reverseEach as _reverseEach\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isTouchEvent,\r\n    isPointerEvent\r\n} from \"../../events/utils/index\";\r\nimport BaseWidget from \"../core/base_widget\";\r\nimport {\r\n    Legend\r\n} from \"../components/legend\";\r\nimport {\r\n    validateData\r\n} from \"../components/data_validator\";\r\nimport {\r\n    Series\r\n} from \"../series/base_series\";\r\nimport {\r\n    ThemeManager\r\n} from \"../components/chart_theme_manager\";\r\nimport {\r\n    LayoutManager\r\n} from \"./layout_manager\";\r\nimport * as trackerModule from \"./tracker\";\r\nimport {\r\n    map as _map,\r\n    setCanvasValues as _setCanvasValues,\r\n    processSeriesTemplate\r\n} from \"../core/utils\";\r\nvar _isArray = Array.isArray;\r\nvar REINIT_REFRESH_ACTION = \"_reinit\";\r\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\r\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\r\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\r\nvar RESIZE_REFRESH_ACTION = \"_resize\";\r\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\r\nvar DEFAULT_OPACITY = .3;\r\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\r\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"minBubbleSize\", \"maxBubbleSize\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\r\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"stickyHovering\"];\r\nvar FONT = \"font\";\r\n\r\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\r\n    var canvasSize = stubCanvas.end - stubCanvas.start;\r\n    var size = 0;\r\n    rollingStocks.forEach((function(rollingStock) {\r\n        size += rollingStock.getBoundingRect().width\r\n    }));\r\n    while (canvasSize < size) {\r\n        size -= findAndKillSmallValue(rollingStocks)\r\n    }\r\n}\r\n\r\nfunction findAndKillSmallValue(rollingStocks) {\r\n    var smallestObject = rollingStocks.reduce((function(prev, rollingStock, index) {\r\n        if (!rollingStock) {\r\n            return prev\r\n        }\r\n        var value = rollingStock.value();\r\n        return value < prev.value ? {\r\n            value: value,\r\n            rollingStock: rollingStock,\r\n            index: index\r\n        } : prev\r\n    }), {\r\n        rollingStock: void 0,\r\n        value: 1 / 0,\r\n        index: void 0\r\n    });\r\n    smallestObject.rollingStock.getLabels()[0].draw(false);\r\n    var width = smallestObject.rollingStock.getBoundingRect().width;\r\n    rollingStocks[smallestObject.index] = null;\r\n    return width\r\n}\r\n\r\nfunction checkStackOverlap(rollingStocks) {\r\n    var i;\r\n    var j;\r\n    var iLength;\r\n    var jLength;\r\n    var overlap = false;\r\n    for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\r\n        for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\r\n            if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\r\n                overlap = true;\r\n                break\r\n            }\r\n        }\r\n        if (overlap) {\r\n            break\r\n        }\r\n    }\r\n    return overlap\r\n}\r\n\r\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, isInverted, shiftFunction) {\r\n    var customSorting = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : () => 0;\r\n    var rollingStocks = [];\r\n    var stubCanvas = {\r\n        start: isRotated ? canvas.left : canvas.top,\r\n        end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n    };\r\n    var hasStackedSeries = false;\r\n    var sortRollingStocks;\r\n    points.forEach((function(p) {\r\n        if (!p) {\r\n            return\r\n        }\r\n        hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\r\n        p.getLabels().forEach((function(l) {\r\n            l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction))\r\n        }))\r\n    }));\r\n    if (hasStackedSeries) {\r\n        !isRotated ^ isInverted && rollingStocks.reverse();\r\n        sortRollingStocks = !isInverted ? sortRollingStocksByValue(rollingStocks) : rollingStocks\r\n    } else {\r\n        var rollingStocksTmp = rollingStocks.slice();\r\n        sortRollingStocks = rollingStocks.sort((function(a, b) {\r\n            return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b)\r\n        }))\r\n    }\r\n    if (!checkStackOverlap(sortRollingStocks)) {\r\n        return false\r\n    }\r\n    checkHeightRollingStock(sortRollingStocks, stubCanvas);\r\n    prepareOverlapStacks(sortRollingStocks);\r\n    sortRollingStocks.reverse();\r\n    moveRollingStock(sortRollingStocks, stubCanvas);\r\n    return true\r\n}\r\n\r\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\r\n    if (!firstRolling || !secondRolling) {\r\n        return\r\n    }\r\n    var firstRect = firstRolling.getBoundingRect();\r\n    var secondRect = secondRolling.getBoundingRect();\r\n    var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\r\n    return firstRect.end > secondRect.start && oppositeOverlapping\r\n}\r\n\r\nfunction sortRollingStocksByValue(rollingStocks) {\r\n    var positiveRollingStocks = [];\r\n    var negativeRollingStocks = [];\r\n    rollingStocks.forEach(stock => {\r\n        if (stock.value() > 0) {\r\n            positiveRollingStocks.push(stock)\r\n        } else {\r\n            negativeRollingStocks.unshift(stock)\r\n        }\r\n    });\r\n    return positiveRollingStocks.concat(negativeRollingStocks)\r\n}\r\n\r\nfunction prepareOverlapStacks(rollingStocks) {\r\n    var i;\r\n    var currentRollingStock;\r\n    var root;\r\n    for (i = 0; i < rollingStocks.length - 1; i++) {\r\n        currentRollingStock = root || rollingStocks[i];\r\n        if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\r\n            currentRollingStock.toChain(rollingStocks[i + 1]);\r\n            rollingStocks[i + 1] = null;\r\n            root = currentRollingStock\r\n        } else {\r\n            root = rollingStocks[i + 1] || currentRollingStock\r\n        }\r\n    }\r\n}\r\n\r\nfunction moveRollingStock(rollingStocks, canvas) {\r\n    var i;\r\n    var j;\r\n    var currentRollingStock;\r\n    var nextRollingStock;\r\n    var currentBBox;\r\n    var nextBBox;\r\n    for (i = 0; i < rollingStocks.length; i++) {\r\n        currentRollingStock = rollingStocks[i];\r\n        if (rollingStocksIsOut(currentRollingStock, canvas)) {\r\n            currentBBox = currentRollingStock.getBoundingRect();\r\n            for (j = i + 1; j < rollingStocks.length; j++) {\r\n                nextRollingStock = rollingStocks[j];\r\n                if (!nextRollingStock) {\r\n                    continue\r\n                }\r\n                nextBBox = nextRollingStock.getBoundingRect();\r\n                if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\r\n                    nextRollingStock.toChain(currentRollingStock);\r\n                    rollingStocks[i] = currentRollingStock = null;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas)\r\n    }\r\n}\r\n\r\nfunction rollingStocksIsOut(rollingStock, canvas) {\r\n    return rollingStock && rollingStock.getBoundingRect().end > canvas.end\r\n}\r\n\r\nfunction RollingStock(label, isRotated, shiftFunction) {\r\n    var bBox = label.getBoundingRect();\r\n    var x = bBox.x;\r\n    var y = bBox.y;\r\n    var endX = bBox.x + bBox.width;\r\n    var endY = bBox.y + bBox.height;\r\n    this.labels = [label];\r\n    this.shiftFunction = shiftFunction;\r\n    this._bBox = {\r\n        start: isRotated ? x : y,\r\n        width: isRotated ? bBox.width : bBox.height,\r\n        end: isRotated ? endX : endY,\r\n        oppositeStart: isRotated ? y : x,\r\n        oppositeEnd: isRotated ? endY : endX\r\n    };\r\n    this._initialPosition = isRotated ? bBox.x : bBox.y;\r\n    return this\r\n}\r\nRollingStock.prototype = {\r\n    toChain: function(nextRollingStock) {\r\n        var nextRollingStockBBox = nextRollingStock.getBoundingRect();\r\n        nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\r\n        this._changeBoxWidth(nextRollingStockBBox.width);\r\n        this.labels = this.labels.concat(nextRollingStock.labels)\r\n    },\r\n    getBoundingRect: function() {\r\n        return this._bBox\r\n    },\r\n    shift: function(shiftLength) {\r\n        var shiftFunction = this.shiftFunction;\r\n        _each(this.labels, (function(index, label) {\r\n            var bBox = label.getBoundingRect();\r\n            var coords = shiftFunction(bBox, shiftLength);\r\n            if (!label.hideInsideLabel(coords)) {\r\n                label.shift(coords.x, coords.y)\r\n            }\r\n        }));\r\n        this._bBox.end -= shiftLength;\r\n        this._bBox.start -= shiftLength\r\n    },\r\n    setRollingStockInCanvas: function(canvas) {\r\n        if (this._bBox.end > canvas.end) {\r\n            this.shift(this._bBox.end - canvas.end)\r\n        }\r\n    },\r\n    getLabels: function() {\r\n        return this.labels\r\n    },\r\n    value() {\r\n        return this.labels[0].getData().value\r\n    },\r\n    getInitialPosition: function() {\r\n        return this._initialPosition\r\n    },\r\n    _changeBoxWidth: function(width) {\r\n        this._bBox.end += width;\r\n        this._bBox.width += width\r\n    }\r\n};\r\n\r\nfunction getLegendFields(name) {\r\n    return {\r\n        nameField: name + \"Name\",\r\n        colorField: name + \"Color\",\r\n        indexField: name + \"Index\"\r\n    }\r\n}\r\n\r\nfunction getLegendSettings(legendDataField) {\r\n    var formatObjectFields = getLegendFields(legendDataField);\r\n    return {\r\n        getFormatObject: function(data) {\r\n            var res = {};\r\n            res[formatObjectFields.indexField] = data.id;\r\n            res[formatObjectFields.colorField] = data.states.normal.fill;\r\n            res[formatObjectFields.nameField] = data.text;\r\n            return res\r\n        },\r\n        textField: formatObjectFields.nameField\r\n    }\r\n}\r\n\r\nfunction checkOverlapping(firstRect, secondRect) {\r\n    return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height)\r\n}\r\nexport var overlapping = {\r\n    resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\r\n};\r\nexport var BaseChart = BaseWidget.inherit({\r\n    _eventsMap: {\r\n        onSeriesClick: {\r\n            name: \"seriesClick\"\r\n        },\r\n        onPointClick: {\r\n            name: \"pointClick\"\r\n        },\r\n        onArgumentAxisClick: {\r\n            name: \"argumentAxisClick\"\r\n        },\r\n        onLegendClick: {\r\n            name: \"legendClick\"\r\n        },\r\n        onSeriesSelectionChanged: {\r\n            name: \"seriesSelectionChanged\"\r\n        },\r\n        onPointSelectionChanged: {\r\n            name: \"pointSelectionChanged\"\r\n        },\r\n        onSeriesHoverChanged: {\r\n            name: \"seriesHoverChanged\"\r\n        },\r\n        onPointHoverChanged: {\r\n            name: \"pointHoverChanged\"\r\n        },\r\n        onDone: {\r\n            name: \"done\",\r\n            actionSettings: {\r\n                excludeValidators: [\"disabled\"]\r\n            }\r\n        },\r\n        onZoomStart: {\r\n            name: \"zoomStart\"\r\n        },\r\n        onZoomEnd: {\r\n            name: \"zoomEnd\"\r\n        }\r\n    },\r\n    _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\r\n    _rootClassPrefix: \"dxc\",\r\n    _rootClass: \"dxc-chart\",\r\n    _initialChanges: [\"INIT\"],\r\n    _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\r\n    _getThemeManagerOptions() {\r\n        var themeOptions = this.callBase.apply(this, arguments);\r\n        themeOptions.options = this.option();\r\n        return themeOptions\r\n    },\r\n    _createThemeManager: function() {\r\n        var chartOption = this.option();\r\n        var themeManager = new ThemeManager(this._getThemeManagerOptions());\r\n        themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\r\n        return themeManager\r\n    },\r\n    _initCore: function() {\r\n        this._canvasClipRect = this._renderer.clipRect();\r\n        this._createHtmlStructure();\r\n        this._createLegend();\r\n        this._createTracker();\r\n        this._needHandleRenderComplete = true;\r\n        this.layoutManager = new LayoutManager;\r\n        this._createScrollBar();\r\n        eventsEngine.on(this._$element, \"contextmenu\", (function(event) {\r\n            if (isTouchEvent(event) || isPointerEvent(event)) {\r\n                event.preventDefault()\r\n            }\r\n        }));\r\n        eventsEngine.on(this._$element, \"MSHoldVisual\", (function(event) {\r\n            event.preventDefault()\r\n        }))\r\n    },\r\n    _getLayoutItems: noop,\r\n    _layoutManagerOptions: function() {\r\n        return this._themeManager.getOptions(\"adaptiveLayout\")\r\n    },\r\n    _reinit() {\r\n        _setCanvasValues(this._canvas);\r\n        this._reinitAxes();\r\n        this._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _correctAxes: noop,\r\n    _createHtmlStructure: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var root = renderer.root;\r\n        var createConstantLinesGroup = function() {\r\n            return renderer.g().attr({\r\n                class: \"dxc-constant-lines-group\"\r\n            }).linkOn(root, \"constant-lines\")\r\n        };\r\n        that._constantLinesGroup = {\r\n            dispose: function() {\r\n                this.under.dispose();\r\n                this.above.dispose()\r\n            },\r\n            linkOff: function() {\r\n                this.under.linkOff();\r\n                this.above.linkOff()\r\n            },\r\n            clear: function() {\r\n                this.under.linkRemove().clear();\r\n                this.above.linkRemove().clear()\r\n            },\r\n            linkAppend: function() {\r\n                this.under.linkAppend();\r\n                this.above.linkAppend()\r\n            }\r\n        };\r\n        that._labelsAxesGroup = renderer.g().attr({\r\n            class: \"dxc-elements-axes-group\"\r\n        });\r\n        var appendLabelsAxesGroup = () => {\r\n            that._labelsAxesGroup.linkOn(root, \"elements\")\r\n        };\r\n        that._backgroundRect = renderer.rect().attr({\r\n            fill: \"gray\",\r\n            opacity: 1e-4\r\n        }).append(root);\r\n        that._panesBackgroundGroup = renderer.g().attr({\r\n            class: \"dxc-background\"\r\n        }).append(root);\r\n        that._stripsGroup = renderer.g().attr({\r\n            class: \"dxc-strips-group\"\r\n        }).linkOn(root, \"strips\");\r\n        that._gridGroup = renderer.g().attr({\r\n            class: \"dxc-grids-group\"\r\n        }).linkOn(root, \"grids\");\r\n        that._panesBorderGroup = renderer.g().attr({\r\n            class: \"dxc-border\"\r\n        }).linkOn(root, \"border\");\r\n        that._axesGroup = renderer.g().attr({\r\n            class: \"dxc-axes-group\"\r\n        }).linkOn(root, \"axes\");\r\n        that._executeAppendBeforeSeries(appendLabelsAxesGroup);\r\n        that._stripLabelAxesGroup = renderer.g().attr({\r\n            class: \"dxc-strips-labels-group\"\r\n        }).linkOn(root, \"strips-labels\");\r\n        that._constantLinesGroup.under = createConstantLinesGroup();\r\n        that._seriesGroup = renderer.g().attr({\r\n            class: \"dxc-series-group\"\r\n        }).linkOn(root, \"series\");\r\n        that._executeAppendAfterSeries(appendLabelsAxesGroup);\r\n        that._constantLinesGroup.above = createConstantLinesGroup();\r\n        that._scaleBreaksGroup = renderer.g().attr({\r\n            class: \"dxc-scale-breaks\"\r\n        }).linkOn(root, \"scale-breaks\");\r\n        that._labelsGroup = renderer.g().attr({\r\n            class: \"dxc-labels-group\"\r\n        }).linkOn(root, \"labels\");\r\n        that._crosshairCursorGroup = renderer.g().attr({\r\n            class: \"dxc-crosshair-cursor\"\r\n        }).linkOn(root, \"crosshair\");\r\n        that._legendGroup = renderer.g().attr({\r\n            class: \"dxc-legend\",\r\n            \"clip-path\": that._getCanvasClipRectID()\r\n        }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\r\n        that._scrollBarGroup = renderer.g().attr({\r\n            class: \"dxc-scroll-bar\"\r\n        }).linkOn(root, \"scroll-bar\")\r\n    },\r\n    _executeAppendBeforeSeries() {},\r\n    _executeAppendAfterSeries() {},\r\n    _disposeObjectsInArray: function(propName, fieldNames) {\r\n        _each(this[propName] || [], (function(_, item) {\r\n            if (fieldNames && item) {\r\n                _each(fieldNames, (function(_, field) {\r\n                    item[field] && item[field].dispose()\r\n                }))\r\n            } else {\r\n                item && item.dispose()\r\n            }\r\n        }));\r\n        this[propName] = null\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        var disposeObject = function(propName) {\r\n            if (that[propName]) {\r\n                that[propName].dispose();\r\n                that[propName] = null\r\n            }\r\n        };\r\n        var unlinkGroup = function(name) {\r\n            that[name].linkOff()\r\n        };\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        that._renderer.stopAllAnimations();\r\n        disposeObjectsInArray.call(that, \"series\");\r\n        disposeObject(\"_tracker\");\r\n        disposeObject(\"_crosshair\");\r\n        that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\r\n        unlinkGroup(\"_stripsGroup\");\r\n        unlinkGroup(\"_gridGroup\");\r\n        unlinkGroup(\"_axesGroup\");\r\n        unlinkGroup(\"_constantLinesGroup\");\r\n        unlinkGroup(\"_stripLabelAxesGroup\");\r\n        unlinkGroup(\"_panesBorderGroup\");\r\n        unlinkGroup(\"_seriesGroup\");\r\n        unlinkGroup(\"_labelsGroup\");\r\n        unlinkGroup(\"_crosshairCursorGroup\");\r\n        unlinkGroup(\"_legendGroup\");\r\n        unlinkGroup(\"_scrollBarGroup\");\r\n        unlinkGroup(\"_scaleBreaksGroup\");\r\n        disposeObject(\"_canvasClipRect\");\r\n        disposeObject(\"_panesBackgroundGroup\");\r\n        disposeObject(\"_backgroundRect\");\r\n        disposeObject(\"_stripsGroup\");\r\n        disposeObject(\"_gridGroup\");\r\n        disposeObject(\"_axesGroup\");\r\n        disposeObject(\"_constantLinesGroup\");\r\n        disposeObject(\"_stripLabelAxesGroup\");\r\n        disposeObject(\"_panesBorderGroup\");\r\n        disposeObject(\"_seriesGroup\");\r\n        disposeObject(\"_labelsGroup\");\r\n        disposeObject(\"_crosshairCursorGroup\");\r\n        disposeObject(\"_legendGroup\");\r\n        disposeObject(\"_scrollBarGroup\");\r\n        disposeObject(\"_scaleBreaksGroup\")\r\n    },\r\n    _getAnimationOptions: function() {\r\n        return this._themeManager.getOptions(\"animation\")\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _getOption: function(name) {\r\n        return this._themeManager.getOptions(name)\r\n    },\r\n    _applySize: function(rect) {\r\n        this._rect = rect.slice();\r\n        if (!this._changes.has(\"FULL_RENDER\")) {\r\n            this._processRefreshData(RESIZE_REFRESH_ACTION)\r\n        }\r\n    },\r\n    _resize: function() {\r\n        this._doRender(this.__renderOptions || {\r\n            animate: false,\r\n            isResize: true\r\n        })\r\n    },\r\n    _trackerType: \"ChartTracker\",\r\n    _createTracker: function() {\r\n        this._tracker = new trackerModule[this._trackerType]({\r\n            seriesGroup: this._seriesGroup,\r\n            renderer: this._renderer,\r\n            tooltip: this._tooltip,\r\n            legend: this._legend,\r\n            eventTrigger: this._eventTrigger\r\n        })\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return extend({\r\n            chart: this\r\n        }, this._getSelectionModes())\r\n    },\r\n    _getSelectionModes: function() {\r\n        var themeManager = this._themeManager;\r\n        return {\r\n            seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\r\n            pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\r\n        }\r\n    },\r\n    _updateTracker: function(trackerCanvases) {\r\n        this._tracker.update(this._getTrackerSettings());\r\n        this._tracker.setCanvases({\r\n            left: 0,\r\n            right: this._canvas.width,\r\n            top: 0,\r\n            bottom: this._canvas.height\r\n        }, trackerCanvases)\r\n    },\r\n    _createCanvasFromRect(rect) {\r\n        var currentCanvas = this._canvas;\r\n        return _setCanvasValues({\r\n            left: rect[0],\r\n            top: rect[1],\r\n            right: currentCanvas.width - rect[2],\r\n            bottom: currentCanvas.height - rect[3],\r\n            width: currentCanvas.width,\r\n            height: currentCanvas.height\r\n        })\r\n    },\r\n    _doRender: function(_options) {\r\n        if (0 === this._canvas.width && 0 === this._canvas.height) {\r\n            return\r\n        }\r\n        this._resetIsReady();\r\n        var drawOptions = this._prepareDrawOptions(_options);\r\n        var recreateCanvas = drawOptions.recreateCanvas;\r\n        this._preserveOriginalCanvas();\r\n        if (recreateCanvas) {\r\n            this.__currentCanvas = this._canvas\r\n        } else {\r\n            this._canvas = this.__currentCanvas\r\n        }\r\n        recreateCanvas && this._updateCanvasClipRect(this._canvas);\r\n        this._canvas = this._createCanvasFromRect(this._rect);\r\n        this._renderer.stopAllAnimations(true);\r\n        this._cleanGroups();\r\n        var startTime = new Date;\r\n        this._renderElements(drawOptions);\r\n        this._lastRenderingTime = new Date - startTime\r\n    },\r\n    _preserveOriginalCanvas() {\r\n        this.__originalCanvas = this._canvas;\r\n        this._canvas = extend({}, this._canvas)\r\n    },\r\n    _layoutAxes: noop,\r\n    _renderElements: function(drawOptions) {\r\n        var that = this;\r\n        var preparedOptions = that._prepareToRender(drawOptions);\r\n        var isRotated = that._isRotated();\r\n        var isLegendInside = that._isLegendInside();\r\n        var trackerCanvases = [];\r\n        extend({}, that._canvas);\r\n        var argBusinessRange;\r\n        var zoomMinArg;\r\n        var zoomMaxArg;\r\n        that._renderer.lock();\r\n        if (drawOptions.drawLegend && that._legend) {\r\n            that._legendGroup.linkAppend()\r\n        }\r\n        that.layoutManager.setOptions(that._layoutManagerOptions());\r\n        var layoutTargets = that._getLayoutTargets();\r\n        this._layoutAxes(needSpace => {\r\n            var axisDrawOptions = needSpace ? extend({}, drawOptions, {\r\n                animate: false,\r\n                recreateCanvas: true\r\n            }) : drawOptions;\r\n            var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\r\n            that._shrinkAxes(needSpace, canvas)\r\n        });\r\n        that._applyClipRects(preparedOptions);\r\n        that._appendSeriesGroups();\r\n        that._createCrosshairCursor();\r\n        layoutTargets.forEach(_ref => {\r\n            var {\r\n                canvas: canvas\r\n            } = _ref;\r\n            trackerCanvases.push({\r\n                left: canvas.left,\r\n                right: canvas.width - canvas.right,\r\n                top: canvas.top,\r\n                bottom: canvas.height - canvas.bottom\r\n            })\r\n        });\r\n        if (that._scrollBar) {\r\n            argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\r\n            if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\r\n                zoomMinArg = zoomMaxArg = void 0\r\n            } else {\r\n                zoomMinArg = argBusinessRange.minVisible;\r\n                zoomMaxArg = argBusinessRange.maxVisible\r\n            }\r\n            that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg)\r\n        }\r\n        that._updateTracker(trackerCanvases);\r\n        that._updateLegendPosition(drawOptions, isLegendInside);\r\n        that._applyPointMarkersAutoHiding();\r\n        that._renderSeries(drawOptions, isRotated, isLegendInside);\r\n        that._renderer.unlock()\r\n    },\r\n    _updateLegendPosition: noop,\r\n    _createCrosshairCursor: noop,\r\n    _appendSeriesGroups: function() {\r\n        this._seriesGroup.linkAppend();\r\n        this._labelsGroup.linkAppend();\r\n        this._appendAdditionalSeriesGroups()\r\n    },\r\n    _renderSeries: function(drawOptions, isRotated, isLegendInside) {\r\n        this._calculateSeriesLayout(drawOptions, isRotated);\r\n        this._renderSeriesElements(drawOptions, isLegendInside)\r\n    },\r\n    _calculateSeriesLayout: function(drawOptions, isRotated) {\r\n        drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\r\n        this._updateSeriesDimensions(drawOptions)\r\n    },\r\n    _getArgFilter: () => () => true,\r\n    _getValFilter: series => () => true,\r\n    _getPointsToAnimation(series) {\r\n        var argViewPortFilter = this._getArgFilter();\r\n        return series.map(s => {\r\n            var valViewPortFilter = this._getValFilter(s);\r\n            return s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).length\r\n        })\r\n    },\r\n    _renderSeriesElements: function(drawOptions, isLegendInside) {\r\n        var i;\r\n        var series = this.series;\r\n        var singleSeries;\r\n        var seriesLength = series.length;\r\n        var resolveLabelOverlapping = this._themeManager.getOptions(\"resolveLabelOverlapping\");\r\n        var pointsToAnimation = this._getPointsToAnimation(series);\r\n        for (i = 0; i < seriesLength; i++) {\r\n            singleSeries = series[i];\r\n            this._applyExtraSettings(singleSeries, drawOptions);\r\n            singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && this._renderer.animationEnabled(), drawOptions.hideLayoutLabels, this._getLegendCallBack(singleSeries))\r\n        }\r\n        if (\"none\" === resolveLabelOverlapping) {\r\n            this._adjustSeriesLabels(false)\r\n        } else {\r\n            this._locateLabels(resolveLabelOverlapping)\r\n        }\r\n        this._renderTrackers(isLegendInside);\r\n        this._tracker.repairTooltip();\r\n        this._renderExtraElements();\r\n        this._clearCanvas();\r\n        this._seriesElementsDrawn = true\r\n    },\r\n    _changesApplied() {\r\n        if (this._seriesElementsDrawn) {\r\n            this._seriesElementsDrawn = false;\r\n            this._drawn();\r\n            this._renderCompleteHandler()\r\n        }\r\n    },\r\n    _locateLabels(resolveLabelOverlapping) {\r\n        this._resolveLabelOverlapping(resolveLabelOverlapping)\r\n    },\r\n    _renderExtraElements() {},\r\n    _clearCanvas: function() {\r\n        this._canvas = this.__originalCanvas\r\n    },\r\n    _resolveLabelOverlapping: function(resolveLabelOverlapping) {\r\n        var func;\r\n        switch (resolveLabelOverlapping) {\r\n            case \"stack\":\r\n                func = this._resolveLabelOverlappingStack;\r\n                break;\r\n            case \"hide\":\r\n                func = this._resolveLabelOverlappingHide;\r\n                break;\r\n            case \"shift\":\r\n                func = this._resolveLabelOverlappingShift\r\n        }\r\n        return isFunction(func) && func.call(this)\r\n    },\r\n    _getVisibleSeries: function() {\r\n        return grep(this.getAllSeries(), (function(series) {\r\n            return series.isVisible()\r\n        }))\r\n    },\r\n    _resolveLabelOverlappingHide: function() {\r\n        var labels = [];\r\n        var currentLabel;\r\n        var nextLabel;\r\n        var currentLabelRect;\r\n        var nextLabelRect;\r\n        var i;\r\n        var j;\r\n        var points;\r\n        var series = this._getVisibleSeries();\r\n        for (i = 0; i < series.length; i++) {\r\n            points = series[i].getVisiblePoints();\r\n            for (j = 0; j < points.length; j++) {\r\n                labels.push.apply(labels, points[j].getLabels())\r\n            }\r\n        }\r\n        for (i = 0; i < labels.length; i++) {\r\n            currentLabel = labels[i];\r\n            if (!currentLabel.isVisible()) {\r\n                continue\r\n            }\r\n            currentLabelRect = currentLabel.getBoundingRect();\r\n            for (j = i + 1; j < labels.length; j++) {\r\n                nextLabel = labels[j];\r\n                nextLabelRect = nextLabel.getBoundingRect();\r\n                if (checkOverlapping(currentLabelRect, nextLabelRect)) {\r\n                    nextLabel.draw(false)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _cleanGroups: function() {\r\n        this._stripsGroup.linkRemove().clear();\r\n        this._gridGroup.linkRemove().clear();\r\n        this._axesGroup.linkRemove().clear();\r\n        this._constantLinesGroup.above.clear();\r\n        this._stripLabelAxesGroup.linkRemove().clear();\r\n        this._labelsGroup.linkRemove().clear();\r\n        this._crosshairCursorGroup.linkRemove().clear();\r\n        this._scaleBreaksGroup.linkRemove().clear()\r\n    },\r\n    _allowLegendInsidePosition: () => false,\r\n    _createLegend: function() {\r\n        var legendSettings = getLegendSettings(this._legendDataField);\r\n        this._legend = new Legend({\r\n            renderer: this._renderer,\r\n            widget: this,\r\n            group: this._legendGroup,\r\n            backgroundClass: \"dxc-border\",\r\n            itemGroupClass: \"dxc-item\",\r\n            titleGroupClass: \"dxc-title\",\r\n            textField: legendSettings.textField,\r\n            getFormatObject: legendSettings.getFormatObject,\r\n            allowInsidePosition: this._allowLegendInsidePosition()\r\n        });\r\n        this._updateLegend();\r\n        this._layout.add(this._legend)\r\n    },\r\n    _updateLegend: function() {\r\n        var themeManager = this._themeManager;\r\n        var legendOptions = themeManager.getOptions(\"legend\");\r\n        var legendData = this._getLegendData();\r\n        legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\r\n        legendOptions._incidentOccurred = this._incidentOccurred;\r\n        this._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\r\n        this._change([\"LAYOUT\"])\r\n    },\r\n    _prepareDrawOptions: function(drawOptions) {\r\n        var animationOptions = this._getAnimationOptions();\r\n        var options = extend({}, {\r\n            force: false,\r\n            adjustAxes: true,\r\n            drawLegend: true,\r\n            drawTitle: true,\r\n            animate: animationOptions.enabled,\r\n            animationPointsLimit: animationOptions.maxPointCountSupported\r\n        }, drawOptions, this.__renderOptions);\r\n        if (!_isDefined(options.recreateCanvas)) {\r\n            options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle\r\n        }\r\n        return options\r\n    },\r\n    _processRefreshData: function(newRefreshAction) {\r\n        var currentRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(this._currentRefreshData);\r\n        var newRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(newRefreshAction);\r\n        if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\r\n            this._currentRefreshData = newRefreshAction\r\n        }\r\n        this._requestChange([\"REFRESH\"])\r\n    },\r\n    _getLegendData: function() {\r\n        return _map(this._getLegendTargets(), (function(item) {\r\n            var legendData = item.legendData;\r\n            var style = item.getLegendStyles;\r\n            var opacity = style.normal.opacity;\r\n            if (!item.visible) {\r\n                if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\r\n                    opacity = DEFAULT_OPACITY\r\n                }\r\n                legendData.textOpacity = DEFAULT_OPACITY\r\n            }\r\n            var opacityStyle = {\r\n                opacity: opacity\r\n            };\r\n            legendData.states = {\r\n                hover: extend({}, style.hover, opacityStyle),\r\n                selection: extend({}, style.selection, opacityStyle),\r\n                normal: extend({}, style.normal, opacityStyle)\r\n            };\r\n            return legendData\r\n        }))\r\n    },\r\n    _getLegendOptions: function(item) {\r\n        return {\r\n            legendData: {\r\n                text: item[this._legendItemTextField],\r\n                id: item.index,\r\n                visible: true\r\n            },\r\n            getLegendStyles: item.getLegendStyles(),\r\n            visible: item.isVisible()\r\n        }\r\n    },\r\n    _disposeSeries(seriesIndex) {\r\n        var _that$series;\r\n        if (this.series) {\r\n            if (_isDefined(seriesIndex)) {\r\n                this.series[seriesIndex].dispose();\r\n                this.series.splice(seriesIndex, 1)\r\n            } else {\r\n                _each(this.series, (_, s) => s.dispose());\r\n                this.series.length = 0\r\n            }\r\n        }\r\n        if (!(null !== (_that$series = this.series) && void 0 !== _that$series && _that$series.length)) {\r\n            this.series = []\r\n        }\r\n    },\r\n    _disposeSeriesFamilies() {\r\n        _each(this.seriesFamilies || [], (function(_, family) {\r\n            family.dispose()\r\n        }));\r\n        this.seriesFamilies = null;\r\n        this._needHandleRenderComplete = true\r\n    },\r\n    _optionChanged: function(arg) {\r\n        this._themeManager.resetOptions(arg.name);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _applyChanges() {\r\n        this._themeManager.update(this._options.silent());\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _optionChangesMap: {\r\n        animation: \"ANIMATION\",\r\n        dataSource: \"DATA_SOURCE\",\r\n        palette: \"PALETTE\",\r\n        paletteExtensionMode: \"PALETTE\",\r\n        legend: \"FORCE_DATA_INIT\",\r\n        seriesTemplate: \"FORCE_DATA_INIT\",\r\n        export: \"FORCE_RENDER\",\r\n        valueAxis: \"AXES_AND_PANES\",\r\n        argumentAxis: \"AXES_AND_PANES\",\r\n        commonAxisSettings: \"AXES_AND_PANES\",\r\n        panes: \"AXES_AND_PANES\",\r\n        commonPaneSettings: \"AXES_AND_PANES\",\r\n        defaultPane: \"AXES_AND_PANES\",\r\n        containerBackgroundColor: \"AXES_AND_PANES\",\r\n        rotated: \"ROTATED\",\r\n        autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\r\n        customizePoint: \"REFRESH_SERIES_REINIT\",\r\n        customizeLabel: \"REFRESH_SERIES_REINIT\",\r\n        scrollBar: \"SCROLL_BAR\"\r\n    },\r\n    _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"USE_SPIDER_WEB\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\r\n    _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_FIRST_DRAWING\", \"FORCE_DRAWING\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\r\n    _change_ANIMATION: function() {\r\n        this._renderer.updateAnimationOptions(this._getAnimationOptions())\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        this._needHandleRenderComplete = true;\r\n        this._updateDataSource()\r\n    },\r\n    _change_PALETTE: function() {\r\n        this._themeManager.updatePalette();\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_DATA_INIT: function() {\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_DATA_INIT: function() {\r\n        if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\r\n            this._dataInit()\r\n        }\r\n    },\r\n    _change_FORCE_DATA_INIT: function() {\r\n        this._dataInit()\r\n    },\r\n    _change_REFRESH_SERIES_FAMILIES: function() {\r\n        this._processSeriesFamilies();\r\n        this._populateBusinessRange();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_RENDER: function() {\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_AXES_AND_PANES: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_ROTATED: function() {\r\n        this._createScrollBar();\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_REINIT: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_AXES() {\r\n        _setCanvasValues(this._canvas);\r\n        this._reinitAxes();\r\n        this._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _change_SCROLL_BAR: function() {\r\n        this._createScrollBar();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_REINIT: function() {\r\n        this._processRefreshData(REINIT_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_DRAWING: function() {\r\n        this._resetComponentsAnimation()\r\n    },\r\n    _change_FORCE_FIRST_DRAWING: function() {\r\n        this._resetComponentsAnimation(true)\r\n    },\r\n    _resetComponentsAnimation: function(isFirstDrawing) {\r\n        this.series.forEach(s => {\r\n            s.resetApplyingAnimation(isFirstDrawing)\r\n        });\r\n        this._resetAxesAnimation(isFirstDrawing)\r\n    },\r\n    _resetAxesAnimation: noop,\r\n    _refreshSeries: function(actionName) {\r\n        this.needToPopulateSeries = true;\r\n        this._requestChange([actionName])\r\n    },\r\n    _change_CORRECT_AXIS() {\r\n        this._correctAxes()\r\n    },\r\n    _doRefresh: function() {\r\n        var methodName = this._currentRefreshData;\r\n        if (methodName) {\r\n            this._currentRefreshData = null;\r\n            this._renderer.stopAllAnimations(true);\r\n            this[methodName]()\r\n        }\r\n    },\r\n    _updateCanvasClipRect: function(canvas) {\r\n        var width = Math.max(canvas.width - canvas.left - canvas.right, 0);\r\n        var height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\r\n        this._canvasClipRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        });\r\n        this._backgroundRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _getCanvasClipRectID: function() {\r\n        return this._canvasClipRect.id\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        if (this._changes.has(\"INIT\")) {\r\n            this._requestChange([\"DATA_INIT\"])\r\n        } else {\r\n            this._requestChange([\"FORCE_DATA_INIT\"])\r\n        }\r\n    },\r\n    _dataInit: function() {\r\n        this._dataSpecificInit(true)\r\n    },\r\n    _processSingleSeries: function(singleSeries) {\r\n        singleSeries.createPoints(false)\r\n    },\r\n    _handleSeriesDataUpdated() {\r\n        if (this._getVisibleSeries().some(s => s.useAggregation())) {\r\n            this._populateMarginOptions()\r\n        }\r\n        this.series.forEach(s => this._processSingleSeries(s), this)\r\n    },\r\n    _dataSpecificInit(needRedraw) {\r\n        if (!this.series || this.needToPopulateSeries) {\r\n            this.series = this._populateSeries()\r\n        }\r\n        this._repopulateSeries();\r\n        this._seriesPopulatedHandlerCore();\r\n        this._populateBusinessRange();\r\n        this._tracker.updateSeries(this.series, this._changes.has(\"INIT\"));\r\n        this._updateLegend();\r\n        if (needRedraw) {\r\n            this._requestChange([\"FULL_RENDER\"])\r\n        }\r\n    },\r\n    _forceRender: function() {\r\n        this._doRender({\r\n            force: true\r\n        })\r\n    },\r\n    _repopulateSeries: function() {\r\n        var themeManager = this._themeManager;\r\n        var data = this._dataSourceItems();\r\n        var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        if (seriesTemplate) {\r\n            this._populateSeries(data)\r\n        }\r\n        this._groupSeries();\r\n        var parsedData = validateData(data, this._groupsData, this._incidentOccurred, dataValidatorOptions);\r\n        themeManager.resetPalette();\r\n        this.series.forEach((function(singleSeries) {\r\n            singleSeries.updateData(parsedData[singleSeries.getArgumentField()])\r\n        }));\r\n        this._handleSeriesDataUpdated()\r\n    },\r\n    _renderCompleteHandler: function() {\r\n        var allSeriesInited = true;\r\n        if (this._needHandleRenderComplete) {\r\n            _each(this.series, (function(_, s) {\r\n                allSeriesInited = allSeriesInited && s.canRenderCompleteHandle()\r\n            }));\r\n            if (allSeriesInited) {\r\n                this._needHandleRenderComplete = false;\r\n                this._eventTrigger(\"done\", {\r\n                    target: this\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _dataIsReady: function() {\r\n        return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded()\r\n    },\r\n    _populateSeriesOptions(data) {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        var seriesOptions = seriesTemplate ? processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\r\n        var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\r\n        var extraOptions = that._getExtraOptions();\r\n        var particularSeriesOptions;\r\n        var seriesTheme;\r\n        var seriesThemes = [];\r\n        var seriesVisibilityChanged = target => {\r\n            that._specialProcessSeries();\r\n            that._populateBusinessRange(target && target.getValueAxis(), true);\r\n            that._renderer.stopAllAnimations(true);\r\n            that._updateLegend();\r\n            that._requestChange([\"FULL_RENDER\"])\r\n        };\r\n        for (var i = 0; i < allSeriesOptions.length; i++) {\r\n            particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\r\n            if (!_isDefined(particularSeriesOptions.name) || \"\" === particularSeriesOptions.name) {\r\n                particularSeriesOptions.name = \"Series \" + (i + 1).toString()\r\n            }\r\n            particularSeriesOptions.rotated = that._isRotated();\r\n            particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\r\n            particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\r\n            particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\r\n            particularSeriesOptions.incidentOccurred = that._incidentOccurred;\r\n            seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\r\n            if (that._checkPaneName(seriesTheme)) {\r\n                seriesThemes.push(seriesTheme)\r\n            }\r\n        }\r\n        return seriesThemes\r\n    },\r\n    _populateSeries(data) {\r\n        var _that$series2;\r\n        var that = this;\r\n        var seriesBasis = [];\r\n        var incidentOccurred = that._incidentOccurred;\r\n        var seriesThemes = that._populateSeriesOptions(data);\r\n        var particularSeries;\r\n        var disposeSeriesFamilies = false;\r\n        that.needToPopulateSeries = false;\r\n        _each(seriesThemes, (_, theme) => {\r\n            var curSeries = that.series && that.series.filter(s => s.name === theme.name && -1 === seriesBasis.map(sb => sb.series).indexOf(s))[0];\r\n            if (curSeries && curSeries.type === theme.type) {\r\n                seriesBasis.push({\r\n                    series: curSeries,\r\n                    options: theme\r\n                })\r\n            } else {\r\n                seriesBasis.push({\r\n                    options: theme\r\n                });\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        0 !== (null === (_that$series2 = that.series) || void 0 === _that$series2 ? void 0 : _that$series2.length) && that._tracker.clearHover();\r\n        _reverseEach(that.series, (index, series) => {\r\n            if (!seriesBasis.some(s => series === s.series)) {\r\n                that._disposeSeries(index);\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(sb => sb.series.name !== seriesThemes[sb.series.index].name));\r\n        that.series = [];\r\n        disposeSeriesFamilies && that._disposeSeriesFamilies();\r\n        that._themeManager.resetPalette();\r\n        var eventPipe = function(data) {\r\n            that.series.forEach((function(currentSeries) {\r\n                currentSeries.notify(data)\r\n            }))\r\n        };\r\n        _each(seriesBasis, (_, basis) => {\r\n            var _that$_argumentAxes$f, _that$_argumentAxes;\r\n            var seriesTheme = basis.options;\r\n            var argumentAxis = null !== (_that$_argumentAxes$f = null === (_that$_argumentAxes = that._argumentAxes) || void 0 === _that$_argumentAxes ? void 0 : _that$_argumentAxes.filter(a => a.pane === seriesTheme.pane)[0]) && void 0 !== _that$_argumentAxes$f ? _that$_argumentAxes$f : that.getArgumentAxis();\r\n            var renderSettings = {\r\n                commonSeriesModes: that._getSelectionModes(),\r\n                argumentAxis: argumentAxis,\r\n                valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\r\n            };\r\n            if (basis.series) {\r\n                particularSeries = basis.series;\r\n                particularSeries.updateOptions(seriesTheme, renderSettings)\r\n            } else {\r\n                particularSeries = new Series(extend({\r\n                    renderer: that._renderer,\r\n                    seriesGroup: that._seriesGroup,\r\n                    labelsGroup: that._labelsGroup,\r\n                    eventTrigger: that._eventTrigger,\r\n                    eventPipe: eventPipe,\r\n                    incidentOccurred: incidentOccurred\r\n                }, renderSettings), seriesTheme)\r\n            }\r\n            if (!particularSeries.isUpdated) {\r\n                incidentOccurred(\"E2101\", [seriesTheme.type])\r\n            } else {\r\n                particularSeries.index = that.series.length;\r\n                that.series.push(particularSeries)\r\n            }\r\n        });\r\n        return that.series\r\n    },\r\n    getStackedPoints: function(point) {\r\n        var stackName = point.series.getStackName();\r\n        return this._getVisibleSeries().reduce((stackPoints, series) => {\r\n            if (!_isDefined(series.getStackName()) || !_isDefined(stackName) || stackName === series.getStackName()) {\r\n                stackPoints = stackPoints.concat(series.getPointsByArg(point.argument))\r\n            }\r\n            return stackPoints\r\n        }, [])\r\n    },\r\n    getAllSeries: function() {\r\n        return (this.series || []).slice()\r\n    },\r\n    getSeriesByName: function(name) {\r\n        var found = null;\r\n        _each(this.series, (function(i, singleSeries) {\r\n            if (singleSeries.name === name) {\r\n                found = singleSeries;\r\n                return false\r\n            }\r\n        }));\r\n        return found\r\n    },\r\n    getSeriesByPos: function(pos) {\r\n        return (this.series || [])[pos]\r\n    },\r\n    clearSelection: function() {\r\n        this._tracker.clearSelection()\r\n    },\r\n    hideTooltip: function() {\r\n        this._tracker._hideTooltip()\r\n    },\r\n    clearHover() {\r\n        this._tracker.clearHover()\r\n    },\r\n    render: function(renderOptions) {\r\n        var that = this;\r\n        that.__renderOptions = renderOptions;\r\n        that.__forceRender = renderOptions && renderOptions.force;\r\n        that.callBase.apply(that, arguments);\r\n        that.__renderOptions = that.__forceRender = null;\r\n        return that\r\n    },\r\n    refresh: function() {\r\n        this._disposeSeries();\r\n        this._disposeSeriesFamilies();\r\n        this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"])\r\n    },\r\n    _getMinSize() {\r\n        var adaptiveLayout = this._layoutManagerOptions();\r\n        return [adaptiveLayout.width, adaptiveLayout.height]\r\n    },\r\n    _change_REFRESH() {\r\n        if (!this._changes.has(\"INIT\")) {\r\n            this._doRefresh()\r\n        } else {\r\n            this._currentRefreshData = null\r\n        }\r\n    },\r\n    _change_FULL_RENDER() {\r\n        this._forceRender()\r\n    },\r\n    _change_INIT() {\r\n        this._reinit()\r\n    },\r\n    _stopCurrentHandling: function() {\r\n        this._tracker.stopCurrentHandling()\r\n    }\r\n});\r\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\"\r\n}));\r\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\"\r\n}));\r\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\"\r\n}));\r\nimport {\r\n    plugin as exportPlugin\r\n} from \"../core/export\";\r\nimport {\r\n    plugin as titlePlugin\r\n} from \"../core/title\";\r\nimport {\r\n    plugin as dataSourcePlugin\r\n} from \"../core/data_source\";\r\nimport {\r\n    plugin as tooltipPlugin\r\n} from \"../core/tooltip\";\r\nimport {\r\n    plugin as loadingIndicatorPlugin\r\n} from \"../core/loading_indicator\";\r\nBaseChart.addPlugin(exportPlugin);\r\nBaseChart.addPlugin(titlePlugin);\r\nBaseChart.addPlugin(dataSourcePlugin);\r\nBaseChart.addPlugin(tooltipPlugin);\r\nBaseChart.addPlugin(loadingIndicatorPlugin);\r\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\r\nBaseChart.prototype._change_TITLE = function() {\r\n    _change_TITLE.apply(this, arguments);\r\n    this._change([\"FORCE_RENDER\"])\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}