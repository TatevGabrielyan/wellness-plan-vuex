{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vShow as _vShow, withKeys as _withKeys, withDirectives as _withDirectives, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"view flex-container\"\n};\nconst _hoisted_2 = {\n  class: \"completed-item-left\"\n};\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = {\n  class: \"completed-item-right\"\n};\nconst _hoisted_5 = {\n  class: \"container\"\n};\nconst _hoisted_6 = [\"checked\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"mark\"\n}, \"Completed\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"dropdown\",\n  style: {\n    \"float\": \"right\"\n  }\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"dropbtn\"\n}, \"...\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"dropdown-content\"\n};\nconst _hoisted_11 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", {\n    class: _normalizeClass([\"app appointments\", {\n      completed: $props.app.done,\n      editing: $setup.editing\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"label\", {\n    textContent: _toDisplayString($props.app.text),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.editing = true)\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"label\", _hoisted_5, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    checked: $props.app.done,\n    onChange: _cache[1] || (_cache[1] = $event => $setup.toggleApp($props.app)),\n    class: \"toggle select-checkbox\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6), _hoisted_7]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"destroy\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.removeApp($props.app))\n  }, \"Delete\")])])])]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"edit\",\n    value: $props.app.text,\n    ref: \"input\",\n    onKeyup: [_cache[3] || (_cache[3] = _withKeys((...args) => $setup.doneEdit && $setup.doneEdit(...args), [\"enter\"])), _cache[4] || (_cache[4] = _withKeys((...args) => $setup.cancelEdit && $setup.cancelEdit(...args), [\"esc\"]))],\n    onBlur: _cache[5] || (_cache[5] = (...args) => $setup.doneEdit && $setup.doneEdit(...args))\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_11), [[_vShow, $setup.editing]])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAqB;;EAC1BA,KAAK,EAAC;AAAqB;;;EAG3BA,KAAK,EAAC;AAAsB;;EACvBA,KAAK,EAAC;AAAW;;gCAG9BC,oBAAoC;EAA9BD,KAAK,EAAC;AAAO,GAAC,WAAS;;EAE1BA,KAAK,EAAC,UAAU;EAACE,KAAoB,EAApB;IAAA;EAAA;;gCACpBD,oBAAoC;EAA5BD,KAAK,EAAC;AAAS,GAAC,KAAG;;EACtBA,KAAK,EAAC;AAAkB;;;uBAb7BG,oBA2BK;IA3BDH,KAAK,mBAAC,kBAAkB;MAAAI,WAAsBC,UAAG,CAACC,IAAI;MAAAC,SAAEC;IAAO;MACjEP,oBAkBM,OAlBNQ,UAkBM,GAjBLR,oBAEM,OAFNS,UAEM,GADLT,oBAAyD;iBAAlDU,iBAAQN,MAAS,IAAN,CAACO,IAAI;IAAGC,OAAK,sCAAEL,cAAO;yCAEzCP,oBAaM,OAbNa,UAaM,GAZHb,oBAIA,SAJAc,UAIA,GAHNd,oBAC8D;IADvDe,IAAI,EAAC,UAAU;IAAGC,OAAO,EAAEZ,UAAG,CAACC,IAAI;IACnCY,QAAM,sCAAEV,gBAAS,CAACH,UAAG;IAAGL,KAAK,EAAC;wDACrCmB,UAAoC,IAEtClB,oBAKM,OALNmB,UAKM,GAJJC,UAAoC,EACpCpB,oBAEM,OAFNqB,WAEM,GADJrB,oBAA+D;IAAvDD,KAAK,EAAC,SAAS;IAAEa,OAAK,sCAAEL,gBAAS,CAACH,UAAG;KAAG,QAAM,2BAMtDJ,oBAMmB;IANZD,KAAK,EAAC,MAAM;IAEhBuB,KAAK,EAAElB,UAAG,CAACO,IAAI;IAChBY,GAAG,EAAC,OAAO;IACVC,OAAK,oDAAQjB,2CAAQ,gEACVA,+CAAU;IACrBkB,MAAI,yCAAElB,2CAAQ;mEALPA,cAAO","names":["class","_createElementVNode","style","_createElementBlock","completed","$props","done","editing","$setup","_hoisted_1","_hoisted_2","_toDisplayString","text","onClick","_hoisted_4","_hoisted_5","type","checked","onChange","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","value","ref","onKeyup","onBlur"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\AppItem.vue"],"sourcesContent":["<template>\n  <li class=\"app appointments\" :class=\"{ completed: app.done, editing }\" >\n    <div class=\"view flex-container\">\n     <div class=\"completed-item-left\">\n      <label v-text=\"app.text\" @click=\"editing = true\"></label>\n     </div>\n     <div class=\"completed-item-right\">\n        <label class=\"container\">\n  <input type=\"checkbox\"  :checked=\"app.done\"\n        @change=\"toggleApp(app)\" class=\"toggle select-checkbox\">\n  <span class=\"mark \">Completed</span>\n</label>\n<div class=\"dropdown\" style=\"float:right;\">\n  <button class=\"dropbtn\">...</button>\n  <div class=\"dropdown-content\">\n    <button class=\"destroy\" @click=\"removeApp(app)\">Delete</button>\n  </div>\n</div>\n     \n     </div>\n    </div>\n    <input class=\"edit\"\n      v-show=\"editing\"\n      :value=\"app.text\"\n      ref=\"input\"\n      @keyup.enter=\"doneEdit\"\n      @keyup.esc=\"cancelEdit\"\n      @blur=\"doneEdit\">\n  </li>\n</template>\n\n<script>\nimport { ref, watch, nextTick } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'To-do',\n  props: ['app'],\n  \n  setup (props) {\n    const input = ref(null)\n\n    const editing = ref(false)\n\n    watch(editing, (v) => {\n      v && nextTick(() => { input.value.focus() })\n    })\n\n    const store = useStore()\n    const editApp = (app, value) => store.dispatch('editApp', { app, value })\n    const toggleApp = (app) => store.dispatch('toggleApp', app)\n    const removeApp = (app) => store.dispatch('removeApp', app)\n\n    function doneEdit (e) {\n      const value = e.target.value.trim()\n      if (!value) {\n        removeApp(props.app)\n      } else if (editing.value) {\n        editApp(props.app, value)\n      }\n      editing.value = false\n    }\n\n    function cancelEdit (e) {\n      e.target.value = props.app.text\n      editing.value = false\n    }\n    return {\n      input,\n      editing,\n      toggleApp,\n      doneEdit,\n      cancelEdit,\n      removeApp\n    }\n  },\n\n}\n</script>\n<style>\n.appointments{\n  list-style: none;\n  margin-bottom: 1rem;\n}\n.appointments div{\n    border: 2px solid #EFF2F2;\n    border-radius: 15px;\n    margin-right: 2rem;\n}\n.completed-item-left, .completed-item-right{\n  border: none!important;\n}\n.completed-item-right{\n  margin-left: auto!important;\n}\n.completed-item-left label{\n    color: #969696;\n    font-size: 20px;\n    padding: 1rem;\n}\n.completed-item-right span{\n  color: #61B058;\n    font-size: 20px;\n    border: 1px solid #61B058;\n}\n\n\n.dropbtn {\n  border: none;\n  cursor: pointer;\n  background: none;\n  vertical-align: middle;\n}\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n  border: none!important;\n}\n\n.dropdown-content {\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    z-index: 1;\n    padding: 0; \n    margin: 0;\n    background: white;\n    line-height: 0;\n    border: none!important;\n}\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n.dropdown-content a:hover {background-color: #f1f1f1;}\n\n.dropdown:hover .dropdown-content {\n  display: block;\n}\n.destroy{\n   color: red;\n    background: white;\n    border: white;\n    filter: drop-shadow(0px 3px 3.5px rgba(0,0,0,0.16));\n    padding: 5px 10px;\n    position: relative;\n    top: -1rem;\n}\nspan {\n    color: #34495E;\n    padding: 0.5rem 0.25rem;\n}\n\n\n/* checkbox */\n.container {\n  display: block;\n  position: relative;\n  padding-left: 35px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  font-size: 25px;\n}\n\n/* Hide the default checkbox */\n.container input {\n  visibility: hidden;\n  cursor: pointer;\n}\n\n/* Create a custom checkbox */\n.mark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 10px;\n  width: 17px;\n  border-radius: 50%;\n}\n\n.container:hover input ~ .mark {\n  background-color: #fff;\n  color: #61B058;\n}\n\n.container input:checked ~ .mark {\n  border: 1px solid #61B058;\n}\n\n/* Create the mark/indicator (hidden when not checked) */\n.mark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n/* Show the mark when checked */\n.container input:checked ~ .mark:after {\n  display: block;\n}\n\n/* Style the mark/indicator */\n.container .mark:after {\n  left: 9px;\n  top: 5px;\n  width: 5px;\n  height: 10px;\n  border: solid #61B058;\n  border-width: 0 3px 3px 0;\n  transform: rotate(45deg);\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}