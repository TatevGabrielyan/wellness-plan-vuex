{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Doughnut = _resolveComponent(\"Doughnut\");\n  const _component_Chart = _resolveComponent(\"Chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Doughnut), _createVNode(_component_Chart)]);\n}","map":{"version":3,"mappings":";;;;uBAcEA,oBAGM,cAFJC,aAAWC,sBACXD,aAAQE","names":["_createElementBlock","_createVNode","_component_Doughnut","_component_Chart"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\WellnessPlan.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"WellnessPlan\" class=\"\">\n    \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WellnessPlan',\n\n}\n</script>\n -->\n <template>\n  <div>\n    <Doughnut/>\n    <Chart/>\n  </div>\n </template>\n<script>\n import { Doughnut } from \"vue-chartjs/legacy\";\n import { Chart } from \"chart.js\";\n \n export default {\n extends: Doughnut,\n   data: () => ({\n   chartdata: {\n   labels: [\"Cambodia\", \"Thailand\", \"Vietnam\", \"Laos\"],\n   datasets: [\n     {\n       backgroundColor: [\"#a3c7c9\", \"#889d9e\", \"#647678\", \"f87979\"],\n       data: [91, 3, 3, 3]\n       }\n      ]\n      },\n   options: {\n     legend: {\n       display: false\n     },\n     responsive: true,\n     maintainAspectRatio: false\n   }\n }),\n \n//  mounted() {\n//    this.renderChart(this.chartdata, this.options);\n//    this.textCenter(880);\n   \n//  },\nmounted() {\n    const customPlugin = (chart) => {\n      const { width, height, ctx } = chart.chart;\n      ctx.restore();\n      const fontSize = (height / 114).toFixed(2);\n      ctx.font = `${fontSize}rem sans-serif`;\n      ctx.textBaseline = \"middle\";\n\n      const text = \"75%\";\n      const textX = Math.round((width - ctx.measureText(text).width) / 2);\n      const textY = height / 2;\n\n      ctx.fillText(text, textX, textY);\n      ctx.save();\n    };\n    this.addPlugin(Chart);\n    this.addPlugin({\n      id: \"my-plugin\",\n      beforeDraw: customPlugin\n    });\n\n    this.renderChart(this.chartData, this.options);\n  },\n methods: {\n   textCenter(val) {\n     Chart.pluginService.register({\n       beforeDraw: function(chart) {\n         var width = chart.chart.width;\n         var height = chart.chart.height;\n         var ctx = chart.chart.ctx;\n \n         ctx.restore();\n         var fontSize = (height / 114).toFixed(2);\n         ctx.font = fontSize + \"em sans-serif\";\n         ctx.textBaseline = \"middle\";\n \n         var text = val;\n         var textX = Math.round((width - ctx.measureText(text).width) / 2);\n         var textY = height / 2;\n \n          ctx.fillText(text, textX, textY);\n          ctx.save();\n        }\n      });\n \n      Chart.plugins.unregister(this.chartdata);\n    }\n  }};\n</script>\n\n\n \n <style>\n #app {\n   font-family: Avenir, Helvetica, Arial, sans-serif;\n   -webkit-font-smoothing: antialiased;\n   -moz-osx-font-smoothing: grayscale;\n   text-align: center;\n   color: #2c3e50;\n   margin-top: 60px;\n }\n </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}