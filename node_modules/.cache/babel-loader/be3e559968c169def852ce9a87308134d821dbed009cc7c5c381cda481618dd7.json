{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Doughnut = _resolveComponent(\"Doughnut\");\n  return _openBlock(), _createBlock(_component_Doughnut, {\n    \"chart-data\": _ctx.chartData\n  }, null, 8 /* PROPS */, [\"chart-data\"]);\n}","map":{"version":3,"mappings":";;;uBAiBEA,aAAoCC;IAAzB,YAAU,EAAEC;EAAS","names":["_createBlock","_component_Doughnut","_ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\WellnessPlan.vue"],"sourcesContent":["<!-- <script>\nimport { Doughnut } from 'vue-chartjs'\n\nexport default {\n  extends: Doughnut,\n  props:['chartData','options'],\n  methods: {\n    update() {\n      this.$data._chart.update()\n    }\n  },\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  }\n};\n</script> -->\n<template>\n  <Doughnut :chart-data=\"chartData\" />\n</template>\n\n<script>\n// DataPage.vue\nimport { Doughnut } from 'vue-chartjs'\nimport { Chart, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\nChart.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n  type: 'Doughnut',\n  data: {\n    datasets: [\n      {\n        data: [10, 20, 15, 5, 50],\n        backgroundColor: [ 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', ],\n      },\n    ],\n    labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\n  },\n  options: {\n    plugins: {\n      datalabels: {\n        formatter: (value) => {\n          return value + '%';\n        }\n      }\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}