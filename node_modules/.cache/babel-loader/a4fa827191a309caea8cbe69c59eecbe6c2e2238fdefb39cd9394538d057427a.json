{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/points/bar_point.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../../core/utils/extend\";\nvar _extend = extend;\nvar _math = Math;\nvar _floor = _math.floor;\nvar _abs = _math.abs;\nimport symbolPoint from \"./symbol_point\";\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\nvar DEFAULT_BAR_TRACKER_SIZE = 9;\nvar CORRECTING_BAR_TRACKER_VALUE = 4;\nvar RIGHT = \"right\";\nvar LEFT = \"left\";\nvar TOP = \"top\";\nvar BOTTOM = \"bottom\";\nfunction getLabelOrientation(point) {\n  var initialValue = point.initialValue;\n  var invert = point._getValTranslator().getBusinessRange().invert;\n  var isDiscreteValue = \"discrete\" === point.series.valueAxisType;\n  var isFullStacked = point.series.isFullStackedSeries();\n  var notAxisInverted = !isDiscreteValue && (initialValue >= 0 && !invert || initialValue < 0 && invert) || isDiscreteValue && !invert || isFullStacked;\n  return notAxisInverted ? TOP : BOTTOM;\n}\nexport default _extend({}, symbolPoint, {\n  correctCoordinates(correctOptions) {\n    var correction = _floor(correctOptions.offset - correctOptions.width / 2);\n    if (this._options.rotated) {\n      this.height = correctOptions.width;\n      this.yCorrection = correction;\n      this.xCorrection = null;\n    } else {\n      this.width = correctOptions.width;\n      this.xCorrection = correction;\n      this.yCorrection = null;\n    }\n  },\n  _getGraphicBBox: function (location) {\n    var bBox = {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n    if (location) {\n      var isTop = \"top\" === location;\n      if (!this._options.rotated) {\n        bBox.y = isTop ? bBox.y : bBox.y + bBox.height;\n        bBox.height = 0;\n      } else {\n        bBox.x = isTop ? bBox.x + bBox.width : bBox.x;\n        bBox.width = 0;\n      }\n    }\n    return bBox;\n  },\n  _getLabelConnector: function (location) {\n    return this._getGraphicBBox(location);\n  },\n  _getLabelPosition: function () {\n    var position = getLabelOrientation(this);\n    if (this._options.rotated) {\n      position = position === TOP ? RIGHT : LEFT;\n    }\n    return position;\n  },\n  _getLabelCoords: function (label) {\n    var coords;\n    if (0 === this.initialValue && this.series.isFullStackedSeries()) {\n      if (!this._options.rotated) {\n        coords = this._getLabelCoordOfPosition(label, TOP);\n      } else {\n        coords = this._getLabelCoordOfPosition(label, RIGHT);\n      }\n    } else if (\"inside\" === label.getLayoutOptions().position) {\n      coords = this._getLabelCoordOfPosition(label, \"inside\");\n    } else {\n      coords = symbolPoint._getLabelCoords.call(this, label);\n    }\n    return coords;\n  },\n  _drawLabel: function () {\n    this._label.pointPosition = \"inside\" !== this._label.getLayoutOptions().position && getLabelOrientation(this);\n    symbolPoint._drawLabel.call(this);\n  },\n  hideInsideLabel: function (label, coord) {\n    var graphicBBox = this._getGraphicBBox();\n    var labelBBox = label.getBoundingRect();\n    if (this._options.resolveLabelsOverlapping) {\n      if ((coord.y <= graphicBBox.y && coord.y + labelBBox.height >= graphicBBox.y + graphicBBox.height || coord.x <= graphicBBox.x && coord.x + labelBBox.width >= graphicBBox.x + graphicBBox.width) && !(coord.y > graphicBBox.y + graphicBBox.height || coord.y + labelBBox.height < graphicBBox.y || coord.x > graphicBBox.x + graphicBBox.width || coord.x + labelBBox.width < graphicBBox.x)) {\n        label.draw(false);\n        return true;\n      }\n    }\n    return false;\n  },\n  _showForZeroValues: function () {\n    return this._options.label.showForZeroValues || this.initialValue;\n  },\n  _drawMarker(renderer, group, animationEnabled) {\n    var style = this._getStyle();\n    var r = this._options.cornerRadius;\n    var rotated = this._options.rotated;\n    var {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    } = this.getMarkerCoords();\n    if (animationEnabled) {\n      if (rotated) {\n        width = 0;\n        x = this.defaultX;\n      } else {\n        height = 0;\n        y = this.defaultY;\n      }\n    }\n    this.graphic = renderer.rect(x, y, width, height).attr({\n      rx: r,\n      ry: r\n    }).smartAttr(style).data({\n      \"chart-data-point\": this\n    }).append(group);\n  },\n  _getSettingsForTracker: function () {\n    var y = this.y;\n    var height = this.height;\n    var x = this.x;\n    var width = this.width;\n    if (this._options.rotated) {\n      if (1 === width) {\n        width = DEFAULT_BAR_TRACKER_SIZE;\n        x -= CORRECTING_BAR_TRACKER_VALUE;\n      }\n    } else if (1 === height) {\n      height = DEFAULT_BAR_TRACKER_SIZE;\n      y -= CORRECTING_BAR_TRACKER_VALUE;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  getGraphicSettings: function () {\n    var graphic = this.graphic;\n    return {\n      x: graphic.attr(\"x\"),\n      y: graphic.attr(\"y\"),\n      height: graphic.attr(\"height\"),\n      width: graphic.attr(\"width\")\n    };\n  },\n  _getEdgeTooltipParams() {\n    var isPositive = this.value >= 0;\n    var xCoord;\n    var yCoord;\n    var invertedBusinessRange = this._getValTranslator().getBusinessRange().invert;\n    var {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    } = this;\n    if (this._options.rotated) {\n      yCoord = y + height / 2;\n      if (invertedBusinessRange) {\n        xCoord = isPositive ? x : x + width;\n      } else {\n        xCoord = isPositive ? x + width : x;\n      }\n    } else {\n      xCoord = x + width / 2;\n      if (invertedBusinessRange) {\n        yCoord = isPositive ? y + height : y;\n      } else {\n        yCoord = isPositive ? y : y + height;\n      }\n    }\n    return {\n      x: xCoord,\n      y: yCoord,\n      offset: 0\n    };\n  },\n  getTooltipParams: function (location) {\n    if (\"edge\" === location) {\n      return this._getEdgeTooltipParams();\n    }\n    var center = this.getCenterCoord();\n    center.offset = 0;\n    return center;\n  },\n  getCenterCoord() {\n    var {\n      width: width,\n      height: height,\n      x: x,\n      y: y\n    } = this;\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  },\n  _truncateCoord: function (coord, bounds) {\n    if (null === coord) {\n      return coord;\n    }\n    if (coord < bounds[0]) {\n      return bounds[0];\n    }\n    if (coord > bounds[1]) {\n      return bounds[1];\n    }\n    return coord;\n  },\n  _getErrorBarBaseEdgeLength() {\n    return this._options.rotated ? this.height : this.width;\n  },\n  _translateErrorBars: function (argVisibleArea) {\n    symbolPoint._translateErrorBars.call(this);\n    if (this._errorBarPos < argVisibleArea[0] || this._errorBarPos > argVisibleArea[1]) {\n      this._errorBarPos = void 0;\n    }\n  },\n  _translate: function () {\n    var rotated = this._options.rotated;\n    var valAxis = rotated ? \"x\" : \"y\";\n    var argAxis = rotated ? \"y\" : \"x\";\n    var valIntervalName = rotated ? \"width\" : \"height\";\n    var argIntervalName = rotated ? \"height\" : \"width\";\n    var argTranslator = this._getArgTranslator();\n    var valTranslator = this._getValTranslator();\n    var argVisibleArea = this.series.getArgumentAxis().getVisibleArea();\n    var valVisibleArea = this.series.getValueAxis().getVisibleArea();\n    var arg = argTranslator.translate(this.argument);\n    var val = valTranslator.translate(this.value, 1);\n    var minVal = valTranslator.translate(this.minValue);\n    this[argAxis] = arg = null === arg ? arg : arg + (this[argAxis + \"Correction\"] || 0);\n    this[\"v\" + valAxis] = val;\n    this[\"v\" + argAxis] = arg + this[argIntervalName] / 2;\n    val = this._truncateCoord(val, valVisibleArea);\n    minVal = this._truncateCoord(minVal, valVisibleArea);\n    this[valIntervalName] = _abs(val - minVal);\n    val = val < minVal ? val : minVal;\n    this._calculateVisibility(rotated ? val : arg, rotated ? arg : val, this.width, this.height);\n    this[valAxis] = null === val ? val : val + (this[valAxis + \"Correction\"] || 0);\n    this[\"min\" + valAxis.toUpperCase()] = null === minVal ? minVal : minVal + (this[valAxis + \"Correction\"] || 0);\n    this[\"default\" + valAxis.toUpperCase()] = valTranslator.translate(CANVAS_POSITION_DEFAULT);\n    this._translateErrorBars(argVisibleArea);\n    if (this.inVisibleArea && null !== this[argAxis]) {\n      if (this[argAxis] < argVisibleArea[0]) {\n        this[argIntervalName] = this[argIntervalName] - (argVisibleArea[0] - this[argAxis]);\n        this[argAxis] = argVisibleArea[0];\n      }\n      if (this[argAxis] + this[argIntervalName] > argVisibleArea[1]) {\n        this[argIntervalName] = argVisibleArea[1] - this[argAxis];\n      }\n    }\n  },\n  _updateMarker: function (animationEnabled, style) {\n    this.graphic.smartAttr(_extend({}, style, !animationEnabled ? this.getMarkerCoords() : {}));\n  },\n  getMarkerCoords: function () {\n    var x = this.x;\n    var y = this.y;\n    var width = this.width;\n    var height = this.height;\n    var argAxis = this.series.getArgumentAxis();\n    var rotated = this._options.rotated;\n    if (argAxis.getAxisPosition) {\n      var axisOptions = argAxis.getOptions();\n      var edgeOffset = Math.round(axisOptions.width / 2);\n      var argAxisPosition = argAxis.getAxisPosition();\n      if (axisOptions.visible) {\n        if (!rotated) {\n          height -= this.minY === this.defaultY && this.minY === argAxisPosition - argAxis.getAxisShift() ? edgeOffset : 0;\n          height < 0 && (height = 0);\n        } else {\n          var isStartFromAxis = this.minX === this.defaultX && this.minX === argAxisPosition - argAxis.getAxisShift();\n          x += isStartFromAxis ? edgeOffset : 0;\n          width -= isStartFromAxis ? edgeOffset : 0;\n          width < 0 && (width = 0);\n        }\n      }\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  coordsIn: function (x, y) {\n    return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n  }\n});","map":{"version":3,"names":["extend","_extend","_math","Math","_floor","floor","_abs","abs","symbolPoint","CANVAS_POSITION_DEFAULT","DEFAULT_BAR_TRACKER_SIZE","CORRECTING_BAR_TRACKER_VALUE","RIGHT","LEFT","TOP","BOTTOM","getLabelOrientation","point","initialValue","invert","_getValTranslator","getBusinessRange","isDiscreteValue","series","valueAxisType","isFullStacked","isFullStackedSeries","notAxisInverted","correctCoordinates","correctOptions","correction","offset","width","_options","rotated","height","yCorrection","xCorrection","_getGraphicBBox","location","bBox","x","y","isTop","_getLabelConnector","_getLabelPosition","position","_getLabelCoords","label","coords","_getLabelCoordOfPosition","getLayoutOptions","call","_drawLabel","_label","pointPosition","hideInsideLabel","coord","graphicBBox","labelBBox","getBoundingRect","resolveLabelsOverlapping","draw","_showForZeroValues","showForZeroValues","_drawMarker","renderer","group","animationEnabled","style","_getStyle","r","cornerRadius","getMarkerCoords","defaultX","defaultY","graphic","rect","attr","rx","ry","smartAttr","data","append","_getSettingsForTracker","getGraphicSettings","_getEdgeTooltipParams","isPositive","value","xCoord","yCoord","invertedBusinessRange","getTooltipParams","center","getCenterCoord","_truncateCoord","bounds","_getErrorBarBaseEdgeLength","_translateErrorBars","argVisibleArea","_errorBarPos","_translate","valAxis","argAxis","valIntervalName","argIntervalName","argTranslator","_getArgTranslator","valTranslator","getArgumentAxis","getVisibleArea","valVisibleArea","getValueAxis","arg","translate","argument","val","minVal","minValue","_calculateVisibility","toUpperCase","inVisibleArea","_updateMarker","getAxisPosition","axisOptions","getOptions","edgeOffset","round","argAxisPosition","visible","minY","getAxisShift","isStartFromAxis","minX","coordsIn"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/series/points/bar_point.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/points/bar_point.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nvar _extend = extend;\r\nvar _math = Math;\r\nvar _floor = _math.floor;\r\nvar _abs = _math.abs;\r\nimport symbolPoint from \"./symbol_point\";\r\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\r\nvar DEFAULT_BAR_TRACKER_SIZE = 9;\r\nvar CORRECTING_BAR_TRACKER_VALUE = 4;\r\nvar RIGHT = \"right\";\r\nvar LEFT = \"left\";\r\nvar TOP = \"top\";\r\nvar BOTTOM = \"bottom\";\r\n\r\nfunction getLabelOrientation(point) {\r\n    var initialValue = point.initialValue;\r\n    var invert = point._getValTranslator().getBusinessRange().invert;\r\n    var isDiscreteValue = \"discrete\" === point.series.valueAxisType;\r\n    var isFullStacked = point.series.isFullStackedSeries();\r\n    var notAxisInverted = !isDiscreteValue && (initialValue >= 0 && !invert || initialValue < 0 && invert) || isDiscreteValue && !invert || isFullStacked;\r\n    return notAxisInverted ? TOP : BOTTOM\r\n}\r\nexport default _extend({}, symbolPoint, {\r\n    correctCoordinates(correctOptions) {\r\n        var correction = _floor(correctOptions.offset - correctOptions.width / 2);\r\n        if (this._options.rotated) {\r\n            this.height = correctOptions.width;\r\n            this.yCorrection = correction;\r\n            this.xCorrection = null\r\n        } else {\r\n            this.width = correctOptions.width;\r\n            this.xCorrection = correction;\r\n            this.yCorrection = null\r\n        }\r\n    },\r\n    _getGraphicBBox: function(location) {\r\n        var bBox = {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height\r\n        };\r\n        if (location) {\r\n            var isTop = \"top\" === location;\r\n            if (!this._options.rotated) {\r\n                bBox.y = isTop ? bBox.y : bBox.y + bBox.height;\r\n                bBox.height = 0\r\n            } else {\r\n                bBox.x = isTop ? bBox.x + bBox.width : bBox.x;\r\n                bBox.width = 0\r\n            }\r\n        }\r\n        return bBox\r\n    },\r\n    _getLabelConnector: function(location) {\r\n        return this._getGraphicBBox(location)\r\n    },\r\n    _getLabelPosition: function() {\r\n        var position = getLabelOrientation(this);\r\n        if (this._options.rotated) {\r\n            position = position === TOP ? RIGHT : LEFT\r\n        }\r\n        return position\r\n    },\r\n    _getLabelCoords: function(label) {\r\n        var coords;\r\n        if (0 === this.initialValue && this.series.isFullStackedSeries()) {\r\n            if (!this._options.rotated) {\r\n                coords = this._getLabelCoordOfPosition(label, TOP)\r\n            } else {\r\n                coords = this._getLabelCoordOfPosition(label, RIGHT)\r\n            }\r\n        } else if (\"inside\" === label.getLayoutOptions().position) {\r\n            coords = this._getLabelCoordOfPosition(label, \"inside\")\r\n        } else {\r\n            coords = symbolPoint._getLabelCoords.call(this, label)\r\n        }\r\n        return coords\r\n    },\r\n    _drawLabel: function() {\r\n        this._label.pointPosition = \"inside\" !== this._label.getLayoutOptions().position && getLabelOrientation(this);\r\n        symbolPoint._drawLabel.call(this)\r\n    },\r\n    hideInsideLabel: function(label, coord) {\r\n        var graphicBBox = this._getGraphicBBox();\r\n        var labelBBox = label.getBoundingRect();\r\n        if (this._options.resolveLabelsOverlapping) {\r\n            if ((coord.y <= graphicBBox.y && coord.y + labelBBox.height >= graphicBBox.y + graphicBBox.height || coord.x <= graphicBBox.x && coord.x + labelBBox.width >= graphicBBox.x + graphicBBox.width) && !(coord.y > graphicBBox.y + graphicBBox.height || coord.y + labelBBox.height < graphicBBox.y || coord.x > graphicBBox.x + graphicBBox.width || coord.x + labelBBox.width < graphicBBox.x)) {\r\n                label.draw(false);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _showForZeroValues: function() {\r\n        return this._options.label.showForZeroValues || this.initialValue\r\n    },\r\n    _drawMarker(renderer, group, animationEnabled) {\r\n        var style = this._getStyle();\r\n        var r = this._options.cornerRadius;\r\n        var rotated = this._options.rotated;\r\n        var {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        } = this.getMarkerCoords();\r\n        if (animationEnabled) {\r\n            if (rotated) {\r\n                width = 0;\r\n                x = this.defaultX\r\n            } else {\r\n                height = 0;\r\n                y = this.defaultY\r\n            }\r\n        }\r\n        this.graphic = renderer.rect(x, y, width, height).attr({\r\n            rx: r,\r\n            ry: r\r\n        }).smartAttr(style).data({\r\n            \"chart-data-point\": this\r\n        }).append(group)\r\n    },\r\n    _getSettingsForTracker: function() {\r\n        var y = this.y;\r\n        var height = this.height;\r\n        var x = this.x;\r\n        var width = this.width;\r\n        if (this._options.rotated) {\r\n            if (1 === width) {\r\n                width = DEFAULT_BAR_TRACKER_SIZE;\r\n                x -= CORRECTING_BAR_TRACKER_VALUE\r\n            }\r\n        } else if (1 === height) {\r\n            height = DEFAULT_BAR_TRACKER_SIZE;\r\n            y -= CORRECTING_BAR_TRACKER_VALUE\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    getGraphicSettings: function() {\r\n        var graphic = this.graphic;\r\n        return {\r\n            x: graphic.attr(\"x\"),\r\n            y: graphic.attr(\"y\"),\r\n            height: graphic.attr(\"height\"),\r\n            width: graphic.attr(\"width\")\r\n        }\r\n    },\r\n    _getEdgeTooltipParams() {\r\n        var isPositive = this.value >= 0;\r\n        var xCoord;\r\n        var yCoord;\r\n        var invertedBusinessRange = this._getValTranslator().getBusinessRange().invert;\r\n        var {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        } = this;\r\n        if (this._options.rotated) {\r\n            yCoord = y + height / 2;\r\n            if (invertedBusinessRange) {\r\n                xCoord = isPositive ? x : x + width\r\n            } else {\r\n                xCoord = isPositive ? x + width : x\r\n            }\r\n        } else {\r\n            xCoord = x + width / 2;\r\n            if (invertedBusinessRange) {\r\n                yCoord = isPositive ? y + height : y\r\n            } else {\r\n                yCoord = isPositive ? y : y + height\r\n            }\r\n        }\r\n        return {\r\n            x: xCoord,\r\n            y: yCoord,\r\n            offset: 0\r\n        }\r\n    },\r\n    getTooltipParams: function(location) {\r\n        if (\"edge\" === location) {\r\n            return this._getEdgeTooltipParams()\r\n        }\r\n        var center = this.getCenterCoord();\r\n        center.offset = 0;\r\n        return center\r\n    },\r\n    getCenterCoord() {\r\n        var {\r\n            width: width,\r\n            height: height,\r\n            x: x,\r\n            y: y\r\n        } = this;\r\n        return {\r\n            x: x + width / 2,\r\n            y: y + height / 2\r\n        }\r\n    },\r\n    _truncateCoord: function(coord, bounds) {\r\n        if (null === coord) {\r\n            return coord\r\n        }\r\n        if (coord < bounds[0]) {\r\n            return bounds[0]\r\n        }\r\n        if (coord > bounds[1]) {\r\n            return bounds[1]\r\n        }\r\n        return coord\r\n    },\r\n    _getErrorBarBaseEdgeLength() {\r\n        return this._options.rotated ? this.height : this.width\r\n    },\r\n    _translateErrorBars: function(argVisibleArea) {\r\n        symbolPoint._translateErrorBars.call(this);\r\n        if (this._errorBarPos < argVisibleArea[0] || this._errorBarPos > argVisibleArea[1]) {\r\n            this._errorBarPos = void 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var rotated = this._options.rotated;\r\n        var valAxis = rotated ? \"x\" : \"y\";\r\n        var argAxis = rotated ? \"y\" : \"x\";\r\n        var valIntervalName = rotated ? \"width\" : \"height\";\r\n        var argIntervalName = rotated ? \"height\" : \"width\";\r\n        var argTranslator = this._getArgTranslator();\r\n        var valTranslator = this._getValTranslator();\r\n        var argVisibleArea = this.series.getArgumentAxis().getVisibleArea();\r\n        var valVisibleArea = this.series.getValueAxis().getVisibleArea();\r\n        var arg = argTranslator.translate(this.argument);\r\n        var val = valTranslator.translate(this.value, 1);\r\n        var minVal = valTranslator.translate(this.minValue);\r\n        this[argAxis] = arg = null === arg ? arg : arg + (this[argAxis + \"Correction\"] || 0);\r\n        this[\"v\" + valAxis] = val;\r\n        this[\"v\" + argAxis] = arg + this[argIntervalName] / 2;\r\n        val = this._truncateCoord(val, valVisibleArea);\r\n        minVal = this._truncateCoord(minVal, valVisibleArea);\r\n        this[valIntervalName] = _abs(val - minVal);\r\n        val = val < minVal ? val : minVal;\r\n        this._calculateVisibility(rotated ? val : arg, rotated ? arg : val, this.width, this.height);\r\n        this[valAxis] = null === val ? val : val + (this[valAxis + \"Correction\"] || 0);\r\n        this[\"min\" + valAxis.toUpperCase()] = null === minVal ? minVal : minVal + (this[valAxis + \"Correction\"] || 0);\r\n        this[\"default\" + valAxis.toUpperCase()] = valTranslator.translate(CANVAS_POSITION_DEFAULT);\r\n        this._translateErrorBars(argVisibleArea);\r\n        if (this.inVisibleArea && null !== this[argAxis]) {\r\n            if (this[argAxis] < argVisibleArea[0]) {\r\n                this[argIntervalName] = this[argIntervalName] - (argVisibleArea[0] - this[argAxis]);\r\n                this[argAxis] = argVisibleArea[0]\r\n            }\r\n            if (this[argAxis] + this[argIntervalName] > argVisibleArea[1]) {\r\n                this[argIntervalName] = argVisibleArea[1] - this[argAxis]\r\n            }\r\n        }\r\n    },\r\n    _updateMarker: function(animationEnabled, style) {\r\n        this.graphic.smartAttr(_extend({}, style, !animationEnabled ? this.getMarkerCoords() : {}))\r\n    },\r\n    getMarkerCoords: function() {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var width = this.width;\r\n        var height = this.height;\r\n        var argAxis = this.series.getArgumentAxis();\r\n        var rotated = this._options.rotated;\r\n        if (argAxis.getAxisPosition) {\r\n            var axisOptions = argAxis.getOptions();\r\n            var edgeOffset = Math.round(axisOptions.width / 2);\r\n            var argAxisPosition = argAxis.getAxisPosition();\r\n            if (axisOptions.visible) {\r\n                if (!rotated) {\r\n                    height -= this.minY === this.defaultY && this.minY === argAxisPosition - argAxis.getAxisShift() ? edgeOffset : 0;\r\n                    height < 0 && (height = 0)\r\n                } else {\r\n                    var isStartFromAxis = this.minX === this.defaultX && this.minX === argAxisPosition - argAxis.getAxisShift();\r\n                    x += isStartFromAxis ? edgeOffset : 0;\r\n                    width -= isStartFromAxis ? edgeOffset : 0;\r\n                    width < 0 && (width = 0)\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}