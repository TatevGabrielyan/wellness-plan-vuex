{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withKeys as _withKeys, createCommentVNode as _createCommentVNode, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todoapp\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"wellness-header\"\n}, \"2021 wellness plan\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"wellness-plan-div\"\n};\nconst _hoisted_4 = {\n  class: \"flex-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h3\", null, [/*#__PURE__*/_createTextVNode(\"Your progress \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"steps-to-complete\"\n}, \"3 steps to complete\")])], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"hide-btn\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"flex-container\"\n};\nconst _hoisted_8 = {\n  class: \"flex-item-left\"\n};\nconst _hoisted_9 = {\n  class: \"flex-item-right\"\n};\nconst _hoisted_10 = {\n  class: \"flex-container\"\n};\nconst _hoisted_11 = {\n  class: \"filters\"\n};\nconst _hoisted_12 = [\"href\", \"onClick\"];\nconst _hoisted_13 = {\n  class: \"main\"\n};\nconst _hoisted_14 = [\"checked\"];\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"toggle-all\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_16 = {\n  class: \"todo-list\"\n};\nconst _hoisted_17 = {\n  class: \"footer\"\n};\nconst _hoisted_18 = {\n  class: \"todo-count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_WellnessPlan = _resolveComponent(\"WellnessPlan\");\n  const _component_TodoItem = _resolveComponent(\"TodoItem\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.show = !$data.show)\n  }, \"hide\")])]), _createVNode(_Transition, null, {\n    default: _withCtx(() => [$data.show ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_WellnessPlan)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"ul\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filters, (val, key) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: key\n      }, [_createElementVNode(\"a\", {\n        href: '#/' + key,\n        class: _normalizeClass({\n          selected: _ctx.jan === key\n        }),\n        onClick: $event => _ctx.jan = key\n      }, _toDisplayString($setup.capitalize(key)), 11 /* TEXT, CLASS, PROPS */, _hoisted_12)]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"input\", {\n      class: \"new-todo\",\n      autofocus: \"\",\n      autocomplete: \"off\",\n      placeholder: \"What needs to be done?\",\n      onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.addTodo && $setup.addTodo(...args), [\"enter\"]))\n    }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" main section \"), _withDirectives(_createElementVNode(\"section\", _hoisted_13, [_createElementVNode(\"input\", {\n      class: \"toggle-all\",\n      id: \"toggle-all\",\n      type: \"checkbox\",\n      checked: $setup.allChecked,\n      onChange: _cache[2] || (_cache[2] = $event => $setup.toggleAll(!$setup.allChecked))\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_14), _hoisted_15, _createElementVNode(\"ul\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredJan, (todo, index) => {\n      return _openBlock(), _createBlock(_component_TodoItem, {\n        key: index,\n        todo: todo\n      }, null, 8 /* PROPS */, [\"todo\"]);\n    }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, $setup.todos.length]]), _createCommentVNode(\" footer \"), _withDirectives(_createElementVNode(\"footer\", _hoisted_17, [_createElementVNode(\"span\", _hoisted_18, [_createElementVNode(\"strong\", null, _toDisplayString($setup.remaining), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString($setup.pluralize($setup.remaining, 'item')) + \" left \", 1 /* TEXT */)]), _createCommentVNode(\" <button class=\\\"clear-completed\\\"\\n        v-show=\\\"todos.length > remaining\\\"\\n        @click=\\\"clearCompleted\\\">\\n        Clear completed\\n      </button> \")], 512 /* NEED_PATCH */), [[_vShow, $setup.todos.length]])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"mappings":";;EAGWA,KAAK,EAAC;AAAS;gCACtBC,oBAES,8BADPA,oBAAmD;EAA/CD,KAAK,EAAC;AAAiB,GAAC,oBAAkB;;EAE3CA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAgB;gCAC1BC,oBAEM,2BADLA,oBAAmF,2CAA/E,gBAAc,oCAA0D;EAApDD,KAAK,EAAC;AAAmB,GAAC,qBAAmB;;EAEhEA,KAAK,EAAC;AAAU;;;EAKhBA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAAgB;;EAGzBA,KAAK,EAAC;AAAiB;;EACtBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAS;;;EAcdA,KAAK,EAAC;AAAM;;iCAKnBC,oBAAgC;EAAzBC,GAAG,EAAC;AAAY;;EACnBF,KAAK,EAAC;AAAW;;EASfA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAY;;;;uBAlD5BG,oBAsEU,WAtEVC,UAsEU,GArERC,UAES,EACTJ,oBA+DE,OA/DFK,UA+DE,GA9DAL,oBAOM,OAPNM,UAOM,GANLC,UAEM,EACLP,oBAEI,OAFJQ,UAEI,GADJR,oBAA2C;IAAlCS,OAAK,sCAAEC,UAAI,IAAIA,UAAI;KAAE,MAAI,OAGpCC,aAmDOC;sBAlDL,MAgDF,CAhDoCF,UAAI,kBAAtCR,oBAgDF,OAhDEW,UAgDF,GA/CEb,oBAEM,OAFNc,UAEM,GADJH,aAAeI,4BAEpBf,oBA2CG,OA3CHgB,UA2CG,GA1CFhB,oBAQM,OARNiB,WAQM,GAPJjB,oBAMG,MANHkB,WAMG,sBALHhB,oBAIKiB,6BAJoBC,cAAO,GAApBC,GAAG,EAAEC,GAAG;2BAApBpB,oBAIK;QAJ8BoB,GAAG,EAAEA;MAAG,IACzCtB,oBAE8C;QAF1CuB,IAAI,SAASD,GAAG;QACjBvB,KAAK;UAAAyB,UAAcC,QAAG,KAAKH;QAAG;QAC9Bb,OAAK,YAAEgB,QAAG,GAAGH;0BAAQF,iBAAU,CAACE,GAAG;wCAI5CtB,oBAI2B;MAJpBD,KAAK,EAAC,UAAU;MACnB2B,SAAS,EAAT,EAAS;MACTC,YAAY,EAAC,KAAK;MAClBC,WAAW,EAAC,wBAAwB;MACnCC,OAAK,mDAAQT,yCAAO;uCACzBU,qCAAqB,kBACrB9B,oBAaU,WAbV+B,WAaU,GAZR/B,oBAGmC;MAH5BD,KAAK,EAAC,YAAY;MAACiC,EAAE,EAAC,YAAY;MACvCC,IAAI,EAAC,UAAU;MACdC,OAAO,EAAEd,iBAAU;MACnBe,QAAM,sCAAEf,gBAAS,EAAEA,iBAAU;2DAChCgB,WAAgC,EAChCpC,oBAMK,MANLqC,WAMK,sBALHnC,oBAIEiB,6BAHwBC,kBAAW,GAA3BkB,IAAI,EAAEC,KAAK;2BADrBC,aAIEC;QAFCnB,GAAG,EAAEiB,KAAK;QACVD,IAAI,EAAEA;;wEAViBlB,YAAK,CAACsB,MAAM,KAc1CZ,+BAAe,kBACf9B,oBAWS,UAXT2C,WAWS,GAVP3C,oBAGO,QAHP4C,WAGO,GAFL5C,oBAAgC,iCAArBoB,gBAAS,mCAAY,GAChC,oBAAGA,gBAAS,CAACA,gBAAS,aAAY,QACpC,mBAEAU,qLAIa,oCAVgBV,YAAK,CAACsB,MAAM","names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","onClick","$data","_createVNode","_Transition","_hoisted_7","_hoisted_8","_component_WellnessPlan","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","$setup","val","key","href","selected","_ctx","autofocus","autocomplete","placeholder","onKeyup","_createCommentVNode","_hoisted_13","id","type","checked","onChange","_hoisted_15","_hoisted_16","todo","index","_createBlock","_component_TodoItem","length","_hoisted_17","_hoisted_18"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\App.vue"],"sourcesContent":["\n\n<template>\n  <section class=\"todoapp\">\n    <header>\n      <h1 class=\"wellness-header\">2021 wellness plan</h1>\n    </header>\n    <div class=\"wellness-plan-div\">\n      <div class=\"flex-container\">\n       <div>\n        <h3>Your progress <span class=\"steps-to-complete\">3 steps to complete</span>  </h3>\n       </div>\n        <div class=\"hide-btn\">\n        <button @click=\"show = !show\">hide</button>\n      </div>\n      </div>\n      <Transition>\n        <div class=\"flex-container\" v-if=\"show\">\n        <div class=\"flex-item-left\">\n          <WellnessPlan/>\n        </div>\n     <div class=\"flex-item-right\">\n      <div class=\"flex-container\">\n        <ul class=\"filters\">\n        <li v-for=\"(val, key) in filters\" :key=\"key\">\n          <a :href=\"'#/' + key\"\n            :class=\"{ selected: jan === key }\"\n            @click=\"jan = key\">{{ capitalize(key) }}</a>\n        </li>\n      </ul>\n      </div>\n    <input class=\"new-todo\"\n        autofocus\n        autocomplete=\"off\"\n        placeholder=\"What needs to be done?\"\n        @keyup.enter=\"addTodo\">\n    <!-- main section -->\n    <section class=\"main\" v-show=\"todos.length\">\n      <input class=\"toggle-all\" id=\"toggle-all\"\n        type=\"checkbox\"\n        :checked=\"allChecked\"\n        @change=\"toggleAll(!allChecked)\">\n      <label for=\"toggle-all\"></label>\n      <ul class=\"todo-list\">\n        <TodoItem\n          v-for=\"(todo, index) in filteredJan\"\n          :key=\"index\"\n          :todo=\"todo\"\n        />\n      </ul>\n    </section>\n    <!-- footer -->\n    <footer class=\"footer\" v-show=\"todos.length\">\n      <span class=\"todo-count\">\n        <strong>{{ remaining }}</strong>\n        {{ pluralize(remaining, 'item') }} left\n      </span>\n      \n      <!-- <button class=\"clear-completed\"\n        v-show=\"todos.length > remaining\"\n        @click=\"clearCompleted\">\n        Clear completed\n      </button> -->\n    </footer>\n  </div>\n</div>\n  \n</Transition>\n\n  \n</div>\n  \n   \n  </section>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport WellnessPlan from './WellnessPlan.vue'\nimport TodoItem from './TodoItem.vue'\n\nconst filters = {\n  January: todos => todos,\n  February: todos => todos,\n  March: todos => todos,\n  April: todos => todos,\n  May: todos => todos,\n  June: todos => todos,\n  July: todos => todos,\n  August: todos => todos,\n  September: todos => todos,\n  October: todos => todos,\n  November: todos => todos,\n  December: todos => todos,\n  active: todos => todos.filter(todo => !todo.done),\n  // completed: todos => todos.filter(todo => todo.done),\n  \n}\n\nexport default {\n  components: {WellnessPlan, TodoItem },\n  data(){\n    return{\n      show:true\n    }\n  },\n  setup () {\n    const jan = ref('January')\n    const feb = ref('February')\n    const march = ref('February')\n    const april = ref('February')\n    const may = ref('February')\n    const june = ref('February')\n    const july = ref('February')\n    const aug = ref('February')\n    const sep = ref('February')\n    const oct = ref('February')\n    const nov = ref('February')\n    const dec = ref('February')\n\n\n    const store = useStore()\n\n    const todos = computed(() => store.state.todos)\n    const allChecked = computed(() => todos.value.every(todo => todo.done))\n    const filteredJan= computed(() => filters[jan.value](todos.value))\n    const filteredFeb = computed(() => filters[feb.value](todos.value))\n    const filteredMarch = computed(() => filters[march.value](todos.value))\n    const filteredApril = computed(() => filters[april.value](todos.value))\n    const filteredMay = computed(() => filters[may.value](todos.value))\n    const filteredJune = computed(() => filters[june.value](todos.value))\n    const filteredJuly = computed(() => filters[july.value](todos.value))\n    const filteredAug = computed(() => filters[aug.value](todos.value))\n    const filteredSep = computed(() => filters[sep.value](todos.value))\n    const filteredOct = computed(() => filters[oct.value](todos.value))\n    const filteredNov = computed(() => filters[nov.value](todos.value))\n    const filteredDec = computed(() => filters[dec.value](todos.value))\n\n    const remaining = computed(() => todos.value.filter(todo => !todo.done).length)\n\n    const toggleAll = (done) => store.dispatch('toggleAll', done)\n    // const clearCompleted = () => store.dispatch('clearCompleted')\n\n    function addTodo (e) {\n      const text = e.target.value\n      if (text.trim()) {\n        store.dispatch('addTodo', text)\n      }\n      e.target.value = ''\n    }\n\n    const pluralize = (n, w) => n === 1 ? w : (w + 's')\n    const capitalize = s => s.charAt(0).toUpperCase() + s.slice(1)\n\n    return {\n      filters,\n      todos,\n      allChecked,\n      remaining,\n      filteredJan,\n      filteredFeb,\n      filteredMarch,\n      filteredApril,\n      filteredMay,\n      filteredJune,\n      filteredJuly,\n      filteredAug,\n      filteredSep,\n      filteredOct,\n      filteredNov,\n      filteredDec,\n      addTodo,\n      // clearCompleted,\n      toggleAll,\n      pluralize,\n      capitalize\n    }\n  }\n}\n</script>\n\n<style>\n  h3{\n    padding-left: 1rem;\n    font-size: 20px;\n    text-transform: capitalize;\n    margin: 0;\n  }\n  .steps-to-complete{\n    color: #929396;\n    font-size: 13px;\n  }\n  .hide-btn{\n    margin-left: auto!important;\n    margin-top:0px;\n  }\n  .hide-btn button{\n    border: none;\n    background: none;\n    color: #929396;\n    border-bottom: 1px solid #929396;\n    margin-right: 1rem;\n    margin-top: 1rem;\n    padding: 0;\n    cursor: pointer;\n  }\n  .wellness-header{\n    text-transform: capitalize;\n    padding-left: 1rem;\n    font-weight: 600;\n    font-size: 27px;\n  }\n  .wellness-plan-div{\n    border: 2px solid #EFF2F2;\n    border-radius: 15px\n  }\n\n  .flex-container {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n\n  }\n\n  .flex-container > div {\n    text-align: center;\n    line-height: 75px;\n    font-size: 30px;\n  }\n  .flex-item-left {\n  flex: 20%;\n}\n\n.flex-item-right {\n  flex: 80%;\n}\n/* transition */\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.v-enter-from,\n.v-leave-to {\n  opacity: 0;\n}\n/* media */\n\n@media (max-width: 800px) {\n  .flex-container{\n    flex-wrap: wrap;\n  }\n  .flex-item-right, .flex-item-left {\n    flex: 100%;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}