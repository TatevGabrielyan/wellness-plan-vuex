{"ast":null,"code":"import { ref, watch, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'To-do',\n  props: ['todo'],\n  setup(props) {\n    const input = ref(null);\n    const editing = ref(false);\n    watch(editing, v => {\n      v && nextTick(() => {\n        input.value.focus();\n      });\n    });\n    const store = useStore();\n    const editTodo = (todo, value) => store.dispatch('editTodo', {\n      todo,\n      value\n    });\n    const toggleTodo = todo => store.dispatch('toggleTodo', todo);\n    const removeTodo = todo => store.dispatch('removeTodo', todo);\n    function doneEdit(e) {\n      const value = e.target.value.trim();\n      if (!value) {\n        removeTodo(props.todo);\n      } else if (editing.value) {\n        editTodo(props.todo, value);\n      }\n      editing.value = false;\n    }\n    function cancelEdit(e) {\n      e.target.value = props.todo.text;\n      editing.value = false;\n    }\n    return {\n      input,\n      editing,\n      toggleTodo,\n      doneEdit,\n      cancelEdit,\n      removeTodo\n    };\n  }\n};","map":{"version":3,"mappings":"AAkCA,SAASA,GAAG,EAAEC,KAAK,EAAEC,QAAO,QAAS,KAAI;AACzC,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,CAAC,MAAM,CAAC;EAEfC,KAAI,CAAGD,KAAK,EAAE;IACZ,MAAME,KAAI,GAAIP,GAAG,CAAC,IAAI;IAEtB,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK;IAEzBC,KAAK,CAACO,OAAO,EAAGC,CAAC,IAAK;MACpBA,KAAKP,QAAQ,CAAC,MAAM;QAAEK,KAAK,CAACG,KAAK,CAACC,KAAK,EAAC;MAAE,CAAC;IAC7C,CAAC;IAED,MAAMC,KAAI,GAAIT,QAAQ,EAAC;IACvB,MAAMU,QAAO,GAAI,CAACC,IAAI,EAAEJ,KAAK,KAAKE,KAAK,CAACG,QAAQ,CAAC,UAAU,EAAE;MAAED,IAAI;MAAEJ;IAAM,CAAC;IAC5E,MAAMM,UAAS,GAAKF,IAAI,IAAKF,KAAK,CAACG,QAAQ,CAAC,YAAY,EAAED,IAAI;IAC9D,MAAMG,UAAS,GAAKH,IAAI,IAAKF,KAAK,CAACG,QAAQ,CAAC,YAAY,EAAED,IAAI;IAE9D,SAASI,QAAO,CAAGC,CAAC,EAAE;MACpB,MAAMT,KAAI,GAAIS,CAAC,CAACC,MAAM,CAACV,KAAK,CAACW,IAAI,EAAC;MAClC,IAAI,CAACX,KAAK,EAAE;QACVO,UAAU,CAACZ,KAAK,CAACS,IAAI;MACvB,OAAO,IAAIN,OAAO,CAACE,KAAK,EAAE;QACxBG,QAAQ,CAACR,KAAK,CAACS,IAAI,EAAEJ,KAAK;MAC5B;MACAF,OAAO,CAACE,KAAI,GAAI,KAAI;IACtB;IAEA,SAASY,UAAS,CAAGH,CAAC,EAAE;MACtBA,CAAC,CAACC,MAAM,CAACV,KAAI,GAAIL,KAAK,CAACS,IAAI,CAACS,IAAG;MAC/Bf,OAAO,CAACE,KAAI,GAAI,KAAI;IACtB;IAEA,OAAO;MACLH,KAAK;MACLC,OAAO;MACPQ,UAAU;MACVE,QAAQ;MACRI,UAAU;MACVL;IACF;EACF;AACF","names":["ref","watch","nextTick","useStore","name","props","setup","input","editing","v","value","focus","store","editTodo","todo","dispatch","toggleTodo","removeTodo","doneEdit","e","target","trim","cancelEdit","text"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\TodoItem.vue"],"sourcesContent":["<template>\n  <li class=\"todo appointments\" :class=\"{ completed: todo.done, editing }\">\n    <div class=\"view flex-container\">\n     <div class=\"completed-item-left\">\n      <label v-text=\"todo.text\" @click=\"editing = true\"></label>\n     </div>\n     <div class=\"completed-item-right\">\n      <input class=\"toggle select-checkbox\"\n        type=\"checkbox\"\n        :checked=\"todo.done\"\n        @change=\"toggleTodo(todo)\">\n        <span>Completed</span>\n        \n<div class=\"dropdown\" style=\"float:right;\">\n  <button class=\"dropbtn\">...</button>\n  <div class=\"dropdown-content\">\n    \n    <button class=\"destroy\" @click=\"removeTodo(todo)\">Delete</button>\n  </div>\n</div>\n     \n     </div>\n    </div>\n    <input class=\"edit\"\n      v-show=\"editing\"\n      :value=\"todo.text\"\n      ref=\"input\"\n      @keyup.enter=\"doneEdit\"\n      @keyup.esc=\"cancelEdit\"\n      @blur=\"doneEdit\">\n  </li>\n</template>\n\n<script>\nimport { ref, watch, nextTick } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'To-do',\n  props: ['todo'],\n  \n  setup (props) {\n    const input = ref(null)\n\n    const editing = ref(false)\n\n    watch(editing, (v) => {\n      v && nextTick(() => { input.value.focus() })\n    })\n\n    const store = useStore()\n    const editTodo = (todo, value) => store.dispatch('editTodo', { todo, value })\n    const toggleTodo = (todo) => store.dispatch('toggleTodo', todo)\n    const removeTodo = (todo) => store.dispatch('removeTodo', todo)\n \n    function doneEdit (e) {\n      const value = e.target.value.trim()\n      if (!value) {\n        removeTodo(props.todo)\n      } else if (editing.value) {\n        editTodo(props.todo, value)\n      }\n      editing.value = false\n    }\n\n    function cancelEdit (e) {\n      e.target.value = props.todo.text\n      editing.value = false\n    }\n\n    return {\n      input,\n      editing,\n      toggleTodo,\n      doneEdit,\n      cancelEdit,\n      removeTodo\n    }\n  }\n}\n</script>\n<style>\n.appointments{\n  list-style: none;\n  margin-bottom: 1rem;\n}\n.appointments div{\n    border: 2px solid #EFF2F2;\n    border-radius: 15px;\n    margin-right: 2rem;\n}\n.completed-item-left, .completed-item-right{\n  border: none!important;\n}\n.completed-item-right{\n  margin-left: auto!important;\n}\n.completed-item-left label{\n    color: #969696;\n    font-size: 20px;\n    padding: 1rem;\n}\n.completed-item-right span{\n    color: #B7DBB3;\n    font-size: 20px;\n}\n\n\n.dropbtn {\n  border: none;\n  cursor: pointer;\n  background: none;\n  vertical-align: middle;\n}\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n  border: none!important;\n}\n\n.dropdown-content {\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    z-index: 1;\n    padding: 0; \n    margin: 0;\n    background: white;\n    line-height: 0;\n    border: none!important;\n}\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n.dropdown-content a:hover {background-color: #f1f1f1;}\n\n.dropdown:hover .dropdown-content {\n  display: block;\n}\n.destroy{\n   color: red;\n    background: white;\n    border: white;\n    filter: drop-shadow(0px 3px 3.5px rgba(0,0,0,0.16));\n    padding: 5px 10px;\n    position: relative;\n    top: -1rem;\n}\n.select-checkbox{\n     height: 15px;\n     width: 15px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -o-appearance: none;\n    appearance: none;\n    border: 1px solid #67A062;\n    border-radius: 50%;\n    outline: none;\n    transition-duration: 0.3s;\n    cursor: pointer;\n    position: relative;\n    top: 4px;\n}\ninput:checked {\n    border: 1px solid #41B883;\n    background-color: #34495E;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}