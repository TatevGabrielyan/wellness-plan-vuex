{"ast":null,"code":"import { mapActions } from 'vuex';\nimport TodoItem from './TodoItem.vue';\nconst filters = {\n  all: todos => todos,\n  active: todos => todos.filter(todo => !todo.done),\n  completed: todos => todos.filter(todo => todo.done)\n};\nexport default {\n  components: {\n    TodoItem\n  },\n  data() {\n    return {\n      visibility: 'all',\n      filters: filters\n    };\n  },\n  computed: {\n    todos() {\n      return this.$store.state.todos;\n    },\n    allChecked() {\n      return this.todos.every(todo => todo.done);\n    },\n    filteredTodos() {\n      return filters[this.visibility](this.todos);\n    },\n    remaining() {\n      return this.todos.filter(todo => !todo.done).length;\n    }\n  },\n  methods: {\n    ...mapActions(['toggleAll', 'clearCompleted']),\n    addTodo(e) {\n      const text = e.target.value;\n      if (text.trim()) {\n        this.$store.dispatch('addTodo', text);\n      }\n      e.target.value = '';\n    },\n    pluralize(n, w) {\n      return n === 1 ? w : w + 's';\n    },\n    capitalize(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n  }\n};","map":{"version":3,"mappings":"AAmDA,SAASA,UAAS,QAAS,MAAK;AAChC,OAAOC,QAAO,MAAO,gBAAe;AAEpC,MAAMC,OAAM,GAAI;EACdC,GAAG,EAAEC,KAAI,IAAKA,KAAK;EACnBC,MAAM,EAAED,KAAI,IAAKA,KAAK,CAACE,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC;EACjDC,SAAS,EAAEL,KAAI,IAAKA,KAAK,CAACE,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI;AACpD;AAEA,eAAe;EACbE,UAAU,EAAE;IAAET;EAAS,CAAC;EACxBU,IAAG,GAAK;IACN,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBV,OAAO,EAAEA;IACX;EACF,CAAC;EACDW,QAAQ,EAAE;IACRT,KAAI,GAAK;MACP,OAAO,IAAI,CAACU,MAAM,CAACC,KAAK,CAACX,KAAI;IAC/B,CAAC;IACDY,UAAS,GAAK;MACZ,OAAO,IAAI,CAACZ,KAAK,CAACa,KAAK,CAACV,IAAG,IAAKA,IAAI,CAACC,IAAI;IAC3C,CAAC;IACDU,aAAY,GAAK;MACf,OAAOhB,OAAO,CAAC,IAAI,CAACU,UAAU,CAAC,CAAC,IAAI,CAACR,KAAK;IAC5C,CAAC;IACDe,SAAQ,GAAK;MACX,OAAO,IAAI,CAACf,KAAK,CAACE,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC,CAACY,MAAK;IACpD;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGrB,UAAU,CAAC,CACZ,WAAW,EACX,gBAAe,CAChB,CAAC;IACFsB,OAAM,CAAGC,CAAC,EAAE;MACV,MAAMC,IAAG,GAAID,CAAC,CAACE,MAAM,CAACC,KAAI;MAC1B,IAAIF,IAAI,CAACG,IAAI,EAAE,EAAE;QACf,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,SAAS,EAAEJ,IAAI;MACtC;MACAD,CAAC,CAACE,MAAM,CAACC,KAAI,GAAI,EAAC;IACpB,CAAC;IACDG,SAAQ,CAAGC,CAAC,EAAEC,CAAC,EAAE;MACf,OAAOD,MAAM,IAAIC,IAAKA,IAAI,GAAG;IAC/B,CAAC;IACDC,UAAS,CAAGC,CAAC,EAAE;MACb,OAAOA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAC,GAAIF,CAAC,CAACG,KAAK,CAAC,CAAC;IAC9C;EACF;AACF","names":["mapActions","TodoItem","filters","all","todos","active","filter","todo","done","completed","components","data","visibility","computed","$store","state","allChecked","every","filteredTodos","remaining","length","methods","addTodo","e","text","target","value","trim","dispatch","pluralize","n","w","capitalize","s","charAt","toUpperCase","slice"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\components\\App.vue"],"sourcesContent":["<style src=\"todomvc-app-css/index.css\"></style>\n\n<template>\n  <section class=\"todoapp\">\n    <!-- header -->\n    <header class=\"header\">\n      <h1>todos</h1>\n      <input class=\"new-todo\"\n        autofocus\n        autocomplete=\"off\"\n        placeholder=\"What needs to be done?\"\n        @keyup.enter=\"addTodo\">\n    </header>\n    <!-- main section -->\n    <section class=\"main\" v-show=\"todos.length\">\n      <input class=\"toggle-all\" id=\"toggle-all\"\n        type=\"checkbox\"\n        :checked=\"allChecked\"\n        @change=\"toggleAll(!allChecked)\">\n      <label for=\"toggle-all\"></label>\n      <ul class=\"todo-list\">\n        <TodoItem\n          v-for=\"(todo, index) in filteredTodos\"\n          :key=\"index\"\n          :todo=\"todo\"\n        />\n      </ul>\n    </section>\n    <!-- footer -->\n    <footer class=\"footer\" v-show=\"todos.length\">\n      <span class=\"todo-count\">\n        <strong>{{ remaining }}</strong>\n        {{ pluralize(remaining, 'item') }} left\n      </span>\n      <ul class=\"filters\">\n        <li v-for=\"(val, key) in filters\" :key=\"key\">\n          <a :href=\"'#/' + key\"\n            :class=\"{ selected: visibility === key }\"\n            @click=\"visibility = key\">{{ capitalize(key) }}</a>\n        </li>\n      </ul>\n      <button class=\"clear-completed\"\n        v-show=\"todos.length > remaining\"\n        @click=\"clearCompleted\">\n        Clear completed\n      </button>\n    </footer>\n  </section>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport TodoItem from './TodoItem.vue'\n\nconst filters = {\n  all: todos => todos,\n  active: todos => todos.filter(todo => !todo.done),\n  completed: todos => todos.filter(todo => todo.done)\n}\n\nexport default {\n  components: { TodoItem },\n  data () {\n    return {\n      visibility: 'all',\n      filters: filters\n    }\n  },\n  computed: {\n    todos () {\n      return this.$store.state.todos\n    },\n    allChecked () {\n      return this.todos.every(todo => todo.done)\n    },\n    filteredTodos () {\n      return filters[this.visibility](this.todos)\n    },\n    remaining () {\n      return this.todos.filter(todo => !todo.done).length\n    }\n  },\n  methods: {\n    ...mapActions([\n      'toggleAll',\n      'clearCompleted'\n    ]),\n    addTodo (e) {\n      const text = e.target.value\n      if (text.trim()) {\n        this.$store.dispatch('addTodo', text)\n      }\n      e.target.value = ''\n    },\n    pluralize (n, w) {\n      return n === 1 ? w : (w + 's')\n    },\n    capitalize (s) {\n      return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}