{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport WellnessPlan from './components/WellnessPlan';\nimport randomColor from 'randomcolor';\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n    animateRotate: false\n  }\n};\nexport default {\n  name: \"App\",\n  components: {\n    WellnessPlan\n  },\n  data() {\n    return {\n      options,\n      chartData: {\n        labels: ['skill1'],\n        datasets: [{\n          backgroundColor: [randomColor()],\n          data: [1]\n        }]\n      }\n    };\n  },\n  computed: {\n    currentDataSet() {\n      return this.chartData.datasets[0].data;\n    }\n  },\n  methods: {\n    updateChart() {\n      this.$refs.skills_chart.update();\n      z;\n    },\n    updateAmount(amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount);\n      this.updateChart();\n    },\n    updateName(text, index) {\n      this.chartData.labels.splice(index, 1, text);\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0];\n      this.chartData.labels.push(`Skill ${currentDataset.data.length + 1}`);\n      currentDataset.data.push(0);\n      currentDataset.backgroundColor.push(randomColor());\n      this.updateChart();\n    },\n    remove(index) {\n      const currentDataset = this.chartData.datasets[0];\n      currentDataset.data.splice(index, 1);\n      this.chartData.labels.splice(index, 1);\n      currentDataset.backgroundColor.splice(index, 1);\n      this.updateChart();\n    }\n  }\n};","map":{"version":3,"mappings":";AA+BA,OAAOA,YAAW,MAAO,2BAA0B;AACnD,OAAOC,WAAU,MAAO,aAAa;AAErC,MAAMC,OAAM,GAAI;EACdC,UAAU,EAAE,IAAI;EAChBC,mBAAmB,EAAE,KAAK;EAC1BC,SAAS,EAAE;IACTC,aAAa,EAAE;EACjB;AACF;AAEA,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAER;EAAa,CAAC;EAC5BS,IAAI,GAAG;IACL,OAAO;MACLP,OAAO;MACLQ,SAAS,EAAE;QACXC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAClBC,QAAQ,EAAE,CACR;UACEC,eAAe,EAAE,CAACZ,WAAW,EAAE,CAAC;UAChCQ,IAAI,EAAE,CAAC,CAAC;QACV;MAEJ;IACF;EACF,CAAC;EACDK,QAAQ,EAAE;IACRC,cAAa,GAAK;MAChB,OAAO,IAAI,CAACL,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG;IACvC;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,WAAU,GAAK;MACb,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,MAAM,EAAE;MAACC;IACnC,CAAC;IACDC,YAAW,CAAGC,MAAM,EAAEC,KAAK,EAAE;MAC3B,IAAI,CAACd,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAI,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC,EAAED,MAAM;MACvD,IAAI,CAACN,WAAW,EAAE;IACpB,CAAC;IACDS,UAAS,CAAGC,IAAI,EAAEH,KAAK,EAAE;MACvB,IAAI,CAACd,SAAS,CAACC,MAAM,CAACc,MAAM,CAACD,KAAK,EAAE,CAAC,EAAEG,IAAI;MAC3C,IAAI,CAACV,WAAW,EAAE;IACpB,CAAC;IACDW,aAAa,GAAG;MACd,MAAMC,cAAa,GAAI,IAAI,CAACnB,SAAS,CAACE,QAAQ,CAAC,CAAC;MAChD,IAAI,CAACF,SAAS,CAACC,MAAM,CAACmB,IAAI,CAAE,SAAQD,cAAc,CAACpB,IAAI,CAACsB,MAAK,GAAI,CAAE,EAAC;MACpEF,cAAc,CAACpB,IAAI,CAACqB,IAAI,CAAC,CAAC;MAC1BD,cAAc,CAAChB,eAAe,CAACiB,IAAI,CAAC7B,WAAW,EAAE;MACjD,IAAI,CAACgB,WAAW,EAAE;IACpB,CAAC;IACDe,MAAK,CAAGR,KAAK,EAAE;MACb,MAAMK,cAAa,GAAI,IAAI,CAACnB,SAAS,CAACE,QAAQ,CAAC,CAAC;MAChDiB,cAAc,CAACpB,IAAI,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC;MACnC,IAAI,CAACd,SAAS,CAACC,MAAM,CAACc,MAAM,CAACD,KAAK,EAAE,CAAC;MACrCK,cAAc,CAAChB,eAAe,CAACY,MAAM,CAACD,KAAK,EAAE,CAAC;MAC9C,IAAI,CAACP,WAAW,EAAC;IACnB;EACF;AACF,CAAC","names":["WellnessPlan","randomColor","options","responsive","maintainAspectRatio","animation","animateRotate","name","components","data","chartData","labels","datasets","backgroundColor","computed","currentDataSet","methods","updateChart","$refs","skills_chart","update","z","updateAmount","amount","index","splice","updateName","text","addExperience","currentDataset","push","length","remove"],"sourceRoot":"","sources":["C:\\Users\\User\\vue-chart\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <button class=\"button\" @click=\"addExperience\">Add experience</button>\n    <div class=\"Chart\">\n      <WellnessPlan\n        ref=\"skills_chart\"\n        :chart-data=\"chartData\"\n        :options=\"options\">\n      </WellnessPlan>\n\n      <div v-for=\"(val, i) in currentDataSet\" :key=\"i\">\n        <input\n          type=\"range\" \n          min=\"0\" \n          max=\"8\"\n          placeholder=\"name\"\n          :value=\"currentDataSet[i]\"\n          @input=\"updateAmount($event.target.value, i)\"\n        >\n        <span>\n          {{ currentDataSet[i] }} years\n        </span>\n        <input type=\"text\" :value=\"chartData.labels[i]\" @input=\"updateName($event.target.value, i)\">\n        <button @click=\"remove(i)\">remove</button>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport WellnessPlan from './components/WellnessPlan'\nimport randomColor from 'randomcolor';\n\nconst options = {\n  responsive: true, \n  maintainAspectRatio: false, \n  animation: {\n    animateRotate: false\n  }\n}\n\nexport default {\n  name: \"App\",\n  components: { WellnessPlan },\n  data() {\n    return {\n      options, \n        chartData: {\n        labels: ['skill1'],\n        datasets: [\n          {\n            backgroundColor: [randomColor()],\n            data: [1]\n          }\n        ]\n      }\n    }\n  },\n  computed: {\n    currentDataSet () {\n      return this.chartData.datasets[0].data\n    }\n  },\n  methods: {\n    updateChart () {\n      this.$refs.skills_chart.update();z\n    },\n    updateAmount (amount, index) {\n      this.chartData.datasets[0].data.splice(index, 1, amount)\n      this.updateChart();\n    },\n    updateName (text, index) {\n      this.chartData.labels.splice(index, 1, text)\n      this.updateChart();\n    },\n    addExperience() {\n      const currentDataset = this.chartData.datasets[0]\n      this.chartData.labels.push(`Skill ${currentDataset.data.length + 1}`)\n      currentDataset.data.push(0)\n      currentDataset.backgroundColor.push(randomColor())\n      this.updateChart();\n    },\n    remove (index) {\n      const currentDataset = this.chartData.datasets[0]\n      currentDataset.data.splice(index, 1)\n      this.chartData.labels.splice(index, 1)\n      currentDataset.backgroundColor.splice(index, 1)\n      this.updateChart()\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}