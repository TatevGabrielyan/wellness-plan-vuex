{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * DevExtreme (esm/viz/series/base_series.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar seriesNS = {};\nimport { isFunction, isDefined as _isDefined, isEmptyObject as _isEmptyObject } from \"../../core/utils/type\";\nimport { extend as _extend } from \"../../core/utils/extend\";\nimport { each as _each } from \"../../core/utils/iterator\";\nimport { Point } from \"./points/base_point\";\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nimport consts from \"../components/consts\";\nvar states = consts.states;\nimport rangeCalculator from \"./helpers/range_data_calculator\";\nimport * as scatterSeries from \"./scatter_series\";\nimport * as lineSeries from \"./line_series\";\nimport * as areaSeries from \"./area_series\";\nimport * as barSeries from \"./bar_series\";\nimport { chart as rangeSeriesChart } from \"./range_series\";\nimport { chart as bubbleSeriesChart } from \"./bubble_series\";\nimport * as pieSeries from \"./pie_series\";\nimport * as financialSeries from \"./financial_series\";\nimport * as stackedSeries from \"./stacked_series\";\nvar DISCRETE = \"discrete\";\nvar SELECTED_STATE = states.selectedMark;\nvar HOVER_STATE = states.hoverMark;\nvar HOVER = states.hover;\nvar NORMAL = states.normal;\nvar SELECTION = states.selection;\nvar APPLY_SELECTED = states.applySelected;\nvar APPLY_HOVER = states.applyHover;\nvar RESET_ITEM = states.resetItem;\nvar NONE_MODE = \"none\";\nvar INCLUDE_POINTS = \"includepoints\";\nvar NEAREST_POINT = \"nearestpoint\";\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\nvar ALL_SERIES_POINTS = \"allseriespoints\";\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\nvar POINT_HOVER = \"pointHover\";\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\nvar SERIES_SELECT = \"seriesSelect\";\nvar POINT_SELECT = \"pointSelect\";\nvar POINT_DESELECT = \"pointDeselect\";\nvar getEmptyBusinessRange = function () {\n  return {\n    arg: {},\n    val: {}\n  };\n};\nfunction triggerEvent(element, event, point) {\n  element && element.trigger(event, point);\n}\nseriesNS.mixins = {\n  chart: {},\n  pie: {},\n  polar: {}\n};\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\n_extend(seriesNS.mixins.pie, pieSeries);\n_extend(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, rangeSeriesChart, bubbleSeriesChart, financialSeries, stackedSeries.chart);\n_extend(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, stackedSeries.polar);\nfunction includePointsMode(mode) {\n  mode = _normalizeEnum(mode);\n  return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS;\n}\nfunction getLabelOptions(labelOptions, defaultColor) {\n  var opt = labelOptions || {};\n  var labelFont = _extend({}, opt.font) || {};\n  var labelBorder = opt.border || {};\n  var labelConnector = opt.connector || {};\n  var backgroundAttr = {\n    fill: opt.backgroundColor || defaultColor,\n    \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\n    stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\n    dashStyle: labelBorder.dashStyle\n  };\n  var connectorAttr = {\n    stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\n    \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\n  };\n  labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === _normalizeEnum(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\n  return {\n    alignment: opt.alignment,\n    format: opt.format,\n    argumentFormat: opt.argumentFormat,\n    customizeText: isFunction(opt.customizeText) ? opt.customizeText : void 0,\n    attributes: {\n      font: labelFont\n    },\n    visible: 0 !== labelFont.size ? opt.visible : false,\n    showForZeroValues: opt.showForZeroValues,\n    horizontalOffset: opt.horizontalOffset,\n    verticalOffset: opt.verticalOffset,\n    radialOffset: opt.radialOffset,\n    background: backgroundAttr,\n    position: opt.position,\n    connector: connectorAttr,\n    rotationAngle: opt.rotationAngle,\n    wordWrap: opt.wordWrap,\n    textOverflow: opt.textOverflow,\n    cssClass: opt.cssClass,\n    displayFormat: opt.displayFormat\n  };\n}\nfunction setPointHoverState(point, legendCallback) {\n  point.fullState |= HOVER_STATE;\n  point.applyView(legendCallback);\n}\nfunction releasePointHoverState(point, legendCallback) {\n  point.fullState &= ~HOVER_STATE;\n  point.applyView(legendCallback);\n  point.releaseHoverState();\n}\nfunction setPointSelectedState(point, legendCallback) {\n  point.fullState |= SELECTED_STATE;\n  point.applyView(legendCallback);\n}\nfunction releasePointSelectedState(point, legendCallback) {\n  point.fullState &= ~SELECTED_STATE;\n  point.applyView(legendCallback);\n}\nfunction mergePointOptionsCore(base, extra) {\n  var options = _extend({}, base, extra);\n  options.border = _extend({}, base && base.border, extra && extra.border);\n  return options;\n}\nfunction mergePointOptions(base, extra) {\n  var options = mergePointOptionsCore(base, extra);\n  options.image = _extend(true, {}, base.image, extra.image);\n  options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\n  options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\n  return options;\n}\nexport function Series(settings, options) {\n  this.fullState = 0;\n  this._extGroups = settings;\n  this._renderer = settings.renderer;\n  this._group = settings.renderer.g().attr({\n    class: \"dxc-series\"\n  });\n  this._eventTrigger = settings.eventTrigger;\n  this._eventPipe = settings.eventPipe;\n  this._incidentOccurred = settings.incidentOccurred;\n  this._legendCallback = _noop;\n  this.updateOptions(options, settings);\n}\nfunction getData(pointData) {\n  return pointData.data;\n}\nfunction getValueChecker(axisType, axis) {\n  if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\n    return () => true;\n  } else {\n    return value => value > 0;\n  }\n}\nSeries.prototype = {\n  constructor: Series,\n  _createLegendState: _noop,\n  getLegendStyles: function () {\n    return this._styles.legendStyles;\n  },\n  _createStyles: function (options) {\n    var mainSeriesColor = options.mainSeriesColor;\n    this._styles = {\n      normal: this._parseStyle(options, mainSeriesColor, mainSeriesColor),\n      hover: this._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\n      selection: this._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\n      legendStyles: {\n        normal: this._createLegendState(options, mainSeriesColor),\n        hover: this._createLegendState(options.hoverStyle || {}, mainSeriesColor),\n        selection: this._createLegendState(options.selectionStyle || {}, mainSeriesColor)\n      }\n    };\n  },\n  setClippingParams(baseId, wideId, forceClipping) {\n    var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\n    this._paneClipRectID = baseId;\n    this._widePaneClipRectID = wideId;\n    this._forceClipping = forceClipping;\n    this._clipLabels = clipLabels;\n  },\n  applyClip: function () {\n    this._group.attr({\n      \"clip-path\": this._paneClipRectID\n    });\n  },\n  resetClip: function () {\n    this._group.attr({\n      \"clip-path\": null\n    });\n  },\n  getTagField: function () {\n    return this._options.tagField || \"tag\";\n  },\n  getValueFields: _noop,\n  getSizeField: _noop,\n  getArgumentField: _noop,\n  getPoints: function () {\n    return this._points;\n  },\n  getPointsInViewPort: function () {\n    return rangeCalculator.getPointsInViewPort(this);\n  },\n  _createPoint: function (data, index, oldPoint) {\n    data.index = index;\n    var pointsByArgument = this.pointsByArgument;\n    var options = this._getCreatingPointOptions(data);\n    var arg = data.argument.valueOf();\n    var point = oldPoint;\n    if (point) {\n      point.update(data, options);\n    } else {\n      point = new Point(this, data, options);\n      if (this.isSelected() && includePointsMode(this.lastSelectionMode)) {\n        point.setView(SELECTION);\n      }\n    }\n    var pointByArgument = pointsByArgument[arg];\n    if (pointByArgument) {\n      pointByArgument.push(point);\n    } else {\n      pointsByArgument[arg] = [point];\n    }\n    if (point.hasValue()) {\n      this.customizePoint(point, data);\n    }\n    return point;\n  },\n  getRangeData: function () {\n    return this._visible ? this._getRangeData() : getEmptyBusinessRange();\n  },\n  getArgumentRange: function () {\n    return this._visible ? rangeCalculator.getArgumentRange(this) : getEmptyBusinessRange();\n  },\n  getViewport: function () {\n    return rangeCalculator.getViewport(this);\n  },\n  _deleteGroup: function (groupName) {\n    var group = this[groupName];\n    if (group) {\n      group.dispose();\n      this[groupName] = null;\n    }\n  },\n  updateOptions(newOptions, settings) {\n    var widgetType = newOptions.widgetType;\n    var oldType = this.type;\n    var newType = newOptions.type;\n    this.type = newType && _normalizeEnum(newType.toString());\n    if (!this._checkType(widgetType) || this._checkPolarBarType(widgetType, newOptions)) {\n      this.dispose();\n      this.isUpdated = false;\n      return;\n    }\n    if (oldType !== this.type) {\n      this._firstDrawing = true;\n      this._resetType(oldType, widgetType);\n      this._setType(this.type, widgetType);\n    } else {\n      this._defineDrawingState();\n    }\n    this._options = newOptions;\n    this._pointOptions = null;\n    this.name = newOptions.name;\n    this.pane = newOptions.pane;\n    this.tag = newOptions.tag;\n    if (settings) {\n      this._seriesModes = settings.commonSeriesModes || this._seriesModes;\n      this._valueAxis = settings.valueAxis || this._valueAxis;\n      this.axis = this._valueAxis && this._valueAxis.name;\n      this._argumentAxis = settings.argumentAxis || this._argumentAxis;\n    }\n    this._createStyles(newOptions);\n    this._stackName = null;\n    this._updateOptions(newOptions);\n    this._visible = newOptions.visible;\n    this.isUpdated = true;\n    this.stack = newOptions.stack;\n    this.barOverlapGroup = newOptions.barOverlapGroup;\n    this._createGroups();\n    this._processEmptyValue = newOptions.ignoreEmptyPoints ? x => null === x ? void 0 : x : x => x;\n  },\n  _defineDrawingState() {\n    this._firstDrawing = true;\n  },\n  _disposePoints: function (points) {\n    _each(points || [], function (_, p) {\n      p.dispose();\n    });\n  },\n  updateDataType: function (settings) {\n    this.argumentType = settings.argumentType;\n    this.valueType = settings.valueType;\n    this.argumentAxisType = settings.argumentAxisType;\n    this.valueAxisType = settings.valueAxisType;\n    this.showZero = settings.showZero;\n    this._argumentChecker = getValueChecker(settings.argumentAxisType, this.getArgumentAxis());\n    this._valueChecker = getValueChecker(settings.valueAxisType, this.getValueAxis());\n    return this;\n  },\n  _argumentChecker: function () {\n    return true;\n  },\n  _valueChecker: function () {\n    return true;\n  },\n  getOptions: function () {\n    return this._options;\n  },\n  _getOldPoint: function (data, oldPointsByArgument, index) {\n    var arg = data.argument && data.argument.valueOf();\n    var point = (oldPointsByArgument[arg] || [])[0];\n    if (point) {\n      oldPointsByArgument[arg].splice(0, 1);\n    }\n    return point;\n  },\n  updateData: function (data) {\n    var options = this._options;\n    var nameField = options.nameField;\n    data = data || [];\n    if (data.length) {\n      this._canRenderCompleteHandle = true;\n    }\n    var dataSelector = this._getPointDataSelector();\n    var itemsWithoutArgument = 0;\n    this._data = data.reduce((data, dataItem, index) => {\n      var pointDataItem = dataSelector(dataItem);\n      if (_isDefined(pointDataItem.argument)) {\n        if (!nameField || dataItem[nameField] === options.nameFieldValue) {\n          pointDataItem.index = index;\n          data.push(pointDataItem);\n        }\n      } else {\n        itemsWithoutArgument++;\n      }\n      return data;\n    }, []);\n    if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\n      this._incidentOccurred(\"W2002\", [this.name, this.getArgumentField()]);\n    }\n    this._endUpdateData();\n  },\n  _getData() {\n    var data = this._data || [];\n    if (this.useAggregation()) {\n      data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data);\n    }\n    return data;\n  },\n  useAggregation: function () {\n    var aggregation = this.getOptions().aggregation;\n    return aggregation && aggregation.enabled;\n  },\n  autoHidePointMarkersEnabled: _noop,\n  usePointsToDefineAutoHiding: _noop,\n  createPoints(useAllAggregatedPoints) {\n    this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\n    this._createPoints();\n  },\n  _normalizeUsingAllAggregatedPoints: function (useAllAggregatedPoints) {\n    this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints);\n  },\n  _createPoints: function () {\n    var that = this;\n    var oldPointsByArgument = that.pointsByArgument || {};\n    var data = that._getData();\n    that.pointsByArgument = {};\n    that._calculateErrorBars(data);\n    var skippedFields = {};\n    var points = data.reduce((points, pointDataItem) => {\n      if (that._checkData(pointDataItem, skippedFields)) {\n        var pointIndex = points.length;\n        var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\n        var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\n        points.push(point);\n      }\n      return points;\n    }, []);\n    for (var field in skippedFields) {\n      if (skippedFields[field] === data.length) {\n        that._incidentOccurred(\"W2002\", [that.name, field]);\n      }\n    }\n    Object.keys(oldPointsByArgument).forEach(key => that._disposePoints(oldPointsByArgument[key]));\n    that._points = points;\n  },\n  _removeOldSegments: function () {\n    var that = this;\n    var startIndex = that._segments.length;\n    _each(that._graphics.splice(startIndex, that._graphics.length) || [], function (_, elem) {\n      that._removeElement(elem);\n    });\n    if (that._trackers) {\n      _each(that._trackers.splice(startIndex, that._trackers.length) || [], function (_, elem) {\n        elem.remove();\n      });\n    }\n  },\n  _drawElements: function (animationEnabled, firstDrawing, translateAllPoints) {\n    var that = this;\n    var points = that._points || [];\n    var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\n    var groupForPoint = {\n      markers: that._markersGroup,\n      errorBars: that._errorBarGroup\n    };\n    that._drawnPoints = [];\n    that._graphics = that._graphics || [];\n    that._segments = [];\n    var segments = points.reduce(function (segments, p) {\n      var segment = segments[segments.length - 1];\n      if (!p.translated || translateAllPoints) {\n        p.translate();\n        !translateAllPoints && p.setDefaultCoords();\n      }\n      if (p.hasValue() && p.hasCoords()) {\n        translateAllPoints && that._drawPoint({\n          point: p,\n          groups: groupForPoint,\n          hasAnimation: animationEnabled,\n          firstDrawing: firstDrawing\n        });\n        segment.push(p);\n      } else if (!p.hasValue()) {\n        segment.length && segments.push([]);\n      } else {\n        p.setInvisibility();\n      }\n      return segments;\n    }, [[]]);\n    segments.forEach(function (segment, index) {\n      if (segment.length) {\n        that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1);\n      }\n    }, segments);\n    that._firstDrawing = !points.length;\n    that._removeOldSegments();\n    animationEnabled && that._animate(firstDrawing);\n  },\n  draw: function (animationEnabled, hideLayoutLabels, legendCallback) {\n    var firstDrawing = this._firstDrawing;\n    this._legendCallback = legendCallback || this._legendCallback;\n    if (!this._visible) {\n      this._group.remove();\n      return;\n    }\n    this._appendInGroup();\n    this._applyVisibleArea();\n    this._setGroupsSettings(animationEnabled, firstDrawing);\n    !firstDrawing && !this._resetApplyingAnimation && this._drawElements(false, firstDrawing, false);\n    this._drawElements(animationEnabled, firstDrawing, true);\n    hideLayoutLabels && this.hideLabels();\n    if (this.isSelected()) {\n      this._changeStyle(this.lastSelectionMode, void 0, true);\n    } else if (this.isHovered()) {\n      this._changeStyle(this.lastHoverMode, void 0, true);\n    } else {\n      this._applyStyle(this._styles.normal);\n    }\n    this._resetApplyingAnimation = false;\n  },\n  _setLabelGroupSettings: function (animationEnabled) {\n    var settings = {\n      class: \"dxc-labels\",\n      \"pointer-events\": \"none\"\n    };\n    this._clipLabels && this._applyElementsClipRect(settings);\n    this._applyClearingSettings(settings);\n    animationEnabled && (settings.opacity = .001);\n    this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup);\n  },\n  _checkType: function (widgetType) {\n    return !!seriesNS.mixins[widgetType][this.type];\n  },\n  _checkPolarBarType: function (widgetType, options) {\n    return \"polar\" === widgetType && options.spiderWidget && -1 !== this.type.indexOf(\"bar\");\n  },\n  _resetType: function (seriesType, widgetType) {\n    var methodName;\n    var methods;\n    if (seriesType) {\n      methods = seriesNS.mixins[widgetType][seriesType];\n      for (methodName in methods) {\n        delete this[methodName];\n      }\n    }\n  },\n  _setType: function (seriesType, widgetType) {\n    var methodName;\n    var methods = seriesNS.mixins[widgetType][seriesType];\n    for (methodName in methods) {\n      this[methodName] = methods[methodName];\n    }\n  },\n  _setPointsView: function (view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.setView(view);\n      }\n    });\n  },\n  _resetPointsView: function (view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.resetView(view);\n      }\n    });\n  },\n  _resetNearestPoint: function () {\n    this._nearestPoint && null !== this._nearestPoint.series && this._nearestPoint.resetView(HOVER);\n    this._nearestPoint = null;\n  },\n  _setSelectedState: function (mode) {\n    this.lastSelectionMode = _normalizeEnum(mode || this._options.selectionMode);\n    this.fullState = this.fullState | SELECTED_STATE;\n    this._resetNearestPoint();\n    this._changeStyle(this.lastSelectionMode);\n    if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\n      this._resetPointsView(HOVER);\n    }\n  },\n  _releaseSelectedState: function () {\n    this.fullState = this.fullState & ~SELECTED_STATE;\n    this._changeStyle(this.lastSelectionMode, SELECTION);\n    if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\n      this._setPointsView(HOVER);\n    }\n  },\n  isFullStackedSeries: function () {\n    return 0 === this.type.indexOf(\"fullstacked\");\n  },\n  isStackedSeries: function () {\n    return 0 === this.type.indexOf(\"stacked\");\n  },\n  resetApplyingAnimation: function (isFirstDrawing) {\n    this._resetApplyingAnimation = true;\n    if (isFirstDrawing) {\n      this._firstDrawing = true;\n    }\n  },\n  isFinancialSeries: function () {\n    return \"stock\" === this.type || \"candlestick\" === this.type;\n  },\n  _canChangeView: function () {\n    return !this.isSelected() && _normalizeEnum(this._options.hoverMode) !== NONE_MODE;\n  },\n  _changeStyle: function (mode, resetView, skipPoints) {\n    var state = this.fullState;\n    var styles = [NORMAL, HOVER, SELECTION, SELECTION];\n    if (\"none\" === this.lastHoverMode) {\n      state &= ~HOVER_STATE;\n    }\n    if (\"none\" === this.lastSelectionMode) {\n      state &= ~SELECTED_STATE;\n    }\n    if (includePointsMode(mode) && !skipPoints) {\n      if (!resetView) {\n        this._setPointsView(styles[state]);\n      } else {\n        this._resetPointsView(resetView);\n      }\n    }\n    this._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\n    this._applyStyle(this._styles[styles[state]]);\n  },\n  updateHover: function (x, y) {\n    var currentNearestPoint = this._nearestPoint;\n    var point = this.isHovered() && this.lastHoverMode === NEAREST_POINT && this.getNeighborPoint(x, y);\n    if (point !== currentNearestPoint && !(this.isSelected() && this.lastSelectionMode !== NONE_MODE)) {\n      this._resetNearestPoint();\n      if (point) {\n        point.setView(HOVER);\n        this._nearestPoint = point;\n      }\n    }\n  },\n  _getMainAxisName: function () {\n    return this._options.rotated ? \"X\" : \"Y\";\n  },\n  areLabelsVisible: function () {\n    return !_isDefined(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount;\n  },\n  getLabelVisibility: function () {\n    return this.areLabelsVisible() && this._options.label && this._options.label.visible;\n  },\n  customizePoint: function (point, pointData) {\n    var options = this._options;\n    var customizePoint = options.customizePoint;\n    var customizeObject;\n    var pointOptions;\n    var customLabelOptions;\n    var customOptions;\n    var customizeLabel = options.customizeLabel;\n    var useLabelCustomOptions;\n    var usePointCustomOptions;\n    if (customizeLabel && customizeLabel.call) {\n      customizeObject = _extend({\n        seriesName: this.name\n      }, pointData);\n      customizeObject.series = this;\n      customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\n      useLabelCustomOptions = customLabelOptions && !_isEmptyObject(customLabelOptions);\n      customLabelOptions = useLabelCustomOptions ? _extend(true, {}, options.label, customLabelOptions) : null;\n    }\n    if (customizePoint && customizePoint.call) {\n      customizeObject = customizeObject || _extend({\n        seriesName: this.name\n      }, pointData);\n      customizeObject.series = this;\n      customOptions = customizePoint.call(customizeObject, customizeObject);\n      usePointCustomOptions = customOptions && !_isEmptyObject(customOptions);\n    }\n    if (useLabelCustomOptions || usePointCustomOptions) {\n      pointOptions = this._parsePointOptions(this._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\n      pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\n      pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\n      point.updateOptions(pointOptions);\n    }\n  },\n  show: function () {\n    if (!this._visible) {\n      this._changeVisibility(true);\n    }\n  },\n  hide: function () {\n    if (this._visible) {\n      this._changeVisibility(false);\n    }\n  },\n  _changeVisibility: function (visibility) {\n    this._visible = this._options.visible = visibility;\n    this._updatePointsVisibility();\n    this.hidePointTooltip();\n    this._options.visibilityChanged(this);\n  },\n  _updatePointsVisibility: _noop,\n  hideLabels: function () {\n    _each(this._points, function (_, point) {\n      point._label.draw(false);\n    });\n  },\n  _parsePointOptions: function (pointOptions, labelOptions, data, point) {\n    var options = this._options;\n    var styles = this._createPointStyles(pointOptions, data, point);\n    var parsedOptions = _extend({}, pointOptions, {\n      type: options.type,\n      rotated: options.rotated,\n      styles: styles,\n      widgetType: options.widgetType,\n      visibilityChanged: options.visibilityChanged\n    });\n    parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\n    if (this.areErrorBarsVisible()) {\n      parsedOptions.errorBars = options.valueErrorBar;\n    }\n    return parsedOptions;\n  },\n  _preparePointOptions: function (customOptions) {\n    var pointOptions = this._getOptionsForPoint();\n    return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions;\n  },\n  _getMarkerGroupOptions: function () {\n    return _extend(false, {}, this._getOptionsForPoint(), {\n      hoverStyle: {},\n      selectionStyle: {}\n    });\n  },\n  _getAggregationMethod: function (isDiscrete, aggregateByCategory) {\n    var options = this.getOptions().aggregation;\n    var method = _normalizeEnum(options.method);\n    var customAggregator = \"custom\" === method && options.calculate;\n    var aggregator;\n    if (isDiscrete && !aggregateByCategory) {\n      aggregator = _ref => {\n        var {\n          data: data\n        } = _ref;\n        return data[0];\n      };\n    } else {\n      aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator];\n    }\n    return customAggregator || aggregator;\n  },\n  _resample(_ref2, data) {\n    var {\n      interval: interval,\n      ticks: ticks,\n      aggregateByCategory: aggregateByCategory\n    } = _ref2;\n    var that = this;\n    var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\n    var dataIndex = 0;\n    var dataSelector = this._getPointDataSelector();\n    var options = that.getOptions();\n    var addAggregatedData = (target, data, aggregationInfo) => {\n      if (!data) {\n        return;\n      }\n      var processData = d => {\n        var pointData = d && dataSelector(d, options);\n        if (pointData && that._checkData(pointData)) {\n          pointData.aggregationInfo = aggregationInfo;\n          target.push(pointData);\n        }\n      };\n      if (Array.isArray(data)) {\n        data.forEach(processData);\n      } else {\n        processData(data);\n      }\n    };\n    var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\n    if (isDiscrete) {\n      if (aggregateByCategory) {\n        var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\n        var groups = categories.reduce((g, category) => {\n          g[category.valueOf()] = [];\n          return g;\n        }, {});\n        data.forEach(dataItem => {\n          groups[dataItem.argument.valueOf()].push(dataItem);\n        });\n        return categories.reduce((result, c) => {\n          addAggregatedData(result, aggregationMethod({\n            aggregationInterval: null,\n            intervalStart: c,\n            intervalEnd: c,\n            data: groups[c.valueOf()].map(getData)\n          }, that));\n          return result;\n        }, []);\n      } else {\n        return data.reduce((result, dataItem, index, data) => {\n          result[1].push(dataItem);\n          if (index === data.length - 1 || (index + 1) % interval === 0) {\n            var dataInInterval = result[1];\n            var aggregationInfo = {\n              aggregationInterval: interval,\n              data: dataInInterval.map(getData)\n            };\n            addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\n            result[1] = [];\n          }\n          return result;\n        }, [[], []])[0];\n      }\n    }\n    var aggregatedData = [];\n    if (1 === ticks.length) {\n      var aggregationInfo = {\n        intervalStart: ticks[0],\n        intervalEnd: ticks[0],\n        aggregationInterval: null,\n        data: data.map(getData)\n      };\n      addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo);\n    } else {\n      for (var i = 1; i < ticks.length; i++) {\n        var intervalEnd = ticks[i];\n        var intervalStart = ticks[i - 1];\n        var dataInInterval = [];\n        while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\n          if (data[dataIndex].argument >= intervalStart) {\n            dataInInterval.push(data[dataIndex]);\n          }\n          dataIndex++;\n        }\n        var _aggregationInfo = {\n          intervalStart: intervalStart,\n          intervalEnd: intervalEnd,\n          aggregationInterval: interval,\n          data: dataInInterval.map(getData)\n        };\n        addAggregatedData(aggregatedData, aggregationMethod(_aggregationInfo, that), _aggregationInfo);\n      }\n    }\n    that._endUpdateData();\n    return aggregatedData;\n  },\n  canRenderCompleteHandle: function () {\n    var result = this._canRenderCompleteHandle;\n    delete this._canRenderCompleteHandle;\n    return !!result;\n  },\n  isHovered: function () {\n    return !!(1 & this.fullState);\n  },\n  isSelected: function () {\n    return !!(2 & this.fullState);\n  },\n  isVisible: function () {\n    return this._visible;\n  },\n  getAllPoints: function () {\n    this._createAllAggregatedPoints();\n    return (this._points || []).slice();\n  },\n  getPointByPos: function (pos) {\n    this._createAllAggregatedPoints();\n    return (this._points || [])[pos];\n  },\n  getVisiblePoints: function () {\n    return (this._drawnPoints || []).slice();\n  },\n  selectPoint: function (point) {\n    if (!point.isSelected()) {\n      setPointSelectedState(point, this._legendCallback);\n      this._eventPipe({\n        action: POINT_SELECT,\n        target: point\n      });\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  deselectPoint: function (point) {\n    if (point.isSelected()) {\n      releasePointSelectedState(point, this._legendCallback);\n      this._eventPipe({\n        action: POINT_DESELECT,\n        target: point\n      });\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  hover: function (mode) {\n    var eventTrigger = this._eventTrigger;\n    if (this.isHovered()) {\n      return;\n    }\n    this.lastHoverMode = _normalizeEnum(mode || this._options.hoverMode);\n    this.fullState = this.fullState | HOVER_STATE;\n    this._changeStyle(this.lastHoverMode, void 0, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: this\n    });\n  },\n  clearHover: function () {\n    var eventTrigger = this._eventTrigger;\n    if (!this.isHovered()) {\n      return;\n    }\n    this._resetNearestPoint();\n    this.fullState = this.fullState & ~HOVER_STATE;\n    this._changeStyle(this.lastHoverMode, HOVER, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: this\n    });\n  },\n  hoverPoint: function (point) {\n    if (!point.isHovered()) {\n      point.clearHover();\n      setPointHoverState(point, this._legendCallback);\n      this._canChangeView() && this._applyStyle(this._styles.hover);\n      this._eventPipe({\n        action: POINT_HOVER,\n        target: point\n      });\n      this._eventTrigger(POINT_HOVER_CHANGED, {\n        target: point\n      });\n    }\n  },\n  clearPointHover: function () {\n    var that = this;\n    that.getPoints().some(function (currentPoint) {\n      if (currentPoint.isHovered()) {\n        releasePointHoverState(currentPoint, that._legendCallback);\n        that._canChangeView() && that._applyStyle(that._styles.normal);\n        that._eventPipe({\n          action: CLEAR_POINT_HOVER,\n          target: currentPoint\n        });\n        that._eventTrigger(POINT_HOVER_CHANGED, {\n          target: currentPoint\n        });\n        return true;\n      }\n      return false;\n    });\n  },\n  showPointTooltip: function (point) {\n    triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point);\n  },\n  hidePointTooltip: function (point) {\n    triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point);\n  },\n  select: function () {\n    if (!this.isSelected()) {\n      this._setSelectedState(this._options.selectionMode);\n      this._eventPipe({\n        action: SERIES_SELECT,\n        target: this\n      });\n      this._group.toForeground();\n      this._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: this\n      });\n    }\n  },\n  clearSelection: function () {\n    if (this.isSelected()) {\n      this._releaseSelectedState();\n      this._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: this\n      });\n    }\n  },\n  getPointsByArg: function (arg, skipPointsCreation) {\n    var argValue = arg.valueOf();\n    var points = this.pointsByArgument[argValue];\n    if (!points && !skipPointsCreation && this._createAllAggregatedPoints()) {\n      points = this.pointsByArgument[argValue];\n    }\n    return points || [];\n  },\n  _createAllAggregatedPoints: function () {\n    if (this.useAggregation() && !this._useAllAggregatedPoints) {\n      this.createPoints(true);\n      return true;\n    }\n    return false;\n  },\n  getPointsByKeys: function (arg) {\n    return this.getPointsByArg(arg);\n  },\n  notify: function (data) {\n    var that = this;\n    var action = data.action;\n    var seriesModes = that._seriesModes;\n    var target = data.target;\n    var targetOptions = target.getOptions();\n    var pointHoverMode = _normalizeEnum(targetOptions.hoverMode);\n    var selectionModeOfPoint = _normalizeEnum(targetOptions.selectionMode);\n    if (action === POINT_HOVER) {\n      that._hoverPointHandler(target, pointHoverMode, data.notifyLegend);\n    } else if (action === CLEAR_POINT_HOVER) {\n      that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend);\n    } else if (action === SERIES_SELECT) {\n      target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection();\n    } else if (action === POINT_SELECT) {\n      if (\"single\" === seriesModes.pointSelectionMode) {\n        that.getPoints().some(function (currentPoint) {\n          if (currentPoint !== target && currentPoint.isSelected()) {\n            that.deselectPoint(currentPoint);\n            return true;\n          }\n          return false;\n        });\n      }\n      that._selectPointHandler(target, selectionModeOfPoint);\n    } else if (action === POINT_DESELECT) {\n      that._deselectPointHandler(target, selectionModeOfPoint);\n    }\n  },\n  _selectPointHandler: function (target, mode) {\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === this && this._setPointsView(SELECTION, target);\n    } else if (mode === ALL_ARGUMENT_POINTS) {\n      this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint !== target && currentPoint.setView(SELECTION);\n      });\n    }\n  },\n  _deselectPointHandler: function (target, mode) {\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === this && this._resetPointsView(SELECTION, target);\n    } else if (mode === ALL_ARGUMENT_POINTS) {\n      this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint !== target && currentPoint.resetView(SELECTION);\n      });\n    }\n  },\n  _hoverPointHandler: function (target, mode, notifyLegend) {\n    if (target.series !== this && mode === ALL_ARGUMENT_POINTS) {\n      this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.setView(HOVER);\n      });\n      notifyLegend && this._legendCallback(target);\n    } else if (mode === ALL_SERIES_POINTS && target.series === this) {\n      this._setPointsView(HOVER, target);\n    }\n  },\n  _clearPointHoverHandler: function (target, mode, notifyLegend) {\n    if (mode === ALL_ARGUMENT_POINTS) {\n      target.series !== this && this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.resetView(HOVER);\n      });\n      notifyLegend && this._legendCallback(target);\n    } else if (mode === ALL_SERIES_POINTS && target.series === this) {\n      this._resetPointsView(HOVER, target);\n    }\n  },\n  _deletePoints: function () {\n    this._disposePoints(this._points);\n    this._points = this._drawnPoints = null;\n  },\n  _deleteTrackers: function () {\n    _each(this._trackers || [], function (_, tracker) {\n      tracker.remove();\n    });\n    this._trackersGroup && this._trackersGroup.dispose();\n    this._trackers = this._trackersGroup = null;\n  },\n  dispose: function () {\n    this._deletePoints();\n    this._group.dispose();\n    this._labelsGroup && this._labelsGroup.dispose();\n    this._errorBarGroup && this._errorBarGroup.dispose();\n    this._deleteTrackers();\n    this._group = this._extGroups = this._markersGroup = this._elementsGroup = this._bordersGroup = this._labelsGroup = this._errorBarGroup = this._graphics = this._rangeData = this._renderer = this._styles = this._options = this._pointOptions = this._drawnPoints = this.pointsByArgument = this._segments = this._prevSeries = null;\n  },\n  correctPosition: _noop,\n  drawTrackers: _noop,\n  getNeighborPoint: _noop,\n  areErrorBarsVisible: _noop,\n  getMarginOptions: function () {\n    return this._patchMarginOptions({\n      percentStick: this.isFullStackedSeries()\n    });\n  },\n  getColor: function () {\n    return this.getLegendStyles().normal.fill;\n  },\n  getOpacity: function () {\n    return this._options.opacity;\n  },\n  getStackName: function () {\n    return this._stackName;\n  },\n  getBarOverlapGroup: function () {\n    return this._options.barOverlapGroup;\n  },\n  getPointByCoord: function (x, y) {\n    var point = this.getNeighborPoint(x, y);\n    return null !== point && void 0 !== point && point.coordsIn(x, y) ? point : null;\n  },\n  getValueAxis: function () {\n    return this._valueAxis;\n  },\n  getArgumentAxis: function () {\n    return this._argumentAxis;\n  },\n  getMarkersGroup() {\n    return this._markersGroup;\n  },\n  getRenderer() {\n    return this._renderer;\n  },\n  removePointElements() {\n    if (this._markersGroup) {\n      _each(this._points, (_, p) => p.deleteMarker());\n      this._markersGroup.dispose();\n      this._markersGroup = null;\n    }\n  },\n  removeGraphicElements() {\n    var that = this;\n    if (that._elementsGroup) {\n      that._elementsGroup.dispose();\n      that._elementsGroup = null;\n    }\n    _each(that._graphics || [], (_, elem) => {\n      that._removeElement(elem);\n    });\n    that._graphics = null;\n  },\n  removeBordersGroup() {\n    if (this._bordersGroup) {\n      this._bordersGroup.dispose();\n      this._bordersGroup = null;\n    }\n  }\n};\nexport var mixins = seriesNS.mixins;","map":{"version":3,"names":["seriesNS","isFunction","isDefined","_isDefined","isEmptyObject","_isEmptyObject","extend","_extend","each","_each","Point","normalizeEnum","_normalizeEnum","noop","_noop","consts","states","rangeCalculator","scatterSeries","lineSeries","areaSeries","barSeries","chart","rangeSeriesChart","bubbleSeriesChart","pieSeries","financialSeries","stackedSeries","DISCRETE","SELECTED_STATE","selectedMark","HOVER_STATE","hoverMark","HOVER","hover","NORMAL","normal","SELECTION","selection","APPLY_SELECTED","applySelected","APPLY_HOVER","applyHover","RESET_ITEM","resetItem","NONE_MODE","INCLUDE_POINTS","NEAREST_POINT","SERIES_SELECTION_CHANGED","POINT_SELECTION_CHANGED","SERIES_HOVER_CHANGED","POINT_HOVER_CHANGED","ALL_SERIES_POINTS","ALL_ARGUMENT_POINTS","POINT_HOVER","CLEAR_POINT_HOVER","SERIES_SELECT","POINT_SELECT","POINT_DESELECT","getEmptyBusinessRange","arg","val","triggerEvent","element","event","point","trigger","mixins","pie","polar","scatter","includePointsMode","mode","getLabelOptions","labelOptions","defaultColor","opt","labelFont","font","labelBorder","border","labelConnector","connector","backgroundAttr","fill","backgroundColor","visible","width","stroke","color","dashStyle","connectorAttr","position","alignment","format","argumentFormat","customizeText","attributes","size","showForZeroValues","horizontalOffset","verticalOffset","radialOffset","background","rotationAngle","wordWrap","textOverflow","cssClass","displayFormat","setPointHoverState","legendCallback","fullState","applyView","releasePointHoverState","releaseHoverState","setPointSelectedState","releasePointSelectedState","mergePointOptionsCore","base","extra","options","mergePointOptions","image","selectionStyle","hoverStyle","Series","settings","_extGroups","_renderer","renderer","_group","g","attr","class","_eventTrigger","eventTrigger","_eventPipe","eventPipe","_incidentOccurred","incidentOccurred","_legendCallback","updateOptions","getData","pointData","data","getValueChecker","axisType","axis","getOptions","allowNegatives","value","prototype","constructor","_createLegendState","getLegendStyles","_styles","legendStyles","_createStyles","mainSeriesColor","_parseStyle","setClippingParams","baseId","wideId","forceClipping","clipLabels","arguments","length","_paneClipRectID","_widePaneClipRectID","_forceClipping","_clipLabels","applyClip","resetClip","getTagField","_options","tagField","getValueFields","getSizeField","getArgumentField","getPoints","_points","getPointsInViewPort","_createPoint","index","oldPoint","pointsByArgument","_getCreatingPointOptions","argument","valueOf","update","isSelected","lastSelectionMode","setView","pointByArgument","push","hasValue","customizePoint","getRangeData","_visible","_getRangeData","getArgumentRange","getViewport","_deleteGroup","groupName","group","dispose","newOptions","widgetType","oldType","type","newType","toString","_checkType","_checkPolarBarType","isUpdated","_firstDrawing","_resetType","_setType","_defineDrawingState","_pointOptions","name","pane","tag","_seriesModes","commonSeriesModes","_valueAxis","valueAxis","_argumentAxis","argumentAxis","_stackName","_updateOptions","stack","barOverlapGroup","_createGroups","_processEmptyValue","ignoreEmptyPoints","x","_disposePoints","points","_","p","updateDataType","argumentType","valueType","argumentAxisType","valueAxisType","showZero","_argumentChecker","getArgumentAxis","_valueChecker","getValueAxis","_getOldPoint","oldPointsByArgument","splice","updateData","nameField","_canRenderCompleteHandle","dataSelector","_getPointDataSelector","itemsWithoutArgument","_data","reduce","dataItem","pointDataItem","nameFieldValue","_endUpdateData","_getData","useAggregation","_resample","getAggregationInfo","_useAllAggregatedPoints","aggregation","enabled","autoHidePointMarkersEnabled","usePointsToDefineAutoHiding","createPoints","useAllAggregatedPoints","_normalizeUsingAllAggregatedPoints","_createPoints","that","_calculateErrorBars","skippedFields","_checkData","pointIndex","field","Object","keys","forEach","key","_removeOldSegments","startIndex","_segments","_graphics","elem","_removeElement","_trackers","remove","_drawElements","animationEnabled","firstDrawing","translateAllPoints","closeSegment","closed","groupForPoint","markers","_markersGroup","errorBars","_errorBarGroup","_drawnPoints","segments","segment","translated","translate","setDefaultCoords","hasCoords","_drawPoint","groups","hasAnimation","setInvisibility","_drawSegment","_animate","draw","hideLayoutLabels","_appendInGroup","_applyVisibleArea","_setGroupsSettings","_resetApplyingAnimation","hideLabels","_changeStyle","isHovered","lastHoverMode","_applyStyle","_setLabelGroupSettings","_applyElementsClipRect","_applyClearingSettings","opacity","_labelsGroup","append","labelsGroup","spiderWidget","indexOf","seriesType","methodName","methods","_setPointsView","view","target","_resetPointsView","resetView","_resetNearestPoint","_nearestPoint","series","_setSelectedState","selectionMode","_releaseSelectedState","isFullStackedSeries","isStackedSeries","resetApplyingAnimation","isFirstDrawing","isFinancialSeries","_canChangeView","hoverMode","skipPoints","state","styles","updateHover","y","currentNearestPoint","getNeighborPoint","_getMainAxisName","rotated","areLabelsVisible","maxLabelCount","getLabelVisibility","label","customizeObject","pointOptions","customLabelOptions","customOptions","customizeLabel","useLabelCustomOptions","usePointCustomOptions","call","seriesName","_parsePointOptions","_preparePointOptions","show","_changeVisibility","hide","visibility","_updatePointsVisibility","hidePointTooltip","visibilityChanged","_label","_createPointStyles","parsedOptions","areErrorBarsVisible","valueErrorBar","_getOptionsForPoint","_getMarkerGroupOptions","_getAggregationMethod","isDiscrete","aggregateByCategory","method","customAggregator","calculate","aggregator","_ref","_aggregators","_defaultAggregator","_ref2","interval","ticks","dataIndex","addAggregatedData","aggregationInfo","processData","d","Array","isArray","aggregationMethod","categories","getTranslator","getBusinessRange","category","result","c","aggregationInterval","intervalStart","intervalEnd","map","dataInInterval","aggregatedData","i","_aggregationInfo","canRenderCompleteHandle","isVisible","getAllPoints","_createAllAggregatedPoints","slice","getPointByPos","pos","getVisiblePoints","selectPoint","action","deselectPoint","clearHover","hoverPoint","clearPointHover","some","currentPoint","showPointTooltip","seriesGroup","select","toForeground","clearSelection","getPointsByArg","skipPointsCreation","argValue","getPointsByKeys","notify","seriesModes","targetOptions","pointHoverMode","selectionModeOfPoint","_hoverPointHandler","notifyLegend","_clearPointHoverHandler","seriesSelectionMode","pointSelectionMode","_selectPointHandler","_deselectPointHandler","argumentIndex","_deletePoints","_deleteTrackers","tracker","_trackersGroup","_elementsGroup","_bordersGroup","_rangeData","_prevSeries","correctPosition","drawTrackers","getMarginOptions","_patchMarginOptions","percentStick","getColor","getOpacity","getStackName","getBarOverlapGroup","getPointByCoord","coordsIn","getMarkersGroup","getRenderer","removePointElements","deleteMarker","removeGraphicElements","removeBordersGroup"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/series/base_series.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/base_series.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar seriesNS = {};\r\nimport {\r\n    isFunction,\r\n    isDefined as _isDefined,\r\n    isEmptyObject as _isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend as _extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each as _each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Point\r\n} from \"./points/base_point\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nimport consts from \"../components/consts\";\r\nvar states = consts.states;\r\nimport rangeCalculator from \"./helpers/range_data_calculator\";\r\nimport * as scatterSeries from \"./scatter_series\";\r\nimport * as lineSeries from \"./line_series\";\r\nimport * as areaSeries from \"./area_series\";\r\nimport * as barSeries from \"./bar_series\";\r\nimport {\r\n    chart as rangeSeriesChart\r\n} from \"./range_series\";\r\nimport {\r\n    chart as bubbleSeriesChart\r\n} from \"./bubble_series\";\r\nimport * as pieSeries from \"./pie_series\";\r\nimport * as financialSeries from \"./financial_series\";\r\nimport * as stackedSeries from \"./stacked_series\";\r\nvar DISCRETE = \"discrete\";\r\nvar SELECTED_STATE = states.selectedMark;\r\nvar HOVER_STATE = states.hoverMark;\r\nvar HOVER = states.hover;\r\nvar NORMAL = states.normal;\r\nvar SELECTION = states.selection;\r\nvar APPLY_SELECTED = states.applySelected;\r\nvar APPLY_HOVER = states.applyHover;\r\nvar RESET_ITEM = states.resetItem;\r\nvar NONE_MODE = \"none\";\r\nvar INCLUDE_POINTS = \"includepoints\";\r\nvar NEAREST_POINT = \"nearestpoint\";\r\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\r\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\r\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\r\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\r\nvar ALL_SERIES_POINTS = \"allseriespoints\";\r\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\r\nvar POINT_HOVER = \"pointHover\";\r\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\r\nvar SERIES_SELECT = \"seriesSelect\";\r\nvar POINT_SELECT = \"pointSelect\";\r\nvar POINT_DESELECT = \"pointDeselect\";\r\nvar getEmptyBusinessRange = function() {\r\n    return {\r\n        arg: {},\r\n        val: {}\r\n    }\r\n};\r\n\r\nfunction triggerEvent(element, event, point) {\r\n    element && element.trigger(event, point)\r\n}\r\nseriesNS.mixins = {\r\n    chart: {},\r\n    pie: {},\r\n    polar: {}\r\n};\r\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\r\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\r\n_extend(seriesNS.mixins.pie, pieSeries);\r\n_extend(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, rangeSeriesChart, bubbleSeriesChart, financialSeries, stackedSeries.chart);\r\n_extend(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, stackedSeries.polar);\r\n\r\nfunction includePointsMode(mode) {\r\n    mode = _normalizeEnum(mode);\r\n    return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS\r\n}\r\n\r\nfunction getLabelOptions(labelOptions, defaultColor) {\r\n    var opt = labelOptions || {};\r\n    var labelFont = _extend({}, opt.font) || {};\r\n    var labelBorder = opt.border || {};\r\n    var labelConnector = opt.connector || {};\r\n    var backgroundAttr = {\r\n        fill: opt.backgroundColor || defaultColor,\r\n        \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\r\n        stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\r\n        dashStyle: labelBorder.dashStyle\r\n    };\r\n    var connectorAttr = {\r\n        stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\r\n        \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\r\n    };\r\n    labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === _normalizeEnum(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\r\n    return {\r\n        alignment: opt.alignment,\r\n        format: opt.format,\r\n        argumentFormat: opt.argumentFormat,\r\n        customizeText: isFunction(opt.customizeText) ? opt.customizeText : void 0,\r\n        attributes: {\r\n            font: labelFont\r\n        },\r\n        visible: 0 !== labelFont.size ? opt.visible : false,\r\n        showForZeroValues: opt.showForZeroValues,\r\n        horizontalOffset: opt.horizontalOffset,\r\n        verticalOffset: opt.verticalOffset,\r\n        radialOffset: opt.radialOffset,\r\n        background: backgroundAttr,\r\n        position: opt.position,\r\n        connector: connectorAttr,\r\n        rotationAngle: opt.rotationAngle,\r\n        wordWrap: opt.wordWrap,\r\n        textOverflow: opt.textOverflow,\r\n        cssClass: opt.cssClass,\r\n        displayFormat: opt.displayFormat\r\n    }\r\n}\r\n\r\nfunction setPointHoverState(point, legendCallback) {\r\n    point.fullState |= HOVER_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointHoverState(point, legendCallback) {\r\n    point.fullState &= ~HOVER_STATE;\r\n    point.applyView(legendCallback);\r\n    point.releaseHoverState()\r\n}\r\n\r\nfunction setPointSelectedState(point, legendCallback) {\r\n    point.fullState |= SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointSelectedState(point, legendCallback) {\r\n    point.fullState &= ~SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction mergePointOptionsCore(base, extra) {\r\n    var options = _extend({}, base, extra);\r\n    options.border = _extend({}, base && base.border, extra && extra.border);\r\n    return options\r\n}\r\n\r\nfunction mergePointOptions(base, extra) {\r\n    var options = mergePointOptionsCore(base, extra);\r\n    options.image = _extend(true, {}, base.image, extra.image);\r\n    options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\r\n    options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\r\n    return options\r\n}\r\nexport function Series(settings, options) {\r\n    this.fullState = 0;\r\n    this._extGroups = settings;\r\n    this._renderer = settings.renderer;\r\n    this._group = settings.renderer.g().attr({\r\n        class: \"dxc-series\"\r\n    });\r\n    this._eventTrigger = settings.eventTrigger;\r\n    this._eventPipe = settings.eventPipe;\r\n    this._incidentOccurred = settings.incidentOccurred;\r\n    this._legendCallback = _noop;\r\n    this.updateOptions(options, settings)\r\n}\r\n\r\nfunction getData(pointData) {\r\n    return pointData.data\r\n}\r\n\r\nfunction getValueChecker(axisType, axis) {\r\n    if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\r\n        return () => true\r\n    } else {\r\n        return value => value > 0\r\n    }\r\n}\r\nSeries.prototype = {\r\n    constructor: Series,\r\n    _createLegendState: _noop,\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    _createStyles: function(options) {\r\n        var mainSeriesColor = options.mainSeriesColor;\r\n        this._styles = {\r\n            normal: this._parseStyle(options, mainSeriesColor, mainSeriesColor),\r\n            hover: this._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            selection: this._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            legendStyles: {\r\n                normal: this._createLegendState(options, mainSeriesColor),\r\n                hover: this._createLegendState(options.hoverStyle || {}, mainSeriesColor),\r\n                selection: this._createLegendState(options.selectionStyle || {}, mainSeriesColor)\r\n            }\r\n        }\r\n    },\r\n    setClippingParams(baseId, wideId, forceClipping) {\r\n        var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\r\n        this._paneClipRectID = baseId;\r\n        this._widePaneClipRectID = wideId;\r\n        this._forceClipping = forceClipping;\r\n        this._clipLabels = clipLabels\r\n    },\r\n    applyClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": this._paneClipRectID\r\n        })\r\n    },\r\n    resetClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": null\r\n        })\r\n    },\r\n    getTagField: function() {\r\n        return this._options.tagField || \"tag\"\r\n    },\r\n    getValueFields: _noop,\r\n    getSizeField: _noop,\r\n    getArgumentField: _noop,\r\n    getPoints: function() {\r\n        return this._points\r\n    },\r\n    getPointsInViewPort: function() {\r\n        return rangeCalculator.getPointsInViewPort(this)\r\n    },\r\n    _createPoint: function(data, index, oldPoint) {\r\n        data.index = index;\r\n        var pointsByArgument = this.pointsByArgument;\r\n        var options = this._getCreatingPointOptions(data);\r\n        var arg = data.argument.valueOf();\r\n        var point = oldPoint;\r\n        if (point) {\r\n            point.update(data, options)\r\n        } else {\r\n            point = new Point(this, data, options);\r\n            if (this.isSelected() && includePointsMode(this.lastSelectionMode)) {\r\n                point.setView(SELECTION)\r\n            }\r\n        }\r\n        var pointByArgument = pointsByArgument[arg];\r\n        if (pointByArgument) {\r\n            pointByArgument.push(point)\r\n        } else {\r\n            pointsByArgument[arg] = [point]\r\n        }\r\n        if (point.hasValue()) {\r\n            this.customizePoint(point, data)\r\n        }\r\n        return point\r\n    },\r\n    getRangeData: function() {\r\n        return this._visible ? this._getRangeData() : getEmptyBusinessRange()\r\n    },\r\n    getArgumentRange: function() {\r\n        return this._visible ? rangeCalculator.getArgumentRange(this) : getEmptyBusinessRange()\r\n    },\r\n    getViewport: function() {\r\n        return rangeCalculator.getViewport(this)\r\n    },\r\n    _deleteGroup: function(groupName) {\r\n        var group = this[groupName];\r\n        if (group) {\r\n            group.dispose();\r\n            this[groupName] = null\r\n        }\r\n    },\r\n    updateOptions(newOptions, settings) {\r\n        var widgetType = newOptions.widgetType;\r\n        var oldType = this.type;\r\n        var newType = newOptions.type;\r\n        this.type = newType && _normalizeEnum(newType.toString());\r\n        if (!this._checkType(widgetType) || this._checkPolarBarType(widgetType, newOptions)) {\r\n            this.dispose();\r\n            this.isUpdated = false;\r\n            return\r\n        }\r\n        if (oldType !== this.type) {\r\n            this._firstDrawing = true;\r\n            this._resetType(oldType, widgetType);\r\n            this._setType(this.type, widgetType)\r\n        } else {\r\n            this._defineDrawingState()\r\n        }\r\n        this._options = newOptions;\r\n        this._pointOptions = null;\r\n        this.name = newOptions.name;\r\n        this.pane = newOptions.pane;\r\n        this.tag = newOptions.tag;\r\n        if (settings) {\r\n            this._seriesModes = settings.commonSeriesModes || this._seriesModes;\r\n            this._valueAxis = settings.valueAxis || this._valueAxis;\r\n            this.axis = this._valueAxis && this._valueAxis.name;\r\n            this._argumentAxis = settings.argumentAxis || this._argumentAxis\r\n        }\r\n        this._createStyles(newOptions);\r\n        this._stackName = null;\r\n        this._updateOptions(newOptions);\r\n        this._visible = newOptions.visible;\r\n        this.isUpdated = true;\r\n        this.stack = newOptions.stack;\r\n        this.barOverlapGroup = newOptions.barOverlapGroup;\r\n        this._createGroups();\r\n        this._processEmptyValue = newOptions.ignoreEmptyPoints ? x => null === x ? void 0 : x : x => x\r\n    },\r\n    _defineDrawingState() {\r\n        this._firstDrawing = true\r\n    },\r\n    _disposePoints: function(points) {\r\n        _each(points || [], (function(_, p) {\r\n            p.dispose()\r\n        }))\r\n    },\r\n    updateDataType: function(settings) {\r\n        this.argumentType = settings.argumentType;\r\n        this.valueType = settings.valueType;\r\n        this.argumentAxisType = settings.argumentAxisType;\r\n        this.valueAxisType = settings.valueAxisType;\r\n        this.showZero = settings.showZero;\r\n        this._argumentChecker = getValueChecker(settings.argumentAxisType, this.getArgumentAxis());\r\n        this._valueChecker = getValueChecker(settings.valueAxisType, this.getValueAxis());\r\n        return this\r\n    },\r\n    _argumentChecker: function() {\r\n        return true\r\n    },\r\n    _valueChecker: function() {\r\n        return true\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    _getOldPoint: function(data, oldPointsByArgument, index) {\r\n        var arg = data.argument && data.argument.valueOf();\r\n        var point = (oldPointsByArgument[arg] || [])[0];\r\n        if (point) {\r\n            oldPointsByArgument[arg].splice(0, 1)\r\n        }\r\n        return point\r\n    },\r\n    updateData: function(data) {\r\n        var options = this._options;\r\n        var nameField = options.nameField;\r\n        data = data || [];\r\n        if (data.length) {\r\n            this._canRenderCompleteHandle = true\r\n        }\r\n        var dataSelector = this._getPointDataSelector();\r\n        var itemsWithoutArgument = 0;\r\n        this._data = data.reduce((data, dataItem, index) => {\r\n            var pointDataItem = dataSelector(dataItem);\r\n            if (_isDefined(pointDataItem.argument)) {\r\n                if (!nameField || dataItem[nameField] === options.nameFieldValue) {\r\n                    pointDataItem.index = index;\r\n                    data.push(pointDataItem)\r\n                }\r\n            } else {\r\n                itemsWithoutArgument++\r\n            }\r\n            return data\r\n        }, []);\r\n        if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\r\n            this._incidentOccurred(\"W2002\", [this.name, this.getArgumentField()])\r\n        }\r\n        this._endUpdateData()\r\n    },\r\n    _getData() {\r\n        var data = this._data || [];\r\n        if (this.useAggregation()) {\r\n            data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data)\r\n        }\r\n        return data\r\n    },\r\n    useAggregation: function() {\r\n        var aggregation = this.getOptions().aggregation;\r\n        return aggregation && aggregation.enabled\r\n    },\r\n    autoHidePointMarkersEnabled: _noop,\r\n    usePointsToDefineAutoHiding: _noop,\r\n    createPoints(useAllAggregatedPoints) {\r\n        this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\r\n        this._createPoints()\r\n    },\r\n    _normalizeUsingAllAggregatedPoints: function(useAllAggregatedPoints) {\r\n        this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints)\r\n    },\r\n    _createPoints: function() {\r\n        var that = this;\r\n        var oldPointsByArgument = that.pointsByArgument || {};\r\n        var data = that._getData();\r\n        that.pointsByArgument = {};\r\n        that._calculateErrorBars(data);\r\n        var skippedFields = {};\r\n        var points = data.reduce((points, pointDataItem) => {\r\n            if (that._checkData(pointDataItem, skippedFields)) {\r\n                var pointIndex = points.length;\r\n                var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\r\n                var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\r\n                points.push(point)\r\n            }\r\n            return points\r\n        }, []);\r\n        for (var field in skippedFields) {\r\n            if (skippedFields[field] === data.length) {\r\n                that._incidentOccurred(\"W2002\", [that.name, field])\r\n            }\r\n        }\r\n        Object.keys(oldPointsByArgument).forEach(key => that._disposePoints(oldPointsByArgument[key]));\r\n        that._points = points\r\n    },\r\n    _removeOldSegments: function() {\r\n        var that = this;\r\n        var startIndex = that._segments.length;\r\n        _each(that._graphics.splice(startIndex, that._graphics.length) || [], (function(_, elem) {\r\n            that._removeElement(elem)\r\n        }));\r\n        if (that._trackers) {\r\n            _each(that._trackers.splice(startIndex, that._trackers.length) || [], (function(_, elem) {\r\n                elem.remove()\r\n            }))\r\n        }\r\n    },\r\n    _drawElements: function(animationEnabled, firstDrawing, translateAllPoints) {\r\n        var that = this;\r\n        var points = that._points || [];\r\n        var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\r\n        var groupForPoint = {\r\n            markers: that._markersGroup,\r\n            errorBars: that._errorBarGroup\r\n        };\r\n        that._drawnPoints = [];\r\n        that._graphics = that._graphics || [];\r\n        that._segments = [];\r\n        var segments = points.reduce((function(segments, p) {\r\n            var segment = segments[segments.length - 1];\r\n            if (!p.translated || translateAllPoints) {\r\n                p.translate();\r\n                !translateAllPoints && p.setDefaultCoords()\r\n            }\r\n            if (p.hasValue() && p.hasCoords()) {\r\n                translateAllPoints && that._drawPoint({\r\n                    point: p,\r\n                    groups: groupForPoint,\r\n                    hasAnimation: animationEnabled,\r\n                    firstDrawing: firstDrawing\r\n                });\r\n                segment.push(p)\r\n            } else if (!p.hasValue()) {\r\n                segment.length && segments.push([])\r\n            } else {\r\n                p.setInvisibility()\r\n            }\r\n            return segments\r\n        }), [\r\n            []\r\n        ]);\r\n        segments.forEach((function(segment, index) {\r\n            if (segment.length) {\r\n                that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1)\r\n            }\r\n        }), segments);\r\n        that._firstDrawing = !points.length;\r\n        that._removeOldSegments();\r\n        animationEnabled && that._animate(firstDrawing)\r\n    },\r\n    draw: function(animationEnabled, hideLayoutLabels, legendCallback) {\r\n        var firstDrawing = this._firstDrawing;\r\n        this._legendCallback = legendCallback || this._legendCallback;\r\n        if (!this._visible) {\r\n            this._group.remove();\r\n            return\r\n        }\r\n        this._appendInGroup();\r\n        this._applyVisibleArea();\r\n        this._setGroupsSettings(animationEnabled, firstDrawing);\r\n        !firstDrawing && !this._resetApplyingAnimation && this._drawElements(false, firstDrawing, false);\r\n        this._drawElements(animationEnabled, firstDrawing, true);\r\n        hideLayoutLabels && this.hideLabels();\r\n        if (this.isSelected()) {\r\n            this._changeStyle(this.lastSelectionMode, void 0, true)\r\n        } else if (this.isHovered()) {\r\n            this._changeStyle(this.lastHoverMode, void 0, true)\r\n        } else {\r\n            this._applyStyle(this._styles.normal)\r\n        }\r\n        this._resetApplyingAnimation = false\r\n    },\r\n    _setLabelGroupSettings: function(animationEnabled) {\r\n        var settings = {\r\n            class: \"dxc-labels\",\r\n            \"pointer-events\": \"none\"\r\n        };\r\n        this._clipLabels && this._applyElementsClipRect(settings);\r\n        this._applyClearingSettings(settings);\r\n        animationEnabled && (settings.opacity = .001);\r\n        this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup)\r\n    },\r\n    _checkType: function(widgetType) {\r\n        return !!seriesNS.mixins[widgetType][this.type]\r\n    },\r\n    _checkPolarBarType: function(widgetType, options) {\r\n        return \"polar\" === widgetType && options.spiderWidget && -1 !== this.type.indexOf(\"bar\")\r\n    },\r\n    _resetType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods;\r\n        if (seriesType) {\r\n            methods = seriesNS.mixins[widgetType][seriesType];\r\n            for (methodName in methods) {\r\n                delete this[methodName]\r\n            }\r\n        }\r\n    },\r\n    _setType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods = seriesNS.mixins[widgetType][seriesType];\r\n        for (methodName in methods) {\r\n            this[methodName] = methods[methodName]\r\n        }\r\n    },\r\n    _setPointsView: function(view, target) {\r\n        this.getPoints().forEach((function(point) {\r\n            if (target !== point) {\r\n                point.setView(view)\r\n            }\r\n        }))\r\n    },\r\n    _resetPointsView: function(view, target) {\r\n        this.getPoints().forEach((function(point) {\r\n            if (target !== point) {\r\n                point.resetView(view)\r\n            }\r\n        }))\r\n    },\r\n    _resetNearestPoint: function() {\r\n        this._nearestPoint && null !== this._nearestPoint.series && this._nearestPoint.resetView(HOVER);\r\n        this._nearestPoint = null\r\n    },\r\n    _setSelectedState: function(mode) {\r\n        this.lastSelectionMode = _normalizeEnum(mode || this._options.selectionMode);\r\n        this.fullState = this.fullState | SELECTED_STATE;\r\n        this._resetNearestPoint();\r\n        this._changeStyle(this.lastSelectionMode);\r\n        if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\r\n            this._resetPointsView(HOVER)\r\n        }\r\n    },\r\n    _releaseSelectedState: function() {\r\n        this.fullState = this.fullState & ~SELECTED_STATE;\r\n        this._changeStyle(this.lastSelectionMode, SELECTION);\r\n        if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\r\n            this._setPointsView(HOVER)\r\n        }\r\n    },\r\n    isFullStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"fullstacked\")\r\n    },\r\n    isStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"stacked\")\r\n    },\r\n    resetApplyingAnimation: function(isFirstDrawing) {\r\n        this._resetApplyingAnimation = true;\r\n        if (isFirstDrawing) {\r\n            this._firstDrawing = true\r\n        }\r\n    },\r\n    isFinancialSeries: function() {\r\n        return \"stock\" === this.type || \"candlestick\" === this.type\r\n    },\r\n    _canChangeView: function() {\r\n        return !this.isSelected() && _normalizeEnum(this._options.hoverMode) !== NONE_MODE\r\n    },\r\n    _changeStyle: function(mode, resetView, skipPoints) {\r\n        var state = this.fullState;\r\n        var styles = [NORMAL, HOVER, SELECTION, SELECTION];\r\n        if (\"none\" === this.lastHoverMode) {\r\n            state &= ~HOVER_STATE\r\n        }\r\n        if (\"none\" === this.lastSelectionMode) {\r\n            state &= ~SELECTED_STATE\r\n        }\r\n        if (includePointsMode(mode) && !skipPoints) {\r\n            if (!resetView) {\r\n                this._setPointsView(styles[state])\r\n            } else {\r\n                this._resetPointsView(resetView)\r\n            }\r\n        }\r\n        this._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\r\n        this._applyStyle(this._styles[styles[state]])\r\n    },\r\n    updateHover: function(x, y) {\r\n        var currentNearestPoint = this._nearestPoint;\r\n        var point = this.isHovered() && this.lastHoverMode === NEAREST_POINT && this.getNeighborPoint(x, y);\r\n        if (point !== currentNearestPoint && !(this.isSelected() && this.lastSelectionMode !== NONE_MODE)) {\r\n            this._resetNearestPoint();\r\n            if (point) {\r\n                point.setView(HOVER);\r\n                this._nearestPoint = point\r\n            }\r\n        }\r\n    },\r\n    _getMainAxisName: function() {\r\n        return this._options.rotated ? \"X\" : \"Y\"\r\n    },\r\n    areLabelsVisible: function() {\r\n        return !_isDefined(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount\r\n    },\r\n    getLabelVisibility: function() {\r\n        return this.areLabelsVisible() && this._options.label && this._options.label.visible\r\n    },\r\n    customizePoint: function(point, pointData) {\r\n        var options = this._options;\r\n        var customizePoint = options.customizePoint;\r\n        var customizeObject;\r\n        var pointOptions;\r\n        var customLabelOptions;\r\n        var customOptions;\r\n        var customizeLabel = options.customizeLabel;\r\n        var useLabelCustomOptions;\r\n        var usePointCustomOptions;\r\n        if (customizeLabel && customizeLabel.call) {\r\n            customizeObject = _extend({\r\n                seriesName: this.name\r\n            }, pointData);\r\n            customizeObject.series = this;\r\n            customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\r\n            useLabelCustomOptions = customLabelOptions && !_isEmptyObject(customLabelOptions);\r\n            customLabelOptions = useLabelCustomOptions ? _extend(true, {}, options.label, customLabelOptions) : null\r\n        }\r\n        if (customizePoint && customizePoint.call) {\r\n            customizeObject = customizeObject || _extend({\r\n                seriesName: this.name\r\n            }, pointData);\r\n            customizeObject.series = this;\r\n            customOptions = customizePoint.call(customizeObject, customizeObject);\r\n            usePointCustomOptions = customOptions && !_isEmptyObject(customOptions)\r\n        }\r\n        if (useLabelCustomOptions || usePointCustomOptions) {\r\n            pointOptions = this._parsePointOptions(this._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\r\n            pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\r\n            pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\r\n            point.updateOptions(pointOptions)\r\n        }\r\n    },\r\n    show: function() {\r\n        if (!this._visible) {\r\n            this._changeVisibility(true)\r\n        }\r\n    },\r\n    hide: function() {\r\n        if (this._visible) {\r\n            this._changeVisibility(false)\r\n        }\r\n    },\r\n    _changeVisibility: function(visibility) {\r\n        this._visible = this._options.visible = visibility;\r\n        this._updatePointsVisibility();\r\n        this.hidePointTooltip();\r\n        this._options.visibilityChanged(this)\r\n    },\r\n    _updatePointsVisibility: _noop,\r\n    hideLabels: function() {\r\n        _each(this._points, (function(_, point) {\r\n            point._label.draw(false)\r\n        }))\r\n    },\r\n    _parsePointOptions: function(pointOptions, labelOptions, data, point) {\r\n        var options = this._options;\r\n        var styles = this._createPointStyles(pointOptions, data, point);\r\n        var parsedOptions = _extend({}, pointOptions, {\r\n            type: options.type,\r\n            rotated: options.rotated,\r\n            styles: styles,\r\n            widgetType: options.widgetType,\r\n            visibilityChanged: options.visibilityChanged\r\n        });\r\n        parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\r\n        if (this.areErrorBarsVisible()) {\r\n            parsedOptions.errorBars = options.valueErrorBar\r\n        }\r\n        return parsedOptions\r\n    },\r\n    _preparePointOptions: function(customOptions) {\r\n        var pointOptions = this._getOptionsForPoint();\r\n        return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions\r\n    },\r\n    _getMarkerGroupOptions: function() {\r\n        return _extend(false, {}, this._getOptionsForPoint(), {\r\n            hoverStyle: {},\r\n            selectionStyle: {}\r\n        })\r\n    },\r\n    _getAggregationMethod: function(isDiscrete, aggregateByCategory) {\r\n        var options = this.getOptions().aggregation;\r\n        var method = _normalizeEnum(options.method);\r\n        var customAggregator = \"custom\" === method && options.calculate;\r\n        var aggregator;\r\n        if (isDiscrete && !aggregateByCategory) {\r\n            aggregator = _ref => {\r\n                var {\r\n                    data: data\r\n                } = _ref;\r\n                return data[0]\r\n            }\r\n        } else {\r\n            aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator]\r\n        }\r\n        return customAggregator || aggregator\r\n    },\r\n    _resample(_ref2, data) {\r\n        var {\r\n            interval: interval,\r\n            ticks: ticks,\r\n            aggregateByCategory: aggregateByCategory\r\n        } = _ref2;\r\n        var that = this;\r\n        var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\r\n        var dataIndex = 0;\r\n        var dataSelector = this._getPointDataSelector();\r\n        var options = that.getOptions();\r\n        var addAggregatedData = (target, data, aggregationInfo) => {\r\n            if (!data) {\r\n                return\r\n            }\r\n            var processData = d => {\r\n                var pointData = d && dataSelector(d, options);\r\n                if (pointData && that._checkData(pointData)) {\r\n                    pointData.aggregationInfo = aggregationInfo;\r\n                    target.push(pointData)\r\n                }\r\n            };\r\n            if (Array.isArray(data)) {\r\n                data.forEach(processData)\r\n            } else {\r\n                processData(data)\r\n            }\r\n        };\r\n        var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\r\n        if (isDiscrete) {\r\n            if (aggregateByCategory) {\r\n                var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\r\n                var groups = categories.reduce((g, category) => {\r\n                    g[category.valueOf()] = [];\r\n                    return g\r\n                }, {});\r\n                data.forEach(dataItem => {\r\n                    groups[dataItem.argument.valueOf()].push(dataItem)\r\n                });\r\n                return categories.reduce((result, c) => {\r\n                    addAggregatedData(result, aggregationMethod({\r\n                        aggregationInterval: null,\r\n                        intervalStart: c,\r\n                        intervalEnd: c,\r\n                        data: groups[c.valueOf()].map(getData)\r\n                    }, that));\r\n                    return result\r\n                }, [])\r\n            } else {\r\n                return data.reduce((result, dataItem, index, data) => {\r\n                    result[1].push(dataItem);\r\n                    if (index === data.length - 1 || (index + 1) % interval === 0) {\r\n                        var dataInInterval = result[1];\r\n                        var aggregationInfo = {\r\n                            aggregationInterval: interval,\r\n                            data: dataInInterval.map(getData)\r\n                        };\r\n                        addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\r\n                        result[1] = []\r\n                    }\r\n                    return result\r\n                }, [\r\n                    [],\r\n                    []\r\n                ])[0]\r\n            }\r\n        }\r\n        var aggregatedData = [];\r\n        if (1 === ticks.length) {\r\n            var aggregationInfo = {\r\n                intervalStart: ticks[0],\r\n                intervalEnd: ticks[0],\r\n                aggregationInterval: null,\r\n                data: data.map(getData)\r\n            };\r\n            addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo)\r\n        } else {\r\n            for (var i = 1; i < ticks.length; i++) {\r\n                var intervalEnd = ticks[i];\r\n                var intervalStart = ticks[i - 1];\r\n                var dataInInterval = [];\r\n                while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\r\n                    if (data[dataIndex].argument >= intervalStart) {\r\n                        dataInInterval.push(data[dataIndex])\r\n                    }\r\n                    dataIndex++\r\n                }\r\n                var _aggregationInfo = {\r\n                    intervalStart: intervalStart,\r\n                    intervalEnd: intervalEnd,\r\n                    aggregationInterval: interval,\r\n                    data: dataInInterval.map(getData)\r\n                };\r\n                addAggregatedData(aggregatedData, aggregationMethod(_aggregationInfo, that), _aggregationInfo)\r\n            }\r\n        }\r\n        that._endUpdateData();\r\n        return aggregatedData\r\n    },\r\n    canRenderCompleteHandle: function() {\r\n        var result = this._canRenderCompleteHandle;\r\n        delete this._canRenderCompleteHandle;\r\n        return !!result\r\n    },\r\n    isHovered: function() {\r\n        return !!(1 & this.fullState)\r\n    },\r\n    isSelected: function() {\r\n        return !!(2 & this.fullState)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    getAllPoints: function() {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || []).slice()\r\n    },\r\n    getPointByPos: function(pos) {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || [])[pos]\r\n    },\r\n    getVisiblePoints: function() {\r\n        return (this._drawnPoints || []).slice()\r\n    },\r\n    selectPoint: function(point) {\r\n        if (!point.isSelected()) {\r\n            setPointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_SELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    deselectPoint: function(point) {\r\n        if (point.isSelected()) {\r\n            releasePointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_DESELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    hover: function(mode) {\r\n        var eventTrigger = this._eventTrigger;\r\n        if (this.isHovered()) {\r\n            return\r\n        }\r\n        this.lastHoverMode = _normalizeEnum(mode || this._options.hoverMode);\r\n        this.fullState = this.fullState | HOVER_STATE;\r\n        this._changeStyle(this.lastHoverMode, void 0, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: this\r\n        })\r\n    },\r\n    clearHover: function() {\r\n        var eventTrigger = this._eventTrigger;\r\n        if (!this.isHovered()) {\r\n            return\r\n        }\r\n        this._resetNearestPoint();\r\n        this.fullState = this.fullState & ~HOVER_STATE;\r\n        this._changeStyle(this.lastHoverMode, HOVER, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: this\r\n        })\r\n    },\r\n    hoverPoint: function(point) {\r\n        if (!point.isHovered()) {\r\n            point.clearHover();\r\n            setPointHoverState(point, this._legendCallback);\r\n            this._canChangeView() && this._applyStyle(this._styles.hover);\r\n            this._eventPipe({\r\n                action: POINT_HOVER,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_HOVER_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    clearPointHover: function() {\r\n        var that = this;\r\n        that.getPoints().some((function(currentPoint) {\r\n            if (currentPoint.isHovered()) {\r\n                releasePointHoverState(currentPoint, that._legendCallback);\r\n                that._canChangeView() && that._applyStyle(that._styles.normal);\r\n                that._eventPipe({\r\n                    action: CLEAR_POINT_HOVER,\r\n                    target: currentPoint\r\n                });\r\n                that._eventTrigger(POINT_HOVER_CHANGED, {\r\n                    target: currentPoint\r\n                });\r\n                return true\r\n            }\r\n            return false\r\n        }))\r\n    },\r\n    showPointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point)\r\n    },\r\n    hidePointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point)\r\n    },\r\n    select: function() {\r\n        if (!this.isSelected()) {\r\n            this._setSelectedState(this._options.selectionMode);\r\n            this._eventPipe({\r\n                action: SERIES_SELECT,\r\n                target: this\r\n            });\r\n            this._group.toForeground();\r\n            this._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: this\r\n            })\r\n        }\r\n    },\r\n    clearSelection: function() {\r\n        if (this.isSelected()) {\r\n            this._releaseSelectedState();\r\n            this._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: this\r\n            })\r\n        }\r\n    },\r\n    getPointsByArg: function(arg, skipPointsCreation) {\r\n        var argValue = arg.valueOf();\r\n        var points = this.pointsByArgument[argValue];\r\n        if (!points && !skipPointsCreation && this._createAllAggregatedPoints()) {\r\n            points = this.pointsByArgument[argValue]\r\n        }\r\n        return points || []\r\n    },\r\n    _createAllAggregatedPoints: function() {\r\n        if (this.useAggregation() && !this._useAllAggregatedPoints) {\r\n            this.createPoints(true);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    getPointsByKeys: function(arg) {\r\n        return this.getPointsByArg(arg)\r\n    },\r\n    notify: function(data) {\r\n        var that = this;\r\n        var action = data.action;\r\n        var seriesModes = that._seriesModes;\r\n        var target = data.target;\r\n        var targetOptions = target.getOptions();\r\n        var pointHoverMode = _normalizeEnum(targetOptions.hoverMode);\r\n        var selectionModeOfPoint = _normalizeEnum(targetOptions.selectionMode);\r\n        if (action === POINT_HOVER) {\r\n            that._hoverPointHandler(target, pointHoverMode, data.notifyLegend)\r\n        } else if (action === CLEAR_POINT_HOVER) {\r\n            that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend)\r\n        } else if (action === SERIES_SELECT) {\r\n            target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection()\r\n        } else if (action === POINT_SELECT) {\r\n            if (\"single\" === seriesModes.pointSelectionMode) {\r\n                that.getPoints().some((function(currentPoint) {\r\n                    if (currentPoint !== target && currentPoint.isSelected()) {\r\n                        that.deselectPoint(currentPoint);\r\n                        return true\r\n                    }\r\n                    return false\r\n                }))\r\n            }\r\n            that._selectPointHandler(target, selectionModeOfPoint)\r\n        } else if (action === POINT_DESELECT) {\r\n            that._deselectPointHandler(target, selectionModeOfPoint)\r\n        }\r\n    },\r\n    _selectPointHandler: function(target, mode) {\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === this && this._setPointsView(SELECTION, target)\r\n        } else if (mode === ALL_ARGUMENT_POINTS) {\r\n            this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint !== target && currentPoint.setView(SELECTION)\r\n            }))\r\n        }\r\n    },\r\n    _deselectPointHandler: function(target, mode) {\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === this && this._resetPointsView(SELECTION, target)\r\n        } else if (mode === ALL_ARGUMENT_POINTS) {\r\n            this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint !== target && currentPoint.resetView(SELECTION)\r\n            }))\r\n        }\r\n    },\r\n    _hoverPointHandler: function(target, mode, notifyLegend) {\r\n        if (target.series !== this && mode === ALL_ARGUMENT_POINTS) {\r\n            this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint.setView(HOVER)\r\n            }));\r\n            notifyLegend && this._legendCallback(target)\r\n        } else if (mode === ALL_SERIES_POINTS && target.series === this) {\r\n            this._setPointsView(HOVER, target)\r\n        }\r\n    },\r\n    _clearPointHoverHandler: function(target, mode, notifyLegend) {\r\n        if (mode === ALL_ARGUMENT_POINTS) {\r\n            target.series !== this && this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint.resetView(HOVER)\r\n            }));\r\n            notifyLegend && this._legendCallback(target)\r\n        } else if (mode === ALL_SERIES_POINTS && target.series === this) {\r\n            this._resetPointsView(HOVER, target)\r\n        }\r\n    },\r\n    _deletePoints: function() {\r\n        this._disposePoints(this._points);\r\n        this._points = this._drawnPoints = null\r\n    },\r\n    _deleteTrackers: function() {\r\n        _each(this._trackers || [], (function(_, tracker) {\r\n            tracker.remove()\r\n        }));\r\n        this._trackersGroup && this._trackersGroup.dispose();\r\n        this._trackers = this._trackersGroup = null\r\n    },\r\n    dispose: function() {\r\n        this._deletePoints();\r\n        this._group.dispose();\r\n        this._labelsGroup && this._labelsGroup.dispose();\r\n        this._errorBarGroup && this._errorBarGroup.dispose();\r\n        this._deleteTrackers();\r\n        this._group = this._extGroups = this._markersGroup = this._elementsGroup = this._bordersGroup = this._labelsGroup = this._errorBarGroup = this._graphics = this._rangeData = this._renderer = this._styles = this._options = this._pointOptions = this._drawnPoints = this.pointsByArgument = this._segments = this._prevSeries = null\r\n    },\r\n    correctPosition: _noop,\r\n    drawTrackers: _noop,\r\n    getNeighborPoint: _noop,\r\n    areErrorBarsVisible: _noop,\r\n    getMarginOptions: function() {\r\n        return this._patchMarginOptions({\r\n            percentStick: this.isFullStackedSeries()\r\n        })\r\n    },\r\n    getColor: function() {\r\n        return this.getLegendStyles().normal.fill\r\n    },\r\n    getOpacity: function() {\r\n        return this._options.opacity\r\n    },\r\n    getStackName: function() {\r\n        return this._stackName\r\n    },\r\n    getBarOverlapGroup: function() {\r\n        return this._options.barOverlapGroup\r\n    },\r\n    getPointByCoord: function(x, y) {\r\n        var point = this.getNeighborPoint(x, y);\r\n        return null !== point && void 0 !== point && point.coordsIn(x, y) ? point : null\r\n    },\r\n    getValueAxis: function() {\r\n        return this._valueAxis\r\n    },\r\n    getArgumentAxis: function() {\r\n        return this._argumentAxis\r\n    },\r\n    getMarkersGroup() {\r\n        return this._markersGroup\r\n    },\r\n    getRenderer() {\r\n        return this._renderer\r\n    },\r\n    removePointElements() {\r\n        if (this._markersGroup) {\r\n            _each(this._points, (_, p) => p.deleteMarker());\r\n            this._markersGroup.dispose();\r\n            this._markersGroup = null\r\n        }\r\n    },\r\n    removeGraphicElements() {\r\n        var that = this;\r\n        if (that._elementsGroup) {\r\n            that._elementsGroup.dispose();\r\n            that._elementsGroup = null\r\n        }\r\n        _each(that._graphics || [], (_, elem) => {\r\n            that._removeElement(elem)\r\n        });\r\n        that._graphics = null\r\n    },\r\n    removeBordersGroup() {\r\n        if (this._bordersGroup) {\r\n            this._bordersGroup.dispose();\r\n            this._bordersGroup = null\r\n        }\r\n    }\r\n};\r\nexport var mixins = seriesNS.mixins;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}