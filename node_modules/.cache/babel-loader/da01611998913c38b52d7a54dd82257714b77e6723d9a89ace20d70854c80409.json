{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/points/pie_point.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../../core/utils/extend\";\nimport symbolPoint from \"./symbol_point\";\nvar _extend = extend;\nvar _round = Math.round;\nvar _sqrt = Math.sqrt;\nvar _acos = Math.acos;\nvar DEG = 180 / Math.PI;\nvar _abs = Math.abs;\nimport { getVerticallyShiftedAngularCoords, normalizeAngle as _normalizeAngle, getCosAndSin as _getCosAndSin } from \"../../core/utils\";\nimport { isDefined as _isDefined } from \"../../../core/utils/type\";\nimport consts from \"../../components/consts\";\nvar RADIAL_LABEL_INDENT = consts.radialLabelIndent;\nexport default _extend({}, symbolPoint, {\n  _updateData: function (data, argumentChanged) {\n    symbolPoint._updateData.call(this, data);\n    if (argumentChanged || !_isDefined(this._visible)) {\n      this._visible = true;\n    }\n    this.minValue = this.initialMinValue = this.originalMinValue = _isDefined(data.minValue) ? data.minValue : 0;\n  },\n  animate: function (complete, duration, delay) {\n    this.graphic.animate({\n      x: this.centerX,\n      y: this.centerY,\n      outerRadius: this.radiusOuter,\n      innerRadius: this.radiusInner,\n      startAngle: this.toAngle,\n      endAngle: this.fromAngle\n    }, {\n      delay: delay,\n      partitionDuration: duration\n    }, complete);\n  },\n  correctPosition: function (correction) {\n    this.correctRadius(correction);\n    this.correctLabelRadius(correction.radiusOuter + RADIAL_LABEL_INDENT);\n    this.centerX = correction.centerX;\n    this.centerY = correction.centerY;\n  },\n  correctRadius: function (correction) {\n    this.radiusInner = correction.radiusInner;\n    this.radiusOuter = correction.radiusOuter;\n  },\n  correctLabelRadius: function (radiusLabels) {\n    this.radiusLabels = radiusLabels;\n  },\n  correctValue: function (correction, percent, base) {\n    this.value = (base || this.normalInitialValue) + correction;\n    this.minValue = correction;\n    this.percent = percent;\n    this._label.setDataField(\"percent\", percent);\n  },\n  _updateLabelData: function () {\n    this._label.setData(this._getLabelFormatObject());\n  },\n  _getShiftLabelCoords: function () {\n    var bBox = this._label.getBoundingRect();\n    var coord = this._getLabelCoords(this._label);\n    var visibleArea = this._getVisibleArea();\n    if (this._isLabelDrawingWithoutPoints) {\n      return this._checkLabelPosition(coord, bBox, visibleArea);\n    } else {\n      return this._getLabelExtraCoord(coord, this._checkVerticalLabelPosition(coord, bBox, visibleArea), bBox);\n    }\n  },\n  _getLabelPosition: function (options) {\n    return options.position;\n  },\n  getAnnotationCoords: function (location) {\n    return this._getElementCoords(\"edge\" !== location ? \"inside\" : \"outside\", this.radiusOuter, 0);\n  },\n  _getElementCoords: function (position, elementRadius, radialOffset) {\n    var bBox = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    var that = this;\n    var angleFunctions = _getCosAndSin(that.middleAngle);\n    var radiusInner = that.radiusInner;\n    var radiusOuter = that.radiusOuter;\n    var columnsPosition = \"columns\" === position;\n    var rad;\n    var x;\n    if (\"inside\" === position) {\n      rad = radiusInner + (radiusOuter - radiusInner) / 2 + radialOffset;\n      x = that.centerX + rad * angleFunctions.cos - bBox.width / 2;\n    } else {\n      rad = elementRadius + radialOffset;\n      if (angleFunctions.cos > .1 || columnsPosition && angleFunctions.cos >= 0) {\n        x = that.centerX + rad * angleFunctions.cos;\n      } else if (angleFunctions.cos < -.1 || columnsPosition && angleFunctions.cos < 0) {\n        x = that.centerX + rad * angleFunctions.cos - bBox.width;\n      } else {\n        x = that.centerX + rad * angleFunctions.cos - bBox.width / 2;\n      }\n    }\n    return {\n      x: x,\n      y: _round(that.centerY - rad * angleFunctions.sin - bBox.height / 2)\n    };\n  },\n  _getLabelCoords: function (label) {\n    var bBox = label.getBoundingRect();\n    var options = label.getLayoutOptions();\n    var position = this._getLabelPosition(options);\n    return this._getElementCoords(position, this.radiusLabels, options.radialOffset, bBox);\n  },\n  _correctLabelCoord: function (coord, moveLabelsFromCenter) {\n    var label = this._label;\n    var bBox = label.getBoundingRect();\n    var labelWidth = bBox.width;\n    var options = label.getLayoutOptions();\n    var visibleArea = this._getVisibleArea();\n    var rightBorderX = visibleArea.maxX - labelWidth;\n    var leftBorderX = visibleArea.minX;\n    var angleOfPoint = _normalizeAngle(this.middleAngle);\n    var centerX = this.centerX;\n    var connectorOffset = options.connectorOffset;\n    var x = coord.x;\n    if (\"columns\" === options.position) {\n      if (angleOfPoint <= 90 || angleOfPoint >= 270) {\n        x = rightBorderX;\n      } else {\n        x = leftBorderX;\n      }\n      coord.x = x;\n    } else if (\"inside\" !== options.position && moveLabelsFromCenter) {\n      if (angleOfPoint <= 90 || angleOfPoint >= 270) {\n        if (x - connectorOffset < centerX) {\n          x = centerX + connectorOffset;\n        }\n      } else if (x + labelWidth + connectorOffset > centerX) {\n        x = centerX - labelWidth - connectorOffset;\n      }\n      coord.x = x;\n    }\n    return coord;\n  },\n  drawLabel: function () {\n    this.translate();\n    this._isLabelDrawingWithoutPoints = true;\n    this._drawLabel();\n    this._isLabelDrawingWithoutPoints = false;\n  },\n  updateLabelCoord: function (moveLabelsFromCenter) {\n    var bBox = this._label.getBoundingRect();\n    var coord = this._correctLabelCoord(bBox, moveLabelsFromCenter);\n    coord = this._checkHorizontalLabelPosition(coord, bBox, this._getVisibleArea());\n    this._label.shift(_round(coord.x), _round(bBox.y));\n  },\n  _checkVerticalLabelPosition: function (coord, box, visibleArea) {\n    var x = coord.x;\n    var y = coord.y;\n    if (coord.y + box.height > visibleArea.maxY) {\n      y = visibleArea.maxY - box.height;\n    } else if (coord.y < visibleArea.minY) {\n      y = visibleArea.minY;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getLabelExtraCoord: function (coord, shiftCoord, box) {\n    return coord.y !== shiftCoord.y ? getVerticallyShiftedAngularCoords({\n      x: coord.x,\n      y: coord.y,\n      width: box.width,\n      height: box.height\n    }, shiftCoord.y - coord.y, {\n      x: this.centerX,\n      y: this.centerY\n    }) : coord;\n  },\n  _checkHorizontalLabelPosition: function (coord, box, visibleArea) {\n    var x = coord.x;\n    var y = coord.y;\n    if (coord.x + box.width > visibleArea.maxX) {\n      x = visibleArea.maxX - box.width;\n    } else if (coord.x < visibleArea.minX) {\n      x = visibleArea.minX;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  },\n  applyWordWrap: function (moveLabelsFromCenter) {\n    var label = this._label;\n    var box = label.getBoundingRect();\n    var visibleArea = this._getVisibleArea();\n    var position = label.getLayoutOptions().position;\n    var width = box.width;\n    var rowCountChanged = false;\n    if (\"columns\" === position && this.series.index > 0) {\n      width = visibleArea.maxX - this.centerX - this.radiusLabels;\n    } else if (\"inside\" === position) {\n      if (width > visibleArea.maxX - visibleArea.minX) {\n        width = visibleArea.maxX - visibleArea.minX;\n      }\n    } else if (moveLabelsFromCenter && box.x < this.centerX && box.width + box.x > this.centerX) {\n      width = Math.floor((visibleArea.maxX - visibleArea.minX) / 2);\n    } else if (box.x + width > visibleArea.maxX) {\n      width = visibleArea.maxX - box.x;\n    } else if (box.x < visibleArea.minX) {\n      width = box.x + width - visibleArea.minX;\n    }\n    if (width < box.width) {\n      rowCountChanged = label.fit(width);\n    }\n    return rowCountChanged;\n  },\n  setLabelTrackerData: function () {\n    this._label.setTrackerData(this);\n  },\n  _checkLabelPosition: function (coord, bBox, visibleArea) {\n    coord = this._checkHorizontalLabelPosition(coord, bBox, visibleArea);\n    return this._checkVerticalLabelPosition(coord, bBox, visibleArea);\n  },\n  _getLabelConnector: function () {\n    var rad = this.radiusOuter;\n    var seriesStyle = this._options.styles.normal;\n    var strokeWidthBy2 = seriesStyle[\"stroke-width\"] / 2;\n    var borderWidth = this.series.getOptions().containerBackgroundColor === seriesStyle.stroke ? _round(strokeWidthBy2) : _round(-strokeWidthBy2);\n    var angleFunctions = _getCosAndSin(_round(this.middleAngle));\n    return {\n      x: _round(this.centerX + (rad - borderWidth) * angleFunctions.cos),\n      y: _round(this.centerY - (rad - borderWidth) * angleFunctions.sin),\n      angle: this.middleAngle\n    };\n  },\n  _drawMarker: function (renderer, group, animationEnabled, firstDrawing) {\n    var radiusOuter = this.radiusOuter;\n    var radiusInner = this.radiusInner;\n    var fromAngle = this.fromAngle;\n    var toAngle = this.toAngle;\n    if (animationEnabled) {\n      radiusInner = radiusOuter = 0;\n      if (!firstDrawing) {\n        fromAngle = toAngle = this.shiftedAngle;\n      }\n    }\n    this.graphic = renderer.arc(this.centerX, this.centerY, radiusInner, radiusOuter, toAngle, fromAngle).attr({\n      \"stroke-linejoin\": \"round\"\n    }).smartAttr(this._getStyle()).data({\n      \"chart-data-point\": this\n    }).sharp().append(group);\n  },\n  getTooltipParams: function () {\n    var angleFunctions = _getCosAndSin(this.middleAngle);\n    var radiusInner = this.radiusInner;\n    var radiusOuter = this.radiusOuter;\n    return {\n      x: this.centerX + (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.cos,\n      y: this.centerY - (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.sin,\n      offset: 0\n    };\n  },\n  _translate: function () {\n    var angle = this.shiftedAngle || 0;\n    var value = this.value;\n    var minValue = this.minValue;\n    var translator = this._getValTranslator();\n    this.fromAngle = translator.translate(minValue) + angle;\n    this.toAngle = translator.translate(value) + angle;\n    this.middleAngle = translator.translate((value - minValue) / 2 + minValue) + angle;\n    if (!this.isVisible()) {\n      this.middleAngle = this.toAngle = this.fromAngle = this.fromAngle || angle;\n    }\n  },\n  getMarkerVisibility: function () {\n    return true;\n  },\n  _updateMarker: function (animationEnabled, style, _, callback) {\n    if (!animationEnabled) {\n      style = _extend({\n        x: this.centerX,\n        y: this.centerY,\n        outerRadius: this.radiusOuter,\n        innerRadius: this.radiusInner,\n        startAngle: this.toAngle,\n        endAngle: this.fromAngle\n      }, style);\n    }\n    this.graphic.smartAttr(style).sharp();\n    callback && callback();\n  },\n  getLegendStyles: function () {\n    return this._styles.legendStyles;\n  },\n  isInVisibleArea: function () {\n    return true;\n  },\n  hide: function () {\n    if (this._visible) {\n      this._visible = false;\n      this.hideTooltip();\n      this._options.visibilityChanged();\n    }\n  },\n  show: function () {\n    if (!this._visible) {\n      this._visible = true;\n      this._options.visibilityChanged();\n    }\n  },\n  setInvisibility: function () {\n    this._label.draw(false);\n  },\n  isVisible: function () {\n    return this._visible;\n  },\n  _getFormatObject: function (tooltip) {\n    var formatObject = symbolPoint._getFormatObject.call(this, tooltip);\n    var percent = this.percent;\n    formatObject.percent = percent;\n    formatObject.percentText = tooltip.formatValue(percent, \"percent\");\n    return formatObject;\n  },\n  getColor: function () {\n    return this._styles.normal.fill;\n  },\n  coordsIn: function (x, y) {\n    var lx = x - this.centerX;\n    var ly = y - this.centerY;\n    var r = _sqrt(lx * lx + ly * ly);\n    var fromAngle = this.fromAngle % 360;\n    var toAngle = this.toAngle % 360;\n    var angle;\n    if (r < this.radiusInner || r > this.radiusOuter || 0 === r) {\n      return false;\n    }\n    angle = _acos(lx / r) * DEG * (ly > 0 ? -1 : 1);\n    if (angle < 0) {\n      angle += 360;\n    }\n    if (fromAngle === toAngle && _abs(this.toAngle - this.fromAngle) > 1e-4) {\n      return true;\n    } else {\n      return fromAngle >= toAngle ? angle <= fromAngle && angle >= toAngle : !(angle >= fromAngle && angle <= toAngle);\n    }\n  }\n});","map":{"version":3,"names":["extend","symbolPoint","_extend","_round","Math","round","_sqrt","sqrt","_acos","acos","DEG","PI","_abs","abs","getVerticallyShiftedAngularCoords","normalizeAngle","_normalizeAngle","getCosAndSin","_getCosAndSin","isDefined","_isDefined","consts","RADIAL_LABEL_INDENT","radialLabelIndent","_updateData","data","argumentChanged","call","_visible","minValue","initialMinValue","originalMinValue","animate","complete","duration","delay","graphic","x","centerX","y","centerY","outerRadius","radiusOuter","innerRadius","radiusInner","startAngle","toAngle","endAngle","fromAngle","partitionDuration","correctPosition","correction","correctRadius","correctLabelRadius","radiusLabels","correctValue","percent","base","value","normalInitialValue","_label","setDataField","_updateLabelData","setData","_getLabelFormatObject","_getShiftLabelCoords","bBox","getBoundingRect","coord","_getLabelCoords","visibleArea","_getVisibleArea","_isLabelDrawingWithoutPoints","_checkLabelPosition","_getLabelExtraCoord","_checkVerticalLabelPosition","_getLabelPosition","options","position","getAnnotationCoords","location","_getElementCoords","elementRadius","radialOffset","arguments","length","width","height","that","angleFunctions","middleAngle","columnsPosition","rad","cos","sin","label","getLayoutOptions","_correctLabelCoord","moveLabelsFromCenter","labelWidth","rightBorderX","maxX","leftBorderX","minX","angleOfPoint","connectorOffset","drawLabel","translate","_drawLabel","updateLabelCoord","_checkHorizontalLabelPosition","shift","box","maxY","minY","shiftCoord","applyWordWrap","rowCountChanged","series","index","floor","fit","setLabelTrackerData","setTrackerData","_getLabelConnector","seriesStyle","_options","styles","normal","strokeWidthBy2","borderWidth","getOptions","containerBackgroundColor","stroke","angle","_drawMarker","renderer","group","animationEnabled","firstDrawing","shiftedAngle","arc","attr","smartAttr","_getStyle","sharp","append","getTooltipParams","offset","_translate","translator","_getValTranslator","isVisible","getMarkerVisibility","_updateMarker","style","_","callback","getLegendStyles","_styles","legendStyles","isInVisibleArea","hide","hideTooltip","visibilityChanged","show","setInvisibility","draw","_getFormatObject","tooltip","formatObject","percentText","formatValue","getColor","fill","coordsIn","lx","ly","r"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/series/points/pie_point.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/points/pie_point.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport symbolPoint from \"./symbol_point\";\r\nvar _extend = extend;\r\nvar _round = Math.round;\r\nvar _sqrt = Math.sqrt;\r\nvar _acos = Math.acos;\r\nvar DEG = 180 / Math.PI;\r\nvar _abs = Math.abs;\r\nimport {\r\n    getVerticallyShiftedAngularCoords,\r\n    normalizeAngle as _normalizeAngle,\r\n    getCosAndSin as _getCosAndSin\r\n} from \"../../core/utils\";\r\nimport {\r\n    isDefined as _isDefined\r\n} from \"../../../core/utils/type\";\r\nimport consts from \"../../components/consts\";\r\nvar RADIAL_LABEL_INDENT = consts.radialLabelIndent;\r\nexport default _extend({}, symbolPoint, {\r\n    _updateData: function(data, argumentChanged) {\r\n        symbolPoint._updateData.call(this, data);\r\n        if (argumentChanged || !_isDefined(this._visible)) {\r\n            this._visible = true\r\n        }\r\n        this.minValue = this.initialMinValue = this.originalMinValue = _isDefined(data.minValue) ? data.minValue : 0\r\n    },\r\n    animate: function(complete, duration, delay) {\r\n        this.graphic.animate({\r\n            x: this.centerX,\r\n            y: this.centerY,\r\n            outerRadius: this.radiusOuter,\r\n            innerRadius: this.radiusInner,\r\n            startAngle: this.toAngle,\r\n            endAngle: this.fromAngle\r\n        }, {\r\n            delay: delay,\r\n            partitionDuration: duration\r\n        }, complete)\r\n    },\r\n    correctPosition: function(correction) {\r\n        this.correctRadius(correction);\r\n        this.correctLabelRadius(correction.radiusOuter + RADIAL_LABEL_INDENT);\r\n        this.centerX = correction.centerX;\r\n        this.centerY = correction.centerY\r\n    },\r\n    correctRadius: function(correction) {\r\n        this.radiusInner = correction.radiusInner;\r\n        this.radiusOuter = correction.radiusOuter\r\n    },\r\n    correctLabelRadius: function(radiusLabels) {\r\n        this.radiusLabels = radiusLabels\r\n    },\r\n    correctValue: function(correction, percent, base) {\r\n        this.value = (base || this.normalInitialValue) + correction;\r\n        this.minValue = correction;\r\n        this.percent = percent;\r\n        this._label.setDataField(\"percent\", percent)\r\n    },\r\n    _updateLabelData: function() {\r\n        this._label.setData(this._getLabelFormatObject())\r\n    },\r\n    _getShiftLabelCoords: function() {\r\n        var bBox = this._label.getBoundingRect();\r\n        var coord = this._getLabelCoords(this._label);\r\n        var visibleArea = this._getVisibleArea();\r\n        if (this._isLabelDrawingWithoutPoints) {\r\n            return this._checkLabelPosition(coord, bBox, visibleArea)\r\n        } else {\r\n            return this._getLabelExtraCoord(coord, this._checkVerticalLabelPosition(coord, bBox, visibleArea), bBox)\r\n        }\r\n    },\r\n    _getLabelPosition: function(options) {\r\n        return options.position\r\n    },\r\n    getAnnotationCoords: function(location) {\r\n        return this._getElementCoords(\"edge\" !== location ? \"inside\" : \"outside\", this.radiusOuter, 0)\r\n    },\r\n    _getElementCoords: function(position, elementRadius, radialOffset) {\r\n        var bBox = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        };\r\n        var that = this;\r\n        var angleFunctions = _getCosAndSin(that.middleAngle);\r\n        var radiusInner = that.radiusInner;\r\n        var radiusOuter = that.radiusOuter;\r\n        var columnsPosition = \"columns\" === position;\r\n        var rad;\r\n        var x;\r\n        if (\"inside\" === position) {\r\n            rad = radiusInner + (radiusOuter - radiusInner) / 2 + radialOffset;\r\n            x = that.centerX + rad * angleFunctions.cos - bBox.width / 2\r\n        } else {\r\n            rad = elementRadius + radialOffset;\r\n            if (angleFunctions.cos > .1 || columnsPosition && angleFunctions.cos >= 0) {\r\n                x = that.centerX + rad * angleFunctions.cos\r\n            } else if (angleFunctions.cos < -.1 || columnsPosition && angleFunctions.cos < 0) {\r\n                x = that.centerX + rad * angleFunctions.cos - bBox.width\r\n            } else {\r\n                x = that.centerX + rad * angleFunctions.cos - bBox.width / 2\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: _round(that.centerY - rad * angleFunctions.sin - bBox.height / 2)\r\n        }\r\n    },\r\n    _getLabelCoords: function(label) {\r\n        var bBox = label.getBoundingRect();\r\n        var options = label.getLayoutOptions();\r\n        var position = this._getLabelPosition(options);\r\n        return this._getElementCoords(position, this.radiusLabels, options.radialOffset, bBox)\r\n    },\r\n    _correctLabelCoord: function(coord, moveLabelsFromCenter) {\r\n        var label = this._label;\r\n        var bBox = label.getBoundingRect();\r\n        var labelWidth = bBox.width;\r\n        var options = label.getLayoutOptions();\r\n        var visibleArea = this._getVisibleArea();\r\n        var rightBorderX = visibleArea.maxX - labelWidth;\r\n        var leftBorderX = visibleArea.minX;\r\n        var angleOfPoint = _normalizeAngle(this.middleAngle);\r\n        var centerX = this.centerX;\r\n        var connectorOffset = options.connectorOffset;\r\n        var x = coord.x;\r\n        if (\"columns\" === options.position) {\r\n            if (angleOfPoint <= 90 || angleOfPoint >= 270) {\r\n                x = rightBorderX\r\n            } else {\r\n                x = leftBorderX\r\n            }\r\n            coord.x = x\r\n        } else if (\"inside\" !== options.position && moveLabelsFromCenter) {\r\n            if (angleOfPoint <= 90 || angleOfPoint >= 270) {\r\n                if (x - connectorOffset < centerX) {\r\n                    x = centerX + connectorOffset\r\n                }\r\n            } else if (x + labelWidth + connectorOffset > centerX) {\r\n                x = centerX - labelWidth - connectorOffset\r\n            }\r\n            coord.x = x\r\n        }\r\n        return coord\r\n    },\r\n    drawLabel: function() {\r\n        this.translate();\r\n        this._isLabelDrawingWithoutPoints = true;\r\n        this._drawLabel();\r\n        this._isLabelDrawingWithoutPoints = false\r\n    },\r\n    updateLabelCoord: function(moveLabelsFromCenter) {\r\n        var bBox = this._label.getBoundingRect();\r\n        var coord = this._correctLabelCoord(bBox, moveLabelsFromCenter);\r\n        coord = this._checkHorizontalLabelPosition(coord, bBox, this._getVisibleArea());\r\n        this._label.shift(_round(coord.x), _round(bBox.y))\r\n    },\r\n    _checkVerticalLabelPosition: function(coord, box, visibleArea) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (coord.y + box.height > visibleArea.maxY) {\r\n            y = visibleArea.maxY - box.height\r\n        } else if (coord.y < visibleArea.minY) {\r\n            y = visibleArea.minY\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getLabelExtraCoord: function(coord, shiftCoord, box) {\r\n        return coord.y !== shiftCoord.y ? getVerticallyShiftedAngularCoords({\r\n            x: coord.x,\r\n            y: coord.y,\r\n            width: box.width,\r\n            height: box.height\r\n        }, shiftCoord.y - coord.y, {\r\n            x: this.centerX,\r\n            y: this.centerY\r\n        }) : coord\r\n    },\r\n    _checkHorizontalLabelPosition: function(coord, box, visibleArea) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (coord.x + box.width > visibleArea.maxX) {\r\n            x = visibleArea.maxX - box.width\r\n        } else if (coord.x < visibleArea.minX) {\r\n            x = visibleArea.minX\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    applyWordWrap: function(moveLabelsFromCenter) {\r\n        var label = this._label;\r\n        var box = label.getBoundingRect();\r\n        var visibleArea = this._getVisibleArea();\r\n        var position = label.getLayoutOptions().position;\r\n        var width = box.width;\r\n        var rowCountChanged = false;\r\n        if (\"columns\" === position && this.series.index > 0) {\r\n            width = visibleArea.maxX - this.centerX - this.radiusLabels\r\n        } else if (\"inside\" === position) {\r\n            if (width > visibleArea.maxX - visibleArea.minX) {\r\n                width = visibleArea.maxX - visibleArea.minX\r\n            }\r\n        } else if (moveLabelsFromCenter && box.x < this.centerX && box.width + box.x > this.centerX) {\r\n            width = Math.floor((visibleArea.maxX - visibleArea.minX) / 2)\r\n        } else if (box.x + width > visibleArea.maxX) {\r\n            width = visibleArea.maxX - box.x\r\n        } else if (box.x < visibleArea.minX) {\r\n            width = box.x + width - visibleArea.minX\r\n        }\r\n        if (width < box.width) {\r\n            rowCountChanged = label.fit(width)\r\n        }\r\n        return rowCountChanged\r\n    },\r\n    setLabelTrackerData: function() {\r\n        this._label.setTrackerData(this)\r\n    },\r\n    _checkLabelPosition: function(coord, bBox, visibleArea) {\r\n        coord = this._checkHorizontalLabelPosition(coord, bBox, visibleArea);\r\n        return this._checkVerticalLabelPosition(coord, bBox, visibleArea)\r\n    },\r\n    _getLabelConnector: function() {\r\n        var rad = this.radiusOuter;\r\n        var seriesStyle = this._options.styles.normal;\r\n        var strokeWidthBy2 = seriesStyle[\"stroke-width\"] / 2;\r\n        var borderWidth = this.series.getOptions().containerBackgroundColor === seriesStyle.stroke ? _round(strokeWidthBy2) : _round(-strokeWidthBy2);\r\n        var angleFunctions = _getCosAndSin(_round(this.middleAngle));\r\n        return {\r\n            x: _round(this.centerX + (rad - borderWidth) * angleFunctions.cos),\r\n            y: _round(this.centerY - (rad - borderWidth) * angleFunctions.sin),\r\n            angle: this.middleAngle\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled, firstDrawing) {\r\n        var radiusOuter = this.radiusOuter;\r\n        var radiusInner = this.radiusInner;\r\n        var fromAngle = this.fromAngle;\r\n        var toAngle = this.toAngle;\r\n        if (animationEnabled) {\r\n            radiusInner = radiusOuter = 0;\r\n            if (!firstDrawing) {\r\n                fromAngle = toAngle = this.shiftedAngle\r\n            }\r\n        }\r\n        this.graphic = renderer.arc(this.centerX, this.centerY, radiusInner, radiusOuter, toAngle, fromAngle).attr({\r\n            \"stroke-linejoin\": \"round\"\r\n        }).smartAttr(this._getStyle()).data({\r\n            \"chart-data-point\": this\r\n        }).sharp().append(group)\r\n    },\r\n    getTooltipParams: function() {\r\n        var angleFunctions = _getCosAndSin(this.middleAngle);\r\n        var radiusInner = this.radiusInner;\r\n        var radiusOuter = this.radiusOuter;\r\n        return {\r\n            x: this.centerX + (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.cos,\r\n            y: this.centerY - (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.sin,\r\n            offset: 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var angle = this.shiftedAngle || 0;\r\n        var value = this.value;\r\n        var minValue = this.minValue;\r\n        var translator = this._getValTranslator();\r\n        this.fromAngle = translator.translate(minValue) + angle;\r\n        this.toAngle = translator.translate(value) + angle;\r\n        this.middleAngle = translator.translate((value - minValue) / 2 + minValue) + angle;\r\n        if (!this.isVisible()) {\r\n            this.middleAngle = this.toAngle = this.fromAngle = this.fromAngle || angle\r\n        }\r\n    },\r\n    getMarkerVisibility: function() {\r\n        return true\r\n    },\r\n    _updateMarker: function(animationEnabled, style, _, callback) {\r\n        if (!animationEnabled) {\r\n            style = _extend({\r\n                x: this.centerX,\r\n                y: this.centerY,\r\n                outerRadius: this.radiusOuter,\r\n                innerRadius: this.radiusInner,\r\n                startAngle: this.toAngle,\r\n                endAngle: this.fromAngle\r\n            }, style)\r\n        }\r\n        this.graphic.smartAttr(style).sharp();\r\n        callback && callback()\r\n    },\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    isInVisibleArea: function() {\r\n        return true\r\n    },\r\n    hide: function() {\r\n        if (this._visible) {\r\n            this._visible = false;\r\n            this.hideTooltip();\r\n            this._options.visibilityChanged()\r\n        }\r\n    },\r\n    show: function() {\r\n        if (!this._visible) {\r\n            this._visible = true;\r\n            this._options.visibilityChanged()\r\n        }\r\n    },\r\n    setInvisibility: function() {\r\n        this._label.draw(false)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    _getFormatObject: function(tooltip) {\r\n        var formatObject = symbolPoint._getFormatObject.call(this, tooltip);\r\n        var percent = this.percent;\r\n        formatObject.percent = percent;\r\n        formatObject.percentText = tooltip.formatValue(percent, \"percent\");\r\n        return formatObject\r\n    },\r\n    getColor: function() {\r\n        return this._styles.normal.fill\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var lx = x - this.centerX;\r\n        var ly = y - this.centerY;\r\n        var r = _sqrt(lx * lx + ly * ly);\r\n        var fromAngle = this.fromAngle % 360;\r\n        var toAngle = this.toAngle % 360;\r\n        var angle;\r\n        if (r < this.radiusInner || r > this.radiusOuter || 0 === r) {\r\n            return false\r\n        }\r\n        angle = _acos(lx / r) * DEG * (ly > 0 ? -1 : 1);\r\n        if (angle < 0) {\r\n            angle += 360\r\n        }\r\n        if (fromAngle === toAngle && _abs(this.toAngle - this.fromAngle) > 1e-4) {\r\n            return true\r\n        } else {\r\n            return fromAngle >= toAngle ? angle <= fromAngle && angle >= toAngle : !(angle >= fromAngle && angle <= toAngle)\r\n        }\r\n    }\r\n});\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MAAM,QACH,4BAA4B;AACnC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,IAAIC,OAAO,GAAGF,MAAM;AACpB,IAAIG,MAAM,GAAGC,IAAI,CAACC,KAAK;AACvB,IAAIC,KAAK,GAAGF,IAAI,CAACG,IAAI;AACrB,IAAIC,KAAK,GAAGJ,IAAI,CAACK,IAAI;AACrB,IAAIC,GAAG,GAAG,GAAG,GAAGN,IAAI,CAACO,EAAE;AACvB,IAAIC,IAAI,GAAGR,IAAI,CAACS,GAAG;AACnB,SACIC,iCAAiC,EACjCC,cAAc,IAAIC,eAAe,EACjCC,YAAY,IAAIC,aAAa,QAC1B,kBAAkB;AACzB,SACIC,SAAS,IAAIC,UAAU,QACpB,0BAA0B;AACjC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,IAAIC,mBAAmB,GAAGD,MAAM,CAACE,iBAAiB;AAClD,eAAerB,OAAO,CAAC,CAAC,CAAC,EAAED,WAAW,EAAE;EACpCuB,WAAW,EAAE,UAASC,IAAI,EAAEC,eAAe,EAAE;IACzCzB,WAAW,CAACuB,WAAW,CAACG,IAAI,CAAC,IAAI,EAAEF,IAAI,CAAC;IACxC,IAAIC,eAAe,IAAI,CAACN,UAAU,CAAC,IAAI,CAACQ,QAAQ,CAAC,EAAE;MAC/C,IAAI,CAACA,QAAQ,GAAG,IAAI;IACxB;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,gBAAgB,GAAGX,UAAU,CAACK,IAAI,CAACI,QAAQ,CAAC,GAAGJ,IAAI,CAACI,QAAQ,GAAG,CAAC;EAChH,CAAC;EACDG,OAAO,EAAE,UAASC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IACzC,IAAI,CAACC,OAAO,CAACJ,OAAO,CAAC;MACjBK,CAAC,EAAE,IAAI,CAACC,OAAO;MACfC,CAAC,EAAE,IAAI,CAACC,OAAO;MACfC,WAAW,EAAE,IAAI,CAACC,WAAW;MAC7BC,WAAW,EAAE,IAAI,CAACC,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACC,OAAO;MACxBC,QAAQ,EAAE,IAAI,CAACC;IACnB,CAAC,EAAE;MACCb,KAAK,EAAEA,KAAK;MACZc,iBAAiB,EAAEf;IACvB,CAAC,EAAED,QAAQ,CAAC;EAChB,CAAC;EACDiB,eAAe,EAAE,UAASC,UAAU,EAAE;IAClC,IAAI,CAACC,aAAa,CAACD,UAAU,CAAC;IAC9B,IAAI,CAACE,kBAAkB,CAACF,UAAU,CAACT,WAAW,GAAGpB,mBAAmB,CAAC;IACrE,IAAI,CAACgB,OAAO,GAAGa,UAAU,CAACb,OAAO;IACjC,IAAI,CAACE,OAAO,GAAGW,UAAU,CAACX,OAAO;EACrC,CAAC;EACDY,aAAa,EAAE,UAASD,UAAU,EAAE;IAChC,IAAI,CAACP,WAAW,GAAGO,UAAU,CAACP,WAAW;IACzC,IAAI,CAACF,WAAW,GAAGS,UAAU,CAACT,WAAW;EAC7C,CAAC;EACDW,kBAAkB,EAAE,UAASC,YAAY,EAAE;IACvC,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC,CAAC;EACDC,YAAY,EAAE,UAASJ,UAAU,EAAEK,OAAO,EAAEC,IAAI,EAAE;IAC9C,IAAI,CAACC,KAAK,GAAG,CAACD,IAAI,IAAI,IAAI,CAACE,kBAAkB,IAAIR,UAAU;IAC3D,IAAI,CAACtB,QAAQ,GAAGsB,UAAU;IAC1B,IAAI,CAACK,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACI,MAAM,CAACC,YAAY,CAAC,SAAS,EAAEL,OAAO,CAAC;EAChD,CAAC;EACDM,gBAAgB,EAAE,YAAW;IACzB,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC,IAAI,CAACC,qBAAqB,EAAE,CAAC;EACrD,CAAC;EACDC,oBAAoB,EAAE,YAAW;IAC7B,IAAIC,IAAI,GAAG,IAAI,CAACN,MAAM,CAACO,eAAe,EAAE;IACxC,IAAIC,KAAK,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACT,MAAM,CAAC;IAC7C,IAAIU,WAAW,GAAG,IAAI,CAACC,eAAe,EAAE;IACxC,IAAI,IAAI,CAACC,4BAA4B,EAAE;MACnC,OAAO,IAAI,CAACC,mBAAmB,CAACL,KAAK,EAAEF,IAAI,EAAEI,WAAW,CAAC;IAC7D,CAAC,MAAM;MACH,OAAO,IAAI,CAACI,mBAAmB,CAACN,KAAK,EAAE,IAAI,CAACO,2BAA2B,CAACP,KAAK,EAAEF,IAAI,EAAEI,WAAW,CAAC,EAAEJ,IAAI,CAAC;IAC5G;EACJ,CAAC;EACDU,iBAAiB,EAAE,UAASC,OAAO,EAAE;IACjC,OAAOA,OAAO,CAACC,QAAQ;EAC3B,CAAC;EACDC,mBAAmB,EAAE,UAASC,QAAQ,EAAE;IACpC,OAAO,IAAI,CAACC,iBAAiB,CAAC,MAAM,KAAKD,QAAQ,GAAG,QAAQ,GAAG,SAAS,EAAE,IAAI,CAACtC,WAAW,EAAE,CAAC,CAAC;EAClG,CAAC;EACDuC,iBAAiB,EAAE,UAASH,QAAQ,EAAEI,aAAa,EAAEC,YAAY,EAAE;IAC/D,IAAIjB,IAAI,GAAGkB,SAAS,CAACC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKD,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG;MACxE/C,CAAC,EAAE,CAAC;MACJE,CAAC,EAAE,CAAC;MACJ+C,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACZ,CAAC;IACD,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIC,cAAc,GAAGvE,aAAa,CAACsE,IAAI,CAACE,WAAW,CAAC;IACpD,IAAI9C,WAAW,GAAG4C,IAAI,CAAC5C,WAAW;IAClC,IAAIF,WAAW,GAAG8C,IAAI,CAAC9C,WAAW;IAClC,IAAIiD,eAAe,GAAG,SAAS,KAAKb,QAAQ;IAC5C,IAAIc,GAAG;IACP,IAAIvD,CAAC;IACL,IAAI,QAAQ,KAAKyC,QAAQ,EAAE;MACvBc,GAAG,GAAGhD,WAAW,GAAG,CAACF,WAAW,GAAGE,WAAW,IAAI,CAAC,GAAGuC,YAAY;MAClE9C,CAAC,GAAGmD,IAAI,CAAClD,OAAO,GAAGsD,GAAG,GAAGH,cAAc,CAACI,GAAG,GAAG3B,IAAI,CAACoB,KAAK,GAAG,CAAC;IAChE,CAAC,MAAM;MACHM,GAAG,GAAGV,aAAa,GAAGC,YAAY;MAClC,IAAIM,cAAc,CAACI,GAAG,GAAG,EAAE,IAAIF,eAAe,IAAIF,cAAc,CAACI,GAAG,IAAI,CAAC,EAAE;QACvExD,CAAC,GAAGmD,IAAI,CAAClD,OAAO,GAAGsD,GAAG,GAAGH,cAAc,CAACI,GAAG;MAC/C,CAAC,MAAM,IAAIJ,cAAc,CAACI,GAAG,GAAG,CAAC,EAAE,IAAIF,eAAe,IAAIF,cAAc,CAACI,GAAG,GAAG,CAAC,EAAE;QAC9ExD,CAAC,GAAGmD,IAAI,CAAClD,OAAO,GAAGsD,GAAG,GAAGH,cAAc,CAACI,GAAG,GAAG3B,IAAI,CAACoB,KAAK;MAC5D,CAAC,MAAM;QACHjD,CAAC,GAAGmD,IAAI,CAAClD,OAAO,GAAGsD,GAAG,GAAGH,cAAc,CAACI,GAAG,GAAG3B,IAAI,CAACoB,KAAK,GAAG,CAAC;MAChE;IACJ;IACA,OAAO;MACHjD,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEpC,MAAM,CAACqF,IAAI,CAAChD,OAAO,GAAGoD,GAAG,GAAGH,cAAc,CAACK,GAAG,GAAG5B,IAAI,CAACqB,MAAM,GAAG,CAAC;IACvE,CAAC;EACL,CAAC;EACDlB,eAAe,EAAE,UAAS0B,KAAK,EAAE;IAC7B,IAAI7B,IAAI,GAAG6B,KAAK,CAAC5B,eAAe,EAAE;IAClC,IAAIU,OAAO,GAAGkB,KAAK,CAACC,gBAAgB,EAAE;IACtC,IAAIlB,QAAQ,GAAG,IAAI,CAACF,iBAAiB,CAACC,OAAO,CAAC;IAC9C,OAAO,IAAI,CAACI,iBAAiB,CAACH,QAAQ,EAAE,IAAI,CAACxB,YAAY,EAAEuB,OAAO,CAACM,YAAY,EAAEjB,IAAI,CAAC;EAC1F,CAAC;EACD+B,kBAAkB,EAAE,UAAS7B,KAAK,EAAE8B,oBAAoB,EAAE;IACtD,IAAIH,KAAK,GAAG,IAAI,CAACnC,MAAM;IACvB,IAAIM,IAAI,GAAG6B,KAAK,CAAC5B,eAAe,EAAE;IAClC,IAAIgC,UAAU,GAAGjC,IAAI,CAACoB,KAAK;IAC3B,IAAIT,OAAO,GAAGkB,KAAK,CAACC,gBAAgB,EAAE;IACtC,IAAI1B,WAAW,GAAG,IAAI,CAACC,eAAe,EAAE;IACxC,IAAI6B,YAAY,GAAG9B,WAAW,CAAC+B,IAAI,GAAGF,UAAU;IAChD,IAAIG,WAAW,GAAGhC,WAAW,CAACiC,IAAI;IAClC,IAAIC,YAAY,GAAGxF,eAAe,CAAC,IAAI,CAAC0E,WAAW,CAAC;IACpD,IAAIpD,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1B,IAAImE,eAAe,GAAG5B,OAAO,CAAC4B,eAAe;IAC7C,IAAIpE,CAAC,GAAG+B,KAAK,CAAC/B,CAAC;IACf,IAAI,SAAS,KAAKwC,OAAO,CAACC,QAAQ,EAAE;MAChC,IAAI0B,YAAY,IAAI,EAAE,IAAIA,YAAY,IAAI,GAAG,EAAE;QAC3CnE,CAAC,GAAG+D,YAAY;MACpB,CAAC,MAAM;QACH/D,CAAC,GAAGiE,WAAW;MACnB;MACAlC,KAAK,CAAC/B,CAAC,GAAGA,CAAC;IACf,CAAC,MAAM,IAAI,QAAQ,KAAKwC,OAAO,CAACC,QAAQ,IAAIoB,oBAAoB,EAAE;MAC9D,IAAIM,YAAY,IAAI,EAAE,IAAIA,YAAY,IAAI,GAAG,EAAE;QAC3C,IAAInE,CAAC,GAAGoE,eAAe,GAAGnE,OAAO,EAAE;UAC/BD,CAAC,GAAGC,OAAO,GAAGmE,eAAe;QACjC;MACJ,CAAC,MAAM,IAAIpE,CAAC,GAAG8D,UAAU,GAAGM,eAAe,GAAGnE,OAAO,EAAE;QACnDD,CAAC,GAAGC,OAAO,GAAG6D,UAAU,GAAGM,eAAe;MAC9C;MACArC,KAAK,CAAC/B,CAAC,GAAGA,CAAC;IACf;IACA,OAAO+B,KAAK;EAChB,CAAC;EACDsC,SAAS,EAAE,YAAW;IAClB,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACnC,4BAA4B,GAAG,IAAI;IACxC,IAAI,CAACoC,UAAU,EAAE;IACjB,IAAI,CAACpC,4BAA4B,GAAG,KAAK;EAC7C,CAAC;EACDqC,gBAAgB,EAAE,UAASX,oBAAoB,EAAE;IAC7C,IAAIhC,IAAI,GAAG,IAAI,CAACN,MAAM,CAACO,eAAe,EAAE;IACxC,IAAIC,KAAK,GAAG,IAAI,CAAC6B,kBAAkB,CAAC/B,IAAI,EAAEgC,oBAAoB,CAAC;IAC/D9B,KAAK,GAAG,IAAI,CAAC0C,6BAA6B,CAAC1C,KAAK,EAAEF,IAAI,EAAE,IAAI,CAACK,eAAe,EAAE,CAAC;IAC/E,IAAI,CAACX,MAAM,CAACmD,KAAK,CAAC5G,MAAM,CAACiE,KAAK,CAAC/B,CAAC,CAAC,EAAElC,MAAM,CAAC+D,IAAI,CAAC3B,CAAC,CAAC,CAAC;EACtD,CAAC;EACDoC,2BAA2B,EAAE,UAASP,KAAK,EAAE4C,GAAG,EAAE1C,WAAW,EAAE;IAC3D,IAAIjC,CAAC,GAAG+B,KAAK,CAAC/B,CAAC;IACf,IAAIE,CAAC,GAAG6B,KAAK,CAAC7B,CAAC;IACf,IAAI6B,KAAK,CAAC7B,CAAC,GAAGyE,GAAG,CAACzB,MAAM,GAAGjB,WAAW,CAAC2C,IAAI,EAAE;MACzC1E,CAAC,GAAG+B,WAAW,CAAC2C,IAAI,GAAGD,GAAG,CAACzB,MAAM;IACrC,CAAC,MAAM,IAAInB,KAAK,CAAC7B,CAAC,GAAG+B,WAAW,CAAC4C,IAAI,EAAE;MACnC3E,CAAC,GAAG+B,WAAW,CAAC4C,IAAI;IACxB;IACA,OAAO;MACH7E,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEA;IACP,CAAC;EACL,CAAC;EACDmC,mBAAmB,EAAE,UAASN,KAAK,EAAE+C,UAAU,EAAEH,GAAG,EAAE;IAClD,OAAO5C,KAAK,CAAC7B,CAAC,KAAK4E,UAAU,CAAC5E,CAAC,GAAGzB,iCAAiC,CAAC;MAChEuB,CAAC,EAAE+B,KAAK,CAAC/B,CAAC;MACVE,CAAC,EAAE6B,KAAK,CAAC7B,CAAC;MACV+C,KAAK,EAAE0B,GAAG,CAAC1B,KAAK;MAChBC,MAAM,EAAEyB,GAAG,CAACzB;IAChB,CAAC,EAAE4B,UAAU,CAAC5E,CAAC,GAAG6B,KAAK,CAAC7B,CAAC,EAAE;MACvBF,CAAC,EAAE,IAAI,CAACC,OAAO;MACfC,CAAC,EAAE,IAAI,CAACC;IACZ,CAAC,CAAC,GAAG4B,KAAK;EACd,CAAC;EACD0C,6BAA6B,EAAE,UAAS1C,KAAK,EAAE4C,GAAG,EAAE1C,WAAW,EAAE;IAC7D,IAAIjC,CAAC,GAAG+B,KAAK,CAAC/B,CAAC;IACf,IAAIE,CAAC,GAAG6B,KAAK,CAAC7B,CAAC;IACf,IAAI6B,KAAK,CAAC/B,CAAC,GAAG2E,GAAG,CAAC1B,KAAK,GAAGhB,WAAW,CAAC+B,IAAI,EAAE;MACxChE,CAAC,GAAGiC,WAAW,CAAC+B,IAAI,GAAGW,GAAG,CAAC1B,KAAK;IACpC,CAAC,MAAM,IAAIlB,KAAK,CAAC/B,CAAC,GAAGiC,WAAW,CAACiC,IAAI,EAAE;MACnClE,CAAC,GAAGiC,WAAW,CAACiC,IAAI;IACxB;IACA,OAAO;MACHlE,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEA;IACP,CAAC;EACL,CAAC;EACD6E,aAAa,EAAE,UAASlB,oBAAoB,EAAE;IAC1C,IAAIH,KAAK,GAAG,IAAI,CAACnC,MAAM;IACvB,IAAIoD,GAAG,GAAGjB,KAAK,CAAC5B,eAAe,EAAE;IACjC,IAAIG,WAAW,GAAG,IAAI,CAACC,eAAe,EAAE;IACxC,IAAIO,QAAQ,GAAGiB,KAAK,CAACC,gBAAgB,EAAE,CAAClB,QAAQ;IAChD,IAAIQ,KAAK,GAAG0B,GAAG,CAAC1B,KAAK;IACrB,IAAI+B,eAAe,GAAG,KAAK;IAC3B,IAAI,SAAS,KAAKvC,QAAQ,IAAI,IAAI,CAACwC,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE;MACjDjC,KAAK,GAAGhB,WAAW,CAAC+B,IAAI,GAAG,IAAI,CAAC/D,OAAO,GAAG,IAAI,CAACgB,YAAY;IAC/D,CAAC,MAAM,IAAI,QAAQ,KAAKwB,QAAQ,EAAE;MAC9B,IAAIQ,KAAK,GAAGhB,WAAW,CAAC+B,IAAI,GAAG/B,WAAW,CAACiC,IAAI,EAAE;QAC7CjB,KAAK,GAAGhB,WAAW,CAAC+B,IAAI,GAAG/B,WAAW,CAACiC,IAAI;MAC/C;IACJ,CAAC,MAAM,IAAIL,oBAAoB,IAAIc,GAAG,CAAC3E,CAAC,GAAG,IAAI,CAACC,OAAO,IAAI0E,GAAG,CAAC1B,KAAK,GAAG0B,GAAG,CAAC3E,CAAC,GAAG,IAAI,CAACC,OAAO,EAAE;MACzFgD,KAAK,GAAGlF,IAAI,CAACoH,KAAK,CAAC,CAAClD,WAAW,CAAC+B,IAAI,GAAG/B,WAAW,CAACiC,IAAI,IAAI,CAAC,CAAC;IACjE,CAAC,MAAM,IAAIS,GAAG,CAAC3E,CAAC,GAAGiD,KAAK,GAAGhB,WAAW,CAAC+B,IAAI,EAAE;MACzCf,KAAK,GAAGhB,WAAW,CAAC+B,IAAI,GAAGW,GAAG,CAAC3E,CAAC;IACpC,CAAC,MAAM,IAAI2E,GAAG,CAAC3E,CAAC,GAAGiC,WAAW,CAACiC,IAAI,EAAE;MACjCjB,KAAK,GAAG0B,GAAG,CAAC3E,CAAC,GAAGiD,KAAK,GAAGhB,WAAW,CAACiC,IAAI;IAC5C;IACA,IAAIjB,KAAK,GAAG0B,GAAG,CAAC1B,KAAK,EAAE;MACnB+B,eAAe,GAAGtB,KAAK,CAAC0B,GAAG,CAACnC,KAAK,CAAC;IACtC;IACA,OAAO+B,eAAe;EAC1B,CAAC;EACDK,mBAAmB,EAAE,YAAW;IAC5B,IAAI,CAAC9D,MAAM,CAAC+D,cAAc,CAAC,IAAI,CAAC;EACpC,CAAC;EACDlD,mBAAmB,EAAE,UAASL,KAAK,EAAEF,IAAI,EAAEI,WAAW,EAAE;IACpDF,KAAK,GAAG,IAAI,CAAC0C,6BAA6B,CAAC1C,KAAK,EAAEF,IAAI,EAAEI,WAAW,CAAC;IACpE,OAAO,IAAI,CAACK,2BAA2B,CAACP,KAAK,EAAEF,IAAI,EAAEI,WAAW,CAAC;EACrE,CAAC;EACDsD,kBAAkB,EAAE,YAAW;IAC3B,IAAIhC,GAAG,GAAG,IAAI,CAAClD,WAAW;IAC1B,IAAImF,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,CAACC,MAAM;IAC7C,IAAIC,cAAc,GAAGJ,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC;IACpD,IAAIK,WAAW,GAAG,IAAI,CAACZ,MAAM,CAACa,UAAU,EAAE,CAACC,wBAAwB,KAAKP,WAAW,CAACQ,MAAM,GAAGlI,MAAM,CAAC8H,cAAc,CAAC,GAAG9H,MAAM,CAAC,CAAC8H,cAAc,CAAC;IAC7I,IAAIxC,cAAc,GAAGvE,aAAa,CAACf,MAAM,CAAC,IAAI,CAACuF,WAAW,CAAC,CAAC;IAC5D,OAAO;MACHrD,CAAC,EAAElC,MAAM,CAAC,IAAI,CAACmC,OAAO,GAAG,CAACsD,GAAG,GAAGsC,WAAW,IAAIzC,cAAc,CAACI,GAAG,CAAC;MAClEtD,CAAC,EAAEpC,MAAM,CAAC,IAAI,CAACqC,OAAO,GAAG,CAACoD,GAAG,GAAGsC,WAAW,IAAIzC,cAAc,CAACK,GAAG,CAAC;MAClEwC,KAAK,EAAE,IAAI,CAAC5C;IAChB,CAAC;EACL,CAAC;EACD6C,WAAW,EAAE,UAASC,QAAQ,EAAEC,KAAK,EAAEC,gBAAgB,EAAEC,YAAY,EAAE;IACnE,IAAIjG,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIE,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAII,SAAS,GAAG,IAAI,CAACA,SAAS;IAC9B,IAAIF,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1B,IAAI4F,gBAAgB,EAAE;MAClB9F,WAAW,GAAGF,WAAW,GAAG,CAAC;MAC7B,IAAI,CAACiG,YAAY,EAAE;QACf3F,SAAS,GAAGF,OAAO,GAAG,IAAI,CAAC8F,YAAY;MAC3C;IACJ;IACA,IAAI,CAACxG,OAAO,GAAGoG,QAAQ,CAACK,GAAG,CAAC,IAAI,CAACvG,OAAO,EAAE,IAAI,CAACE,OAAO,EAAEI,WAAW,EAAEF,WAAW,EAAEI,OAAO,EAAEE,SAAS,CAAC,CAAC8F,IAAI,CAAC;MACvG,iBAAiB,EAAE;IACvB,CAAC,CAAC,CAACC,SAAS,CAAC,IAAI,CAACC,SAAS,EAAE,CAAC,CAACvH,IAAI,CAAC;MAChC,kBAAkB,EAAE;IACxB,CAAC,CAAC,CAACwH,KAAK,EAAE,CAACC,MAAM,CAACT,KAAK,CAAC;EAC5B,CAAC;EACDU,gBAAgB,EAAE,YAAW;IACzB,IAAI1D,cAAc,GAAGvE,aAAa,CAAC,IAAI,CAACwE,WAAW,CAAC;IACpD,IAAI9C,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIF,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,OAAO;MACHL,CAAC,EAAE,IAAI,CAACC,OAAO,GAAG,CAACM,WAAW,GAAG,CAACF,WAAW,GAAGE,WAAW,IAAI,CAAC,IAAI6C,cAAc,CAACI,GAAG;MACtFtD,CAAC,EAAE,IAAI,CAACC,OAAO,GAAG,CAACI,WAAW,GAAG,CAACF,WAAW,GAAGE,WAAW,IAAI,CAAC,IAAI6C,cAAc,CAACK,GAAG;MACtFsD,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,UAAU,EAAE,YAAW;IACnB,IAAIf,KAAK,GAAG,IAAI,CAACM,YAAY,IAAI,CAAC;IAClC,IAAIlF,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI7B,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC5B,IAAIyH,UAAU,GAAG,IAAI,CAACC,iBAAiB,EAAE;IACzC,IAAI,CAACvG,SAAS,GAAGsG,UAAU,CAAC3C,SAAS,CAAC9E,QAAQ,CAAC,GAAGyG,KAAK;IACvD,IAAI,CAACxF,OAAO,GAAGwG,UAAU,CAAC3C,SAAS,CAACjD,KAAK,CAAC,GAAG4E,KAAK;IAClD,IAAI,CAAC5C,WAAW,GAAG4D,UAAU,CAAC3C,SAAS,CAAC,CAACjD,KAAK,GAAG7B,QAAQ,IAAI,CAAC,GAAGA,QAAQ,CAAC,GAAGyG,KAAK;IAClF,IAAI,CAAC,IAAI,CAACkB,SAAS,EAAE,EAAE;MACnB,IAAI,CAAC9D,WAAW,GAAG,IAAI,CAAC5C,OAAO,GAAG,IAAI,CAACE,SAAS,GAAG,IAAI,CAACA,SAAS,IAAIsF,KAAK;IAC9E;EACJ,CAAC;EACDmB,mBAAmB,EAAE,YAAW;IAC5B,OAAO,IAAI;EACf,CAAC;EACDC,aAAa,EAAE,UAAShB,gBAAgB,EAAEiB,KAAK,EAAEC,CAAC,EAAEC,QAAQ,EAAE;IAC1D,IAAI,CAACnB,gBAAgB,EAAE;MACnBiB,KAAK,GAAGzJ,OAAO,CAAC;QACZmC,CAAC,EAAE,IAAI,CAACC,OAAO;QACfC,CAAC,EAAE,IAAI,CAACC,OAAO;QACfC,WAAW,EAAE,IAAI,CAACC,WAAW;QAC7BC,WAAW,EAAE,IAAI,CAACC,WAAW;QAC7BC,UAAU,EAAE,IAAI,CAACC,OAAO;QACxBC,QAAQ,EAAE,IAAI,CAACC;MACnB,CAAC,EAAE2G,KAAK,CAAC;IACb;IACA,IAAI,CAACvH,OAAO,CAAC2G,SAAS,CAACY,KAAK,CAAC,CAACV,KAAK,EAAE;IACrCY,QAAQ,IAAIA,QAAQ,EAAE;EAC1B,CAAC;EACDC,eAAe,EAAE,YAAW;IACxB,OAAO,IAAI,CAACC,OAAO,CAACC,YAAY;EACpC,CAAC;EACDC,eAAe,EAAE,YAAW;IACxB,OAAO,IAAI;EACf,CAAC;EACDC,IAAI,EAAE,YAAW;IACb,IAAI,IAAI,CAACtI,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACuI,WAAW,EAAE;MAClB,IAAI,CAACrC,QAAQ,CAACsC,iBAAiB,EAAE;IACrC;EACJ,CAAC;EACDC,IAAI,EAAE,YAAW;IACb,IAAI,CAAC,IAAI,CAACzI,QAAQ,EAAE;MAChB,IAAI,CAACA,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACkG,QAAQ,CAACsC,iBAAiB,EAAE;IACrC;EACJ,CAAC;EACDE,eAAe,EAAE,YAAW;IACxB,IAAI,CAAC1G,MAAM,CAAC2G,IAAI,CAAC,KAAK,CAAC;EAC3B,CAAC;EACDf,SAAS,EAAE,YAAW;IAClB,OAAO,IAAI,CAAC5H,QAAQ;EACxB,CAAC;EACD4I,gBAAgB,EAAE,UAASC,OAAO,EAAE;IAChC,IAAIC,YAAY,GAAGzK,WAAW,CAACuK,gBAAgB,CAAC7I,IAAI,CAAC,IAAI,EAAE8I,OAAO,CAAC;IACnE,IAAIjH,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1BkH,YAAY,CAAClH,OAAO,GAAGA,OAAO;IAC9BkH,YAAY,CAACC,WAAW,GAAGF,OAAO,CAACG,WAAW,CAACpH,OAAO,EAAE,SAAS,CAAC;IAClE,OAAOkH,YAAY;EACvB,CAAC;EACDG,QAAQ,EAAE,YAAW;IACjB,OAAO,IAAI,CAACd,OAAO,CAAC/B,MAAM,CAAC8C,IAAI;EACnC,CAAC;EACDC,QAAQ,EAAE,UAAS1I,CAAC,EAAEE,CAAC,EAAE;IACrB,IAAIyI,EAAE,GAAG3I,CAAC,GAAG,IAAI,CAACC,OAAO;IACzB,IAAI2I,EAAE,GAAG1I,CAAC,GAAG,IAAI,CAACC,OAAO;IACzB,IAAI0I,CAAC,GAAG5K,KAAK,CAAC0K,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAChC,IAAIjI,SAAS,GAAG,IAAI,CAACA,SAAS,GAAG,GAAG;IACpC,IAAIF,OAAO,GAAG,IAAI,CAACA,OAAO,GAAG,GAAG;IAChC,IAAIwF,KAAK;IACT,IAAI4C,CAAC,GAAG,IAAI,CAACtI,WAAW,IAAIsI,CAAC,GAAG,IAAI,CAACxI,WAAW,IAAI,CAAC,KAAKwI,CAAC,EAAE;MACzD,OAAO,KAAK;IAChB;IACA5C,KAAK,GAAG9H,KAAK,CAACwK,EAAE,GAAGE,CAAC,CAAC,GAAGxK,GAAG,IAAIuK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/C,IAAI3C,KAAK,GAAG,CAAC,EAAE;MACXA,KAAK,IAAI,GAAG;IAChB;IACA,IAAItF,SAAS,KAAKF,OAAO,IAAIlC,IAAI,CAAC,IAAI,CAACkC,OAAO,GAAG,IAAI,CAACE,SAAS,CAAC,GAAG,IAAI,EAAE;MACrE,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAOA,SAAS,IAAIF,OAAO,GAAGwF,KAAK,IAAItF,SAAS,IAAIsF,KAAK,IAAIxF,OAAO,GAAG,EAAEwF,KAAK,IAAItF,SAAS,IAAIsF,KAAK,IAAIxF,OAAO,CAAC;IACpH;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}