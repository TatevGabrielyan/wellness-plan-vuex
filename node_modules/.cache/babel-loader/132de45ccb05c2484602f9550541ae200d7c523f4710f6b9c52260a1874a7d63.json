{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * DevExtreme (esm/viz/core/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport { isDefined, isNumeric, isExponential, isFunction, isString } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { adjust, sign } from \"../../core/utils/math\";\nimport dateUtils from \"../../core/utils/date\";\nimport Color from \"../../color\";\nvar {\n  PI: PI,\n  LN10: LN10,\n  abs: abs,\n  log: log,\n  floor: floor,\n  ceil: ceil,\n  pow: pow,\n  sqrt: sqrt,\n  atan2: atan2\n} = Math;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _cos = Math.cos;\nvar _sin = Math.sin;\nvar _round = Math.round;\nvar dateToMilliseconds = dateUtils.dateToMilliseconds;\nvar MAX_PIXEL_COUNT = 1e10;\nvar PI_DIV_180 = PI / 180;\nvar _isNaN = isNaN;\nvar _Number = Number;\nvar _NaN = NaN;\nexport var PANE_PADDING = 10;\nexport var getLog = function (value, base) {\n  if (!value) {\n    return _NaN;\n  }\n  return log(value) / log(base);\n};\nexport var getAdjustedLog10 = function (value) {\n  return adjust(getLog(value, 10));\n};\nexport var raiseTo = function (power, base) {\n  return pow(base, power);\n};\nexport var normalizeAngle = function (angle) {\n  return (angle % 360 + 360) % 360;\n};\nexport var convertAngleToRendererSpace = function (angle) {\n  return 90 - angle;\n};\nexport var degreesToRadians = function (value) {\n  return PI * value / 180;\n};\nexport var getCosAndSin = function (angle) {\n  var angleInRadians = degreesToRadians(angle);\n  return {\n    cos: _cos(angleInRadians),\n    sin: _sin(angleInRadians)\n  };\n};\nvar DECIMAL_ORDER_THRESHOLD = 1e-14;\nexport var getDistance = function (x1, y1, x2, y2) {\n  var diffX = x2 - x1;\n  var diffY = y2 - y1;\n  return sqrt(diffY * diffY + diffX * diffX);\n};\nexport var getDecimalOrder = function (number) {\n  var n = abs(number);\n  var cn;\n  if (!_isNaN(n)) {\n    if (n > 0) {\n      n = log(n) / LN10;\n      cn = ceil(n);\n      return cn - n < DECIMAL_ORDER_THRESHOLD ? cn : floor(n);\n    }\n    return 0;\n  }\n  return _NaN;\n};\nexport var getAppropriateFormat = function (start, end, count) {\n  var order = _max(getDecimalOrder(start), getDecimalOrder(end));\n  var precision = -getDecimalOrder(abs(end - start) / count);\n  var format;\n  if (!_isNaN(order) && !_isNaN(precision)) {\n    if (abs(order) <= 4) {\n      format = \"fixedPoint\";\n      precision < 0 && (precision = 0);\n      precision > 4 && (precision = 4);\n    } else {\n      format = \"exponential\";\n      precision += order - 1;\n      precision > 3 && (precision = 3);\n    }\n    return {\n      type: format,\n      precision: precision\n    };\n  }\n  return null;\n};\nexport var roundValue = function (value, precision) {\n  if (precision > 20) {\n    precision = 20;\n  }\n  if (isNumeric(value)) {\n    if (isExponential(value)) {\n      return _Number(value.toExponential(precision));\n    } else {\n      return _Number(value.toFixed(precision));\n    }\n  }\n};\nexport var getPower = function (value) {\n  return value.toExponential().split(\"e\")[1];\n};\nexport function map(array, callback) {\n  var i = 0;\n  var len = array.length;\n  var result = [];\n  var value;\n  while (i < len) {\n    value = callback(array[i], i);\n    if (null !== value) {\n      result.push(value);\n    }\n    i++;\n  }\n  return result;\n}\nfunction selectByKeys(object, keys) {\n  return map(keys, key => object[key] ? object[key] : null);\n}\nfunction decreaseFields(object, keys, eachDecrease, decrease) {\n  var dec = decrease;\n  each(keys, (_, key) => {\n    if (object[key]) {\n      object[key] -= eachDecrease;\n      dec -= eachDecrease;\n    }\n  });\n  return dec;\n}\nexport function normalizeEnum(value) {\n  return String(value).toLowerCase();\n}\nexport function setCanvasValues(canvas) {\n  if (canvas) {\n    canvas.originalTop = canvas.top;\n    canvas.originalBottom = canvas.bottom;\n    canvas.originalLeft = canvas.left;\n    canvas.originalRight = canvas.right;\n  }\n  return canvas;\n}\nfunction normalizeBBoxField(value) {\n  return -MAX_PIXEL_COUNT < value && value < +MAX_PIXEL_COUNT ? value : 0;\n}\nexport function normalizeBBox(bBox) {\n  var xl = normalizeBBoxField(floor(bBox.x));\n  var yt = normalizeBBoxField(floor(bBox.y));\n  var xr = normalizeBBoxField(ceil(bBox.width + bBox.x));\n  var yb = normalizeBBoxField(ceil(bBox.height + bBox.y));\n  var result = {\n    x: xl,\n    y: yt,\n    width: xr - xl,\n    height: yb - yt\n  };\n  result.isEmpty = !result.x && !result.y && !result.width && !result.height;\n  return result;\n}\nexport function rotateBBox(bBox, center, angle) {\n  var cos = _Number(_cos(angle * PI_DIV_180).toFixed(3));\n  var sin = _Number(_sin(angle * PI_DIV_180).toFixed(3));\n  var w2 = bBox.width / 2;\n  var h2 = bBox.height / 2;\n  var centerX = bBox.x + w2;\n  var centerY = bBox.y + h2;\n  var w2_ = abs(w2 * cos) + abs(h2 * sin);\n  var h2_ = abs(w2 * sin) + abs(h2 * cos);\n  var centerX_ = center[0] + (centerX - center[0]) * cos + (centerY - center[1]) * sin;\n  var centerY_ = center[1] - (centerX - center[0]) * sin + (centerY - center[1]) * cos;\n  return normalizeBBox({\n    x: centerX_ - w2_,\n    y: centerY_ - h2_,\n    width: 2 * w2_,\n    height: 2 * h2_\n  });\n}\nexport var decreaseGaps = function (object, keys, decrease) {\n  var arrayGaps;\n  do {\n    arrayGaps = selectByKeys(object, keys);\n    arrayGaps.push(ceil(decrease / arrayGaps.length));\n    decrease = decreaseFields(object, keys, _min.apply(null, arrayGaps), decrease);\n  } while (decrease > 0 && arrayGaps.length > 1);\n  return decrease;\n};\nexport var parseScalar = function (value, defaultValue) {\n  return void 0 !== value ? value : defaultValue;\n};\nexport var enumParser = function (values) {\n  var stored = {};\n  var i;\n  var ii;\n  for (i = 0, ii = values.length; i < ii; ++i) {\n    stored[normalizeEnum(values[i])] = 1;\n  }\n  return function (value, defaultValue) {\n    var _value = normalizeEnum(value);\n    return stored[_value] ? _value : defaultValue;\n  };\n};\nexport var patchFontOptions = function (options) {\n  var fontOptions = {};\n  each(options || {}, function (key, value) {\n    if (/^(cursor)$/i.test(key)) {} else if (\"opacity\" === key) {\n      value = null;\n    } else if (\"color\" === key) {\n      key = \"fill\";\n      if (\"opacity\" in options) {\n        var color = new Color(value);\n        value = \"rgba(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b, \",\").concat(options.opacity, \")\");\n      }\n    } else {\n      key = \"font-\" + key;\n    }\n    fontOptions[key] = value;\n  });\n  return fontOptions;\n};\nexport function convertPolarToXY(centerCoords, startAngle, angle, radius) {\n  var normalizedRadius = radius > 0 ? radius : 0;\n  angle = isDefined(angle) ? angle + startAngle - 90 : 0;\n  var cosSin = getCosAndSin(angle);\n  return {\n    x: _round(centerCoords.x + normalizedRadius * cosSin.cos),\n    y: _round(centerCoords.y + normalizedRadius * cosSin.sin)\n  };\n}\nexport var convertXYToPolar = function (centerCoords, x, y) {\n  var radius = getDistance(centerCoords.x, centerCoords.y, x, y);\n  var angle = atan2(y - centerCoords.y, x - centerCoords.x);\n  return {\n    phi: _round(normalizeAngle(180 * angle / PI)),\n    r: _round(radius)\n  };\n};\nexport var processSeriesTemplate = function (seriesTemplate, items) {\n  var customizeSeries = isFunction(seriesTemplate.customizeSeries) ? seriesTemplate.customizeSeries : noop;\n  var nameField = seriesTemplate.nameField;\n  var generatedSeries = {};\n  var seriesOrder = [];\n  var series;\n  var i = 0;\n  var length;\n  var data;\n  items = items || [];\n  for (length = items.length; i < length; i++) {\n    data = items[i];\n    if (nameField in data) {\n      series = generatedSeries[data[nameField]];\n      if (!series) {\n        series = generatedSeries[data[nameField]] = {\n          name: data[nameField],\n          nameFieldValue: data[nameField]\n        };\n        seriesOrder.push(series.name);\n      }\n    }\n  }\n  return map(seriesOrder, function (orderedName) {\n    var group = generatedSeries[orderedName];\n    return extend(group, customizeSeries.call(null, group.name));\n  });\n};\nexport var getCategoriesInfo = function (categories, startValue, endValue) {\n  if (0 === categories.length) {\n    return {\n      categories: []\n    };\n  }\n  startValue = isDefined(startValue) ? startValue : categories[0];\n  endValue = isDefined(endValue) ? endValue : categories[categories.length - 1];\n  var categoriesValue = map(categories, category => null === category || void 0 === category ? void 0 : category.valueOf());\n  var indexStartValue = categoriesValue.indexOf(startValue.valueOf());\n  var indexEndValue = categoriesValue.indexOf(endValue.valueOf());\n  var swapBuf;\n  var inverted = false;\n  indexStartValue < 0 && (indexStartValue = 0);\n  indexEndValue < 0 && (indexEndValue = categories.length - 1);\n  if (indexEndValue < indexStartValue) {\n    swapBuf = indexEndValue;\n    indexEndValue = indexStartValue;\n    indexStartValue = swapBuf;\n    inverted = true;\n  }\n  var visibleCategories = categories.slice(indexStartValue, indexEndValue + 1);\n  var lastIdx = visibleCategories.length - 1;\n  return {\n    categories: visibleCategories,\n    start: visibleCategories[inverted ? lastIdx : 0],\n    end: visibleCategories[inverted ? 0 : lastIdx],\n    inverted: inverted\n  };\n};\nexport function isRelativeHeightPane(pane) {\n  return !(pane.unit % 2);\n}\nexport function normalizePanesHeight(panes) {\n  panes.forEach(pane => {\n    var height = pane.height;\n    var unit = 0;\n    var parsedHeight = parseFloat(height) || void 0;\n    if (isString(height) && height.indexOf(\"px\") > -1 || isNumeric(height) && height > 1) {\n      parsedHeight = _round(parsedHeight);\n      unit = 1;\n    }\n    if (!unit && parsedHeight) {\n      if (isString(height) && height.indexOf(\"%\") > -1) {\n        parsedHeight /= 100;\n        unit = 2;\n      } else if (parsedHeight < 0) {\n        parsedHeight = parsedHeight < -1 ? 1 : abs(parsedHeight);\n      }\n    }\n    pane.height = parsedHeight;\n    pane.unit = unit;\n  });\n  var relativeHeightPanes = panes.filter(isRelativeHeightPane);\n  var weightSum = relativeHeightPanes.reduce((prev, next) => prev + (next.height || 0), 0);\n  var weightHeightCount = relativeHeightPanes.length;\n  var emptyHeightPanes = relativeHeightPanes.filter(pane => !pane.height);\n  var emptyHeightCount = emptyHeightPanes.length;\n  if (weightSum < 1 && emptyHeightCount) {\n    emptyHeightPanes.forEach(pane => pane.height = (1 - weightSum) / emptyHeightCount);\n  } else if (weightSum > 1 || weightSum < 1 && !emptyHeightCount || 1 === weightSum && emptyHeightCount) {\n    if (emptyHeightCount) {\n      var weightForEmpty = weightSum / weightHeightCount;\n      var emptyWeightSum = emptyHeightCount * weightForEmpty;\n      relativeHeightPanes.filter(pane => pane.height).forEach(pane => pane.height *= (weightSum - emptyWeightSum) / weightSum);\n      emptyHeightPanes.forEach(pane => pane.height = weightForEmpty);\n    }\n    relativeHeightPanes.forEach(pane => pane.height *= 1 / weightSum);\n  }\n}\nexport function updatePanesCanvases(panes, canvas, rotated) {\n  var distributedSpace = 0;\n  var padding = PANE_PADDING;\n  var paneSpace = rotated ? canvas.width - canvas.left - canvas.right : canvas.height - canvas.top - canvas.bottom;\n  var totalCustomSpace = panes.reduce((prev, cur) => prev + (!isRelativeHeightPane(cur) ? cur.height : 0), 0);\n  var usefulSpace = paneSpace - padding * (panes.length - 1) - totalCustomSpace;\n  var startName = rotated ? \"left\" : \"top\";\n  var endName = rotated ? \"right\" : \"bottom\";\n  panes.forEach(pane => {\n    var calcLength = !isRelativeHeightPane(pane) ? pane.height : _round(pane.height * usefulSpace);\n    pane.canvas = pane.canvas || {};\n    extend(pane.canvas, canvas);\n    pane.canvas[startName] = canvas[startName] + distributedSpace;\n    pane.canvas[endName] = canvas[endName] + (paneSpace - calcLength - distributedSpace);\n    distributedSpace = distributedSpace + calcLength + padding;\n    setCanvasValues(pane.canvas);\n  });\n}\nexport var unique = function (array) {\n  var values = {};\n  return map(array, function (item) {\n    var result = !values[item] ? item : null;\n    values[item] = true;\n    return result;\n  });\n};\nexport var getVerticallyShiftedAngularCoords = function (bBox, dy, center) {\n  var isPositive = bBox.x + bBox.width / 2 >= center.x;\n  var horizontalOffset1 = (isPositive ? bBox.x : bBox.x + bBox.width) - center.x;\n  var verticalOffset1 = bBox.y - center.y;\n  var verticalOffset2 = verticalOffset1 + dy;\n  var horizontalOffset2 = _round(sqrt(horizontalOffset1 * horizontalOffset1 + verticalOffset1 * verticalOffset1 - verticalOffset2 * verticalOffset2));\n  var dx = (isPositive ? +horizontalOffset2 : -horizontalOffset2) || horizontalOffset1;\n  return {\n    x: center.x + (isPositive ? dx : dx - bBox.width),\n    y: bBox.y + dy\n  };\n};\nexport function mergeMarginOptions(opt1, opt2) {\n  return {\n    checkInterval: opt1.checkInterval || opt2.checkInterval,\n    size: _max(opt1.size || 0, opt2.size || 0),\n    percentStick: opt1.percentStick || opt2.percentStick,\n    sizePointNormalState: _max(opt1.sizePointNormalState || 0, opt2.sizePointNormalState || 0)\n  };\n}\nexport function getVizRangeObject(value) {\n  if (Array.isArray(value)) {\n    return {\n      startValue: value[0],\n      endValue: value[1]\n    };\n  } else {\n    return value || {};\n  }\n}\nexport function convertVisualRangeObject(visualRange, convertToVisualRange) {\n  if (convertToVisualRange) {\n    return visualRange;\n  }\n  return [visualRange.startValue, visualRange.endValue];\n}\nexport function getAddFunction(range, correctZeroLevel) {\n  if (\"datetime\" === range.dataType) {\n    return function (rangeValue, marginValue) {\n      var sign = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;\n      return new Date(rangeValue.getTime() + sign * marginValue);\n    };\n  }\n  if (\"logarithmic\" === range.axisType) {\n    return function (rangeValue, marginValue) {\n      var sign = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;\n      var log = getLogExt(rangeValue, range.base) + sign * marginValue;\n      return raiseToExt(log, range.base);\n    };\n  }\n  return function (rangeValue, marginValue) {\n    var sign = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;\n    var newValue = rangeValue + sign * marginValue;\n    return correctZeroLevel && newValue * rangeValue <= 0 ? 0 : newValue;\n  };\n}\nexport function adjustVisualRange(options, visualRange, wholeRange, dataRange) {\n  var minDefined = isDefined(visualRange.startValue);\n  var maxDefined = isDefined(visualRange.endValue);\n  var nonDiscrete = \"discrete\" !== options.axisType;\n  dataRange = dataRange || wholeRange;\n  var add = getAddFunction(options, false);\n  var min = minDefined ? visualRange.startValue : dataRange.min;\n  var max = maxDefined ? visualRange.endValue : dataRange.max;\n  var rangeLength = visualRange.length;\n  var categories = dataRange.categories;\n  if (nonDiscrete && !isDefined(min) && !isDefined(max)) {\n    return {\n      startValue: min,\n      endValue: max\n    };\n  }\n  if (isDefined(rangeLength)) {\n    if (nonDiscrete) {\n      if (\"datetime\" === options.dataType && !isNumeric(rangeLength)) {\n        rangeLength = dateToMilliseconds(rangeLength);\n      }\n      if (maxDefined && !minDefined || !maxDefined && !minDefined) {\n        isDefined(wholeRange.max) && (max = max > wholeRange.max ? wholeRange.max : max);\n        min = add(max, rangeLength, -1);\n      } else if (minDefined && !maxDefined) {\n        isDefined(wholeRange.min) && (min = min < wholeRange.min ? wholeRange.min : min);\n        max = add(min, rangeLength);\n      }\n    } else {\n      rangeLength = parseInt(rangeLength);\n      if (!isNaN(rangeLength) && isFinite(rangeLength)) {\n        rangeLength--;\n        if (!maxDefined && !minDefined) {\n          max = categories[categories.length - 1];\n          min = categories[categories.length - 1 - rangeLength];\n        } else if (minDefined && !maxDefined) {\n          var categoriesInfo = getCategoriesInfo(categories, min, void 0);\n          max = categoriesInfo.categories[rangeLength];\n        } else if (!minDefined && maxDefined) {\n          var _categoriesInfo = getCategoriesInfo(categories, void 0, max);\n          min = _categoriesInfo.categories[_categoriesInfo.categories.length - 1 - rangeLength];\n        }\n      }\n    }\n  }\n  if (nonDiscrete) {\n    if (isDefined(wholeRange.max) && max > wholeRange.max) {\n      max = wholeRange.max;\n    }\n    if (isDefined(wholeRange.min) && min < wholeRange.min) {\n      min = wholeRange.min;\n    }\n  }\n  return {\n    startValue: min,\n    endValue: max\n  };\n}\nexport function getLogExt(value, base) {\n  var allowNegatives = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n  var linearThreshold = arguments.length > 3 ? arguments[3] : void 0;\n  if (!allowNegatives) {\n    return getLog(value, base);\n  }\n  if (0 === value) {\n    return 0;\n  }\n  var transformValue = getLog(abs(value), base) - (linearThreshold - 1);\n  if (transformValue < 0) {\n    return 0;\n  }\n  return adjust(sign(value) * transformValue, Number(pow(base, linearThreshold - 1).toFixed(abs(linearThreshold))));\n}\nexport function raiseToExt(value, base) {\n  var allowNegatives = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n  var linearThreshold = arguments.length > 3 ? arguments[3] : void 0;\n  if (!allowNegatives) {\n    return raiseTo(value, base);\n  }\n  if (0 === value) {\n    return 0;\n  }\n  var transformValue = raiseTo(abs(value) + (linearThreshold - 1), base);\n  if (transformValue < 0) {\n    return 0;\n  }\n  return adjust(sign(value) * transformValue, Number(pow(base, linearThreshold).toFixed(abs(linearThreshold))));\n}\nexport function rangesAreEqual(range, rangeFromOptions) {\n  if (Array.isArray(rangeFromOptions)) {\n    return range.length === rangeFromOptions.length && range.every((item, i) => valueOf(item) === valueOf(rangeFromOptions[i]));\n  } else {\n    return valueOf(range.startValue) === valueOf(rangeFromOptions.startValue) && valueOf(range.endValue) === valueOf(rangeFromOptions.endValue);\n  }\n}\nexport function valueOf(value) {\n  return value && value.valueOf();\n}\nexport function pointInCanvas(canvas, x, y) {\n  return x >= canvas.left && x <= canvas.right && y >= canvas.top && y <= canvas.bottom;\n}","map":{"version":3,"names":["noop","isDefined","isNumeric","isExponential","isFunction","isString","extend","each","adjust","sign","dateUtils","Color","PI","LN10","abs","log","floor","ceil","pow","sqrt","atan2","Math","_min","min","_max","max","_cos","cos","_sin","sin","_round","round","dateToMilliseconds","MAX_PIXEL_COUNT","PI_DIV_180","_isNaN","isNaN","_Number","Number","_NaN","NaN","PANE_PADDING","getLog","value","base","getAdjustedLog10","raiseTo","power","normalizeAngle","angle","convertAngleToRendererSpace","degreesToRadians","getCosAndSin","angleInRadians","DECIMAL_ORDER_THRESHOLD","getDistance","x1","y1","x2","y2","diffX","diffY","getDecimalOrder","number","n","cn","getAppropriateFormat","start","end","count","order","precision","format","type","roundValue","toExponential","toFixed","getPower","split","map","array","callback","i","len","length","result","push","selectByKeys","object","keys","key","decreaseFields","eachDecrease","decrease","dec","_","normalizeEnum","String","toLowerCase","setCanvasValues","canvas","originalTop","top","originalBottom","bottom","originalLeft","left","originalRight","right","normalizeBBoxField","normalizeBBox","bBox","xl","x","yt","y","xr","width","yb","height","isEmpty","rotateBBox","center","w2","h2","centerX","centerY","w2_","h2_","centerX_","centerY_","decreaseGaps","arrayGaps","apply","parseScalar","defaultValue","enumParser","values","stored","ii","_value","patchFontOptions","options","fontOptions","test","color","concat","r","g","b","opacity","convertPolarToXY","centerCoords","startAngle","radius","normalizedRadius","cosSin","convertXYToPolar","phi","processSeriesTemplate","seriesTemplate","items","customizeSeries","nameField","generatedSeries","seriesOrder","series","data","name","nameFieldValue","orderedName","group","call","getCategoriesInfo","categories","startValue","endValue","categoriesValue","category","valueOf","indexStartValue","indexOf","indexEndValue","swapBuf","inverted","visibleCategories","slice","lastIdx","isRelativeHeightPane","pane","unit","normalizePanesHeight","panes","forEach","parsedHeight","parseFloat","relativeHeightPanes","filter","weightSum","reduce","prev","next","weightHeightCount","emptyHeightPanes","emptyHeightCount","weightForEmpty","emptyWeightSum","updatePanesCanvases","rotated","distributedSpace","padding","paneSpace","totalCustomSpace","cur","usefulSpace","startName","endName","calcLength","unique","item","getVerticallyShiftedAngularCoords","dy","isPositive","horizontalOffset1","verticalOffset1","verticalOffset2","horizontalOffset2","dx","mergeMarginOptions","opt1","opt2","checkInterval","size","percentStick","sizePointNormalState","getVizRangeObject","Array","isArray","convertVisualRangeObject","visualRange","convertToVisualRange","getAddFunction","range","correctZeroLevel","dataType","rangeValue","marginValue","arguments","Date","getTime","axisType","getLogExt","raiseToExt","newValue","adjustVisualRange","wholeRange","dataRange","minDefined","maxDefined","nonDiscrete","add","rangeLength","parseInt","isFinite","categoriesInfo","_categoriesInfo","allowNegatives","linearThreshold","transformValue","rangesAreEqual","rangeFromOptions","every","pointInCanvas"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/core/utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/core/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isNumeric,\r\n    isExponential,\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    adjust,\r\n    sign\r\n} from \"../../core/utils/math\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport Color from \"../../color\";\r\nvar {\r\n    PI: PI,\r\n    LN10: LN10,\r\n    abs: abs,\r\n    log: log,\r\n    floor: floor,\r\n    ceil: ceil,\r\n    pow: pow,\r\n    sqrt: sqrt,\r\n    atan2: atan2\r\n} = Math;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _cos = Math.cos;\r\nvar _sin = Math.sin;\r\nvar _round = Math.round;\r\nvar dateToMilliseconds = dateUtils.dateToMilliseconds;\r\nvar MAX_PIXEL_COUNT = 1e10;\r\nvar PI_DIV_180 = PI / 180;\r\nvar _isNaN = isNaN;\r\nvar _Number = Number;\r\nvar _NaN = NaN;\r\nexport var PANE_PADDING = 10;\r\nexport var getLog = function(value, base) {\r\n    if (!value) {\r\n        return _NaN\r\n    }\r\n    return log(value) / log(base)\r\n};\r\nexport var getAdjustedLog10 = function(value) {\r\n    return adjust(getLog(value, 10))\r\n};\r\nexport var raiseTo = function(power, base) {\r\n    return pow(base, power)\r\n};\r\nexport var normalizeAngle = function(angle) {\r\n    return (angle % 360 + 360) % 360\r\n};\r\nexport var convertAngleToRendererSpace = function(angle) {\r\n    return 90 - angle\r\n};\r\nexport var degreesToRadians = function(value) {\r\n    return PI * value / 180\r\n};\r\nexport var getCosAndSin = function(angle) {\r\n    var angleInRadians = degreesToRadians(angle);\r\n    return {\r\n        cos: _cos(angleInRadians),\r\n        sin: _sin(angleInRadians)\r\n    }\r\n};\r\nvar DECIMAL_ORDER_THRESHOLD = 1e-14;\r\nexport var getDistance = function(x1, y1, x2, y2) {\r\n    var diffX = x2 - x1;\r\n    var diffY = y2 - y1;\r\n    return sqrt(diffY * diffY + diffX * diffX)\r\n};\r\nexport var getDecimalOrder = function(number) {\r\n    var n = abs(number);\r\n    var cn;\r\n    if (!_isNaN(n)) {\r\n        if (n > 0) {\r\n            n = log(n) / LN10;\r\n            cn = ceil(n);\r\n            return cn - n < DECIMAL_ORDER_THRESHOLD ? cn : floor(n)\r\n        }\r\n        return 0\r\n    }\r\n    return _NaN\r\n};\r\nexport var getAppropriateFormat = function(start, end, count) {\r\n    var order = _max(getDecimalOrder(start), getDecimalOrder(end));\r\n    var precision = -getDecimalOrder(abs(end - start) / count);\r\n    var format;\r\n    if (!_isNaN(order) && !_isNaN(precision)) {\r\n        if (abs(order) <= 4) {\r\n            format = \"fixedPoint\";\r\n            precision < 0 && (precision = 0);\r\n            precision > 4 && (precision = 4)\r\n        } else {\r\n            format = \"exponential\";\r\n            precision += order - 1;\r\n            precision > 3 && (precision = 3)\r\n        }\r\n        return {\r\n            type: format,\r\n            precision: precision\r\n        }\r\n    }\r\n    return null\r\n};\r\nexport var roundValue = function(value, precision) {\r\n    if (precision > 20) {\r\n        precision = 20\r\n    }\r\n    if (isNumeric(value)) {\r\n        if (isExponential(value)) {\r\n            return _Number(value.toExponential(precision))\r\n        } else {\r\n            return _Number(value.toFixed(precision))\r\n        }\r\n    }\r\n};\r\nexport var getPower = function(value) {\r\n    return value.toExponential().split(\"e\")[1]\r\n};\r\nexport function map(array, callback) {\r\n    var i = 0;\r\n    var len = array.length;\r\n    var result = [];\r\n    var value;\r\n    while (i < len) {\r\n        value = callback(array[i], i);\r\n        if (null !== value) {\r\n            result.push(value)\r\n        }\r\n        i++\r\n    }\r\n    return result\r\n}\r\n\r\nfunction selectByKeys(object, keys) {\r\n    return map(keys, key => object[key] ? object[key] : null)\r\n}\r\n\r\nfunction decreaseFields(object, keys, eachDecrease, decrease) {\r\n    var dec = decrease;\r\n    each(keys, (_, key) => {\r\n        if (object[key]) {\r\n            object[key] -= eachDecrease;\r\n            dec -= eachDecrease\r\n        }\r\n    });\r\n    return dec\r\n}\r\nexport function normalizeEnum(value) {\r\n    return String(value).toLowerCase()\r\n}\r\nexport function setCanvasValues(canvas) {\r\n    if (canvas) {\r\n        canvas.originalTop = canvas.top;\r\n        canvas.originalBottom = canvas.bottom;\r\n        canvas.originalLeft = canvas.left;\r\n        canvas.originalRight = canvas.right\r\n    }\r\n    return canvas\r\n}\r\n\r\nfunction normalizeBBoxField(value) {\r\n    return -MAX_PIXEL_COUNT < value && value < +MAX_PIXEL_COUNT ? value : 0\r\n}\r\nexport function normalizeBBox(bBox) {\r\n    var xl = normalizeBBoxField(floor(bBox.x));\r\n    var yt = normalizeBBoxField(floor(bBox.y));\r\n    var xr = normalizeBBoxField(ceil(bBox.width + bBox.x));\r\n    var yb = normalizeBBoxField(ceil(bBox.height + bBox.y));\r\n    var result = {\r\n        x: xl,\r\n        y: yt,\r\n        width: xr - xl,\r\n        height: yb - yt\r\n    };\r\n    result.isEmpty = !result.x && !result.y && !result.width && !result.height;\r\n    return result\r\n}\r\nexport function rotateBBox(bBox, center, angle) {\r\n    var cos = _Number(_cos(angle * PI_DIV_180).toFixed(3));\r\n    var sin = _Number(_sin(angle * PI_DIV_180).toFixed(3));\r\n    var w2 = bBox.width / 2;\r\n    var h2 = bBox.height / 2;\r\n    var centerX = bBox.x + w2;\r\n    var centerY = bBox.y + h2;\r\n    var w2_ = abs(w2 * cos) + abs(h2 * sin);\r\n    var h2_ = abs(w2 * sin) + abs(h2 * cos);\r\n    var centerX_ = center[0] + (centerX - center[0]) * cos + (centerY - center[1]) * sin;\r\n    var centerY_ = center[1] - (centerX - center[0]) * sin + (centerY - center[1]) * cos;\r\n    return normalizeBBox({\r\n        x: centerX_ - w2_,\r\n        y: centerY_ - h2_,\r\n        width: 2 * w2_,\r\n        height: 2 * h2_\r\n    })\r\n}\r\nexport var decreaseGaps = function(object, keys, decrease) {\r\n    var arrayGaps;\r\n    do {\r\n        arrayGaps = selectByKeys(object, keys);\r\n        arrayGaps.push(ceil(decrease / arrayGaps.length));\r\n        decrease = decreaseFields(object, keys, _min.apply(null, arrayGaps), decrease)\r\n    } while (decrease > 0 && arrayGaps.length > 1);\r\n    return decrease\r\n};\r\nexport var parseScalar = function(value, defaultValue) {\r\n    return void 0 !== value ? value : defaultValue\r\n};\r\nexport var enumParser = function(values) {\r\n    var stored = {};\r\n    var i;\r\n    var ii;\r\n    for (i = 0, ii = values.length; i < ii; ++i) {\r\n        stored[normalizeEnum(values[i])] = 1\r\n    }\r\n    return function(value, defaultValue) {\r\n        var _value = normalizeEnum(value);\r\n        return stored[_value] ? _value : defaultValue\r\n    }\r\n};\r\nexport var patchFontOptions = function(options) {\r\n    var fontOptions = {};\r\n    each(options || {}, (function(key, value) {\r\n        if (/^(cursor)$/i.test(key)) {} else if (\"opacity\" === key) {\r\n            value = null\r\n        } else if (\"color\" === key) {\r\n            key = \"fill\";\r\n            if (\"opacity\" in options) {\r\n                var color = new Color(value);\r\n                value = \"rgba(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b, \",\").concat(options.opacity, \")\")\r\n            }\r\n        } else {\r\n            key = \"font-\" + key\r\n        }\r\n        fontOptions[key] = value\r\n    }));\r\n    return fontOptions\r\n};\r\nexport function convertPolarToXY(centerCoords, startAngle, angle, radius) {\r\n    var normalizedRadius = radius > 0 ? radius : 0;\r\n    angle = isDefined(angle) ? angle + startAngle - 90 : 0;\r\n    var cosSin = getCosAndSin(angle);\r\n    return {\r\n        x: _round(centerCoords.x + normalizedRadius * cosSin.cos),\r\n        y: _round(centerCoords.y + normalizedRadius * cosSin.sin)\r\n    }\r\n}\r\nexport var convertXYToPolar = function(centerCoords, x, y) {\r\n    var radius = getDistance(centerCoords.x, centerCoords.y, x, y);\r\n    var angle = atan2(y - centerCoords.y, x - centerCoords.x);\r\n    return {\r\n        phi: _round(normalizeAngle(180 * angle / PI)),\r\n        r: _round(radius)\r\n    }\r\n};\r\nexport var processSeriesTemplate = function(seriesTemplate, items) {\r\n    var customizeSeries = isFunction(seriesTemplate.customizeSeries) ? seriesTemplate.customizeSeries : noop;\r\n    var nameField = seriesTemplate.nameField;\r\n    var generatedSeries = {};\r\n    var seriesOrder = [];\r\n    var series;\r\n    var i = 0;\r\n    var length;\r\n    var data;\r\n    items = items || [];\r\n    for (length = items.length; i < length; i++) {\r\n        data = items[i];\r\n        if (nameField in data) {\r\n            series = generatedSeries[data[nameField]];\r\n            if (!series) {\r\n                series = generatedSeries[data[nameField]] = {\r\n                    name: data[nameField],\r\n                    nameFieldValue: data[nameField]\r\n                };\r\n                seriesOrder.push(series.name)\r\n            }\r\n        }\r\n    }\r\n    return map(seriesOrder, (function(orderedName) {\r\n        var group = generatedSeries[orderedName];\r\n        return extend(group, customizeSeries.call(null, group.name))\r\n    }))\r\n};\r\nexport var getCategoriesInfo = function(categories, startValue, endValue) {\r\n    if (0 === categories.length) {\r\n        return {\r\n            categories: []\r\n        }\r\n    }\r\n    startValue = isDefined(startValue) ? startValue : categories[0];\r\n    endValue = isDefined(endValue) ? endValue : categories[categories.length - 1];\r\n    var categoriesValue = map(categories, category => null === category || void 0 === category ? void 0 : category.valueOf());\r\n    var indexStartValue = categoriesValue.indexOf(startValue.valueOf());\r\n    var indexEndValue = categoriesValue.indexOf(endValue.valueOf());\r\n    var swapBuf;\r\n    var inverted = false;\r\n    indexStartValue < 0 && (indexStartValue = 0);\r\n    indexEndValue < 0 && (indexEndValue = categories.length - 1);\r\n    if (indexEndValue < indexStartValue) {\r\n        swapBuf = indexEndValue;\r\n        indexEndValue = indexStartValue;\r\n        indexStartValue = swapBuf;\r\n        inverted = true\r\n    }\r\n    var visibleCategories = categories.slice(indexStartValue, indexEndValue + 1);\r\n    var lastIdx = visibleCategories.length - 1;\r\n    return {\r\n        categories: visibleCategories,\r\n        start: visibleCategories[inverted ? lastIdx : 0],\r\n        end: visibleCategories[inverted ? 0 : lastIdx],\r\n        inverted: inverted\r\n    }\r\n};\r\nexport function isRelativeHeightPane(pane) {\r\n    return !(pane.unit % 2)\r\n}\r\nexport function normalizePanesHeight(panes) {\r\n    panes.forEach(pane => {\r\n        var height = pane.height;\r\n        var unit = 0;\r\n        var parsedHeight = parseFloat(height) || void 0;\r\n        if (isString(height) && height.indexOf(\"px\") > -1 || isNumeric(height) && height > 1) {\r\n            parsedHeight = _round(parsedHeight);\r\n            unit = 1\r\n        }\r\n        if (!unit && parsedHeight) {\r\n            if (isString(height) && height.indexOf(\"%\") > -1) {\r\n                parsedHeight /= 100;\r\n                unit = 2\r\n            } else if (parsedHeight < 0) {\r\n                parsedHeight = parsedHeight < -1 ? 1 : abs(parsedHeight)\r\n            }\r\n        }\r\n        pane.height = parsedHeight;\r\n        pane.unit = unit\r\n    });\r\n    var relativeHeightPanes = panes.filter(isRelativeHeightPane);\r\n    var weightSum = relativeHeightPanes.reduce((prev, next) => prev + (next.height || 0), 0);\r\n    var weightHeightCount = relativeHeightPanes.length;\r\n    var emptyHeightPanes = relativeHeightPanes.filter(pane => !pane.height);\r\n    var emptyHeightCount = emptyHeightPanes.length;\r\n    if (weightSum < 1 && emptyHeightCount) {\r\n        emptyHeightPanes.forEach(pane => pane.height = (1 - weightSum) / emptyHeightCount)\r\n    } else if (weightSum > 1 || weightSum < 1 && !emptyHeightCount || 1 === weightSum && emptyHeightCount) {\r\n        if (emptyHeightCount) {\r\n            var weightForEmpty = weightSum / weightHeightCount;\r\n            var emptyWeightSum = emptyHeightCount * weightForEmpty;\r\n            relativeHeightPanes.filter(pane => pane.height).forEach(pane => pane.height *= (weightSum - emptyWeightSum) / weightSum);\r\n            emptyHeightPanes.forEach(pane => pane.height = weightForEmpty)\r\n        }\r\n        relativeHeightPanes.forEach(pane => pane.height *= 1 / weightSum)\r\n    }\r\n}\r\nexport function updatePanesCanvases(panes, canvas, rotated) {\r\n    var distributedSpace = 0;\r\n    var padding = PANE_PADDING;\r\n    var paneSpace = rotated ? canvas.width - canvas.left - canvas.right : canvas.height - canvas.top - canvas.bottom;\r\n    var totalCustomSpace = panes.reduce((prev, cur) => prev + (!isRelativeHeightPane(cur) ? cur.height : 0), 0);\r\n    var usefulSpace = paneSpace - padding * (panes.length - 1) - totalCustomSpace;\r\n    var startName = rotated ? \"left\" : \"top\";\r\n    var endName = rotated ? \"right\" : \"bottom\";\r\n    panes.forEach(pane => {\r\n        var calcLength = !isRelativeHeightPane(pane) ? pane.height : _round(pane.height * usefulSpace);\r\n        pane.canvas = pane.canvas || {};\r\n        extend(pane.canvas, canvas);\r\n        pane.canvas[startName] = canvas[startName] + distributedSpace;\r\n        pane.canvas[endName] = canvas[endName] + (paneSpace - calcLength - distributedSpace);\r\n        distributedSpace = distributedSpace + calcLength + padding;\r\n        setCanvasValues(pane.canvas)\r\n    })\r\n}\r\nexport var unique = function(array) {\r\n    var values = {};\r\n    return map(array, (function(item) {\r\n        var result = !values[item] ? item : null;\r\n        values[item] = true;\r\n        return result\r\n    }))\r\n};\r\nexport var getVerticallyShiftedAngularCoords = function(bBox, dy, center) {\r\n    var isPositive = bBox.x + bBox.width / 2 >= center.x;\r\n    var horizontalOffset1 = (isPositive ? bBox.x : bBox.x + bBox.width) - center.x;\r\n    var verticalOffset1 = bBox.y - center.y;\r\n    var verticalOffset2 = verticalOffset1 + dy;\r\n    var horizontalOffset2 = _round(sqrt(horizontalOffset1 * horizontalOffset1 + verticalOffset1 * verticalOffset1 - verticalOffset2 * verticalOffset2));\r\n    var dx = (isPositive ? +horizontalOffset2 : -horizontalOffset2) || horizontalOffset1;\r\n    return {\r\n        x: center.x + (isPositive ? dx : dx - bBox.width),\r\n        y: bBox.y + dy\r\n    }\r\n};\r\nexport function mergeMarginOptions(opt1, opt2) {\r\n    return {\r\n        checkInterval: opt1.checkInterval || opt2.checkInterval,\r\n        size: _max(opt1.size || 0, opt2.size || 0),\r\n        percentStick: opt1.percentStick || opt2.percentStick,\r\n        sizePointNormalState: _max(opt1.sizePointNormalState || 0, opt2.sizePointNormalState || 0)\r\n    }\r\n}\r\nexport function getVizRangeObject(value) {\r\n    if (Array.isArray(value)) {\r\n        return {\r\n            startValue: value[0],\r\n            endValue: value[1]\r\n        }\r\n    } else {\r\n        return value || {}\r\n    }\r\n}\r\nexport function convertVisualRangeObject(visualRange, convertToVisualRange) {\r\n    if (convertToVisualRange) {\r\n        return visualRange\r\n    }\r\n    return [visualRange.startValue, visualRange.endValue]\r\n}\r\nexport function getAddFunction(range, correctZeroLevel) {\r\n    if (\"datetime\" === range.dataType) {\r\n        return function(rangeValue, marginValue) {\r\n            var sign = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;\r\n            return new Date(rangeValue.getTime() + sign * marginValue)\r\n        }\r\n    }\r\n    if (\"logarithmic\" === range.axisType) {\r\n        return function(rangeValue, marginValue) {\r\n            var sign = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;\r\n            var log = getLogExt(rangeValue, range.base) + sign * marginValue;\r\n            return raiseToExt(log, range.base)\r\n        }\r\n    }\r\n    return function(rangeValue, marginValue) {\r\n        var sign = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;\r\n        var newValue = rangeValue + sign * marginValue;\r\n        return correctZeroLevel && newValue * rangeValue <= 0 ? 0 : newValue\r\n    }\r\n}\r\nexport function adjustVisualRange(options, visualRange, wholeRange, dataRange) {\r\n    var minDefined = isDefined(visualRange.startValue);\r\n    var maxDefined = isDefined(visualRange.endValue);\r\n    var nonDiscrete = \"discrete\" !== options.axisType;\r\n    dataRange = dataRange || wholeRange;\r\n    var add = getAddFunction(options, false);\r\n    var min = minDefined ? visualRange.startValue : dataRange.min;\r\n    var max = maxDefined ? visualRange.endValue : dataRange.max;\r\n    var rangeLength = visualRange.length;\r\n    var categories = dataRange.categories;\r\n    if (nonDiscrete && !isDefined(min) && !isDefined(max)) {\r\n        return {\r\n            startValue: min,\r\n            endValue: max\r\n        }\r\n    }\r\n    if (isDefined(rangeLength)) {\r\n        if (nonDiscrete) {\r\n            if (\"datetime\" === options.dataType && !isNumeric(rangeLength)) {\r\n                rangeLength = dateToMilliseconds(rangeLength)\r\n            }\r\n            if (maxDefined && !minDefined || !maxDefined && !minDefined) {\r\n                isDefined(wholeRange.max) && (max = max > wholeRange.max ? wholeRange.max : max);\r\n                min = add(max, rangeLength, -1)\r\n            } else if (minDefined && !maxDefined) {\r\n                isDefined(wholeRange.min) && (min = min < wholeRange.min ? wholeRange.min : min);\r\n                max = add(min, rangeLength)\r\n            }\r\n        } else {\r\n            rangeLength = parseInt(rangeLength);\r\n            if (!isNaN(rangeLength) && isFinite(rangeLength)) {\r\n                rangeLength--;\r\n                if (!maxDefined && !minDefined) {\r\n                    max = categories[categories.length - 1];\r\n                    min = categories[categories.length - 1 - rangeLength]\r\n                } else if (minDefined && !maxDefined) {\r\n                    var categoriesInfo = getCategoriesInfo(categories, min, void 0);\r\n                    max = categoriesInfo.categories[rangeLength]\r\n                } else if (!minDefined && maxDefined) {\r\n                    var _categoriesInfo = getCategoriesInfo(categories, void 0, max);\r\n                    min = _categoriesInfo.categories[_categoriesInfo.categories.length - 1 - rangeLength]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (nonDiscrete) {\r\n        if (isDefined(wholeRange.max) && max > wholeRange.max) {\r\n            max = wholeRange.max\r\n        }\r\n        if (isDefined(wholeRange.min) && min < wholeRange.min) {\r\n            min = wholeRange.min\r\n        }\r\n    }\r\n    return {\r\n        startValue: min,\r\n        endValue: max\r\n    }\r\n}\r\nexport function getLogExt(value, base) {\r\n    var allowNegatives = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n    var linearThreshold = arguments.length > 3 ? arguments[3] : void 0;\r\n    if (!allowNegatives) {\r\n        return getLog(value, base)\r\n    }\r\n    if (0 === value) {\r\n        return 0\r\n    }\r\n    var transformValue = getLog(abs(value), base) - (linearThreshold - 1);\r\n    if (transformValue < 0) {\r\n        return 0\r\n    }\r\n    return adjust(sign(value) * transformValue, Number(pow(base, linearThreshold - 1).toFixed(abs(linearThreshold))))\r\n}\r\nexport function raiseToExt(value, base) {\r\n    var allowNegatives = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n    var linearThreshold = arguments.length > 3 ? arguments[3] : void 0;\r\n    if (!allowNegatives) {\r\n        return raiseTo(value, base)\r\n    }\r\n    if (0 === value) {\r\n        return 0\r\n    }\r\n    var transformValue = raiseTo(abs(value) + (linearThreshold - 1), base);\r\n    if (transformValue < 0) {\r\n        return 0\r\n    }\r\n    return adjust(sign(value) * transformValue, Number(pow(base, linearThreshold).toFixed(abs(linearThreshold))))\r\n}\r\nexport function rangesAreEqual(range, rangeFromOptions) {\r\n    if (Array.isArray(rangeFromOptions)) {\r\n        return range.length === rangeFromOptions.length && range.every((item, i) => valueOf(item) === valueOf(rangeFromOptions[i]))\r\n    } else {\r\n        return valueOf(range.startValue) === valueOf(rangeFromOptions.startValue) && valueOf(range.endValue) === valueOf(rangeFromOptions.endValue)\r\n    }\r\n}\r\nexport function valueOf(value) {\r\n    return value && value.valueOf()\r\n}\r\nexport function pointInCanvas(canvas, x, y) {\r\n    return x >= canvas.left && x <= canvas.right && y >= canvas.top && y <= canvas.bottom\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,IAAI,QACD,yBAAyB;AAChC,SACIC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,QAAQ,QACL,uBAAuB;AAC9B,SACIC,MAAM,QACH,yBAAyB;AAChC,SACIC,IAAI,QACD,2BAA2B;AAClC,SACIC,MAAM,EACNC,IAAI,QACD,uBAAuB;AAC9B,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,aAAa;AAC/B,IAAI;EACAC,EAAE,EAAEA,EAAE;EACNC,IAAI,EAAEA,IAAI;EACVC,GAAG,EAAEA,GAAG;EACRC,GAAG,EAAEA,GAAG;EACRC,KAAK,EAAEA,KAAK;EACZC,IAAI,EAAEA,IAAI;EACVC,GAAG,EAAEA,GAAG;EACRC,IAAI,EAAEA,IAAI;EACVC,KAAK,EAAEA;AACX,CAAC,GAAGC,IAAI;AACR,IAAIC,IAAI,GAAGD,IAAI,CAACE,GAAG;AACnB,IAAIC,IAAI,GAAGH,IAAI,CAACI,GAAG;AACnB,IAAIC,IAAI,GAAGL,IAAI,CAACM,GAAG;AACnB,IAAIC,IAAI,GAAGP,IAAI,CAACQ,GAAG;AACnB,IAAIC,MAAM,GAAGT,IAAI,CAACU,KAAK;AACvB,IAAIC,kBAAkB,GAAGtB,SAAS,CAACsB,kBAAkB;AACrD,IAAIC,eAAe,GAAG,IAAI;AAC1B,IAAIC,UAAU,GAAGtB,EAAE,GAAG,GAAG;AACzB,IAAIuB,MAAM,GAAGC,KAAK;AAClB,IAAIC,OAAO,GAAGC,MAAM;AACpB,IAAIC,IAAI,GAAGC,GAAG;AACd,OAAO,IAAIC,YAAY,GAAG,EAAE;AAC5B,OAAO,IAAIC,MAAM,GAAG,UAASC,KAAK,EAAEC,IAAI,EAAE;EACtC,IAAI,CAACD,KAAK,EAAE;IACR,OAAOJ,IAAI;EACf;EACA,OAAOxB,GAAG,CAAC4B,KAAK,CAAC,GAAG5B,GAAG,CAAC6B,IAAI,CAAC;AACjC,CAAC;AACD,OAAO,IAAIC,gBAAgB,GAAG,UAASF,KAAK,EAAE;EAC1C,OAAOnC,MAAM,CAACkC,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;AACpC,CAAC;AACD,OAAO,IAAIG,OAAO,GAAG,UAASC,KAAK,EAAEH,IAAI,EAAE;EACvC,OAAO1B,GAAG,CAAC0B,IAAI,EAAEG,KAAK,CAAC;AAC3B,CAAC;AACD,OAAO,IAAIC,cAAc,GAAG,UAASC,KAAK,EAAE;EACxC,OAAO,CAACA,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG;AACpC,CAAC;AACD,OAAO,IAAIC,2BAA2B,GAAG,UAASD,KAAK,EAAE;EACrD,OAAO,EAAE,GAAGA,KAAK;AACrB,CAAC;AACD,OAAO,IAAIE,gBAAgB,GAAG,UAASR,KAAK,EAAE;EAC1C,OAAO/B,EAAE,GAAG+B,KAAK,GAAG,GAAG;AAC3B,CAAC;AACD,OAAO,IAAIS,YAAY,GAAG,UAASH,KAAK,EAAE;EACtC,IAAII,cAAc,GAAGF,gBAAgB,CAACF,KAAK,CAAC;EAC5C,OAAO;IACHtB,GAAG,EAAED,IAAI,CAAC2B,cAAc,CAAC;IACzBxB,GAAG,EAAED,IAAI,CAACyB,cAAc;EAC5B,CAAC;AACL,CAAC;AACD,IAAIC,uBAAuB,GAAG,KAAK;AACnC,OAAO,IAAIC,WAAW,GAAG,UAASC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC9C,IAAIC,KAAK,GAAGF,EAAE,GAAGF,EAAE;EACnB,IAAIK,KAAK,GAAGF,EAAE,GAAGF,EAAE;EACnB,OAAOtC,IAAI,CAAC0C,KAAK,GAAGA,KAAK,GAAGD,KAAK,GAAGA,KAAK,CAAC;AAC9C,CAAC;AACD,OAAO,IAAIE,eAAe,GAAG,UAASC,MAAM,EAAE;EAC1C,IAAIC,CAAC,GAAGlD,GAAG,CAACiD,MAAM,CAAC;EACnB,IAAIE,EAAE;EACN,IAAI,CAAC9B,MAAM,CAAC6B,CAAC,CAAC,EAAE;IACZ,IAAIA,CAAC,GAAG,CAAC,EAAE;MACPA,CAAC,GAAGjD,GAAG,CAACiD,CAAC,CAAC,GAAGnD,IAAI;MACjBoD,EAAE,GAAGhD,IAAI,CAAC+C,CAAC,CAAC;MACZ,OAAOC,EAAE,GAAGD,CAAC,GAAGV,uBAAuB,GAAGW,EAAE,GAAGjD,KAAK,CAACgD,CAAC,CAAC;IAC3D;IACA,OAAO,CAAC;EACZ;EACA,OAAOzB,IAAI;AACf,CAAC;AACD,OAAO,IAAI2B,oBAAoB,GAAG,UAASC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAC1D,IAAIC,KAAK,GAAG9C,IAAI,CAACsC,eAAe,CAACK,KAAK,CAAC,EAAEL,eAAe,CAACM,GAAG,CAAC,CAAC;EAC9D,IAAIG,SAAS,GAAG,CAACT,eAAe,CAAChD,GAAG,CAACsD,GAAG,GAAGD,KAAK,CAAC,GAAGE,KAAK,CAAC;EAC1D,IAAIG,MAAM;EACV,IAAI,CAACrC,MAAM,CAACmC,KAAK,CAAC,IAAI,CAACnC,MAAM,CAACoC,SAAS,CAAC,EAAE;IACtC,IAAIzD,GAAG,CAACwD,KAAK,CAAC,IAAI,CAAC,EAAE;MACjBE,MAAM,GAAG,YAAY;MACrBD,SAAS,GAAG,CAAC,KAAKA,SAAS,GAAG,CAAC,CAAC;MAChCA,SAAS,GAAG,CAAC,KAAKA,SAAS,GAAG,CAAC,CAAC;IACpC,CAAC,MAAM;MACHC,MAAM,GAAG,aAAa;MACtBD,SAAS,IAAID,KAAK,GAAG,CAAC;MACtBC,SAAS,GAAG,CAAC,KAAKA,SAAS,GAAG,CAAC,CAAC;IACpC;IACA,OAAO;MACHE,IAAI,EAAED,MAAM;MACZD,SAAS,EAAEA;IACf,CAAC;EACL;EACA,OAAO,IAAI;AACf,CAAC;AACD,OAAO,IAAIG,UAAU,GAAG,UAAS/B,KAAK,EAAE4B,SAAS,EAAE;EAC/C,IAAIA,SAAS,GAAG,EAAE,EAAE;IAChBA,SAAS,GAAG,EAAE;EAClB;EACA,IAAIrE,SAAS,CAACyC,KAAK,CAAC,EAAE;IAClB,IAAIxC,aAAa,CAACwC,KAAK,CAAC,EAAE;MACtB,OAAON,OAAO,CAACM,KAAK,CAACgC,aAAa,CAACJ,SAAS,CAAC,CAAC;IAClD,CAAC,MAAM;MACH,OAAOlC,OAAO,CAACM,KAAK,CAACiC,OAAO,CAACL,SAAS,CAAC,CAAC;IAC5C;EACJ;AACJ,CAAC;AACD,OAAO,IAAIM,QAAQ,GAAG,UAASlC,KAAK,EAAE;EAClC,OAAOA,KAAK,CAACgC,aAAa,EAAE,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AACD,OAAO,SAASC,GAAG,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACjC,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,GAAG,GAAGH,KAAK,CAACI,MAAM;EACtB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI1C,KAAK;EACT,OAAOuC,CAAC,GAAGC,GAAG,EAAE;IACZxC,KAAK,GAAGsC,QAAQ,CAACD,KAAK,CAACE,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC7B,IAAI,IAAI,KAAKvC,KAAK,EAAE;MAChB0C,MAAM,CAACC,IAAI,CAAC3C,KAAK,CAAC;IACtB;IACAuC,CAAC,EAAE;EACP;EACA,OAAOG,MAAM;AACjB;AAEA,SAASE,YAAY,CAACC,MAAM,EAAEC,IAAI,EAAE;EAChC,OAAOV,GAAG,CAACU,IAAI,EAAEC,GAAG,IAAIF,MAAM,CAACE,GAAG,CAAC,GAAGF,MAAM,CAACE,GAAG,CAAC,GAAG,IAAI,CAAC;AAC7D;AAEA,SAASC,cAAc,CAACH,MAAM,EAAEC,IAAI,EAAEG,YAAY,EAAEC,QAAQ,EAAE;EAC1D,IAAIC,GAAG,GAAGD,QAAQ;EAClBtF,IAAI,CAACkF,IAAI,EAAE,CAACM,CAAC,EAAEL,GAAG,KAAK;IACnB,IAAIF,MAAM,CAACE,GAAG,CAAC,EAAE;MACbF,MAAM,CAACE,GAAG,CAAC,IAAIE,YAAY;MAC3BE,GAAG,IAAIF,YAAY;IACvB;EACJ,CAAC,CAAC;EACF,OAAOE,GAAG;AACd;AACA,OAAO,SAASE,aAAa,CAACrD,KAAK,EAAE;EACjC,OAAOsD,MAAM,CAACtD,KAAK,CAAC,CAACuD,WAAW,EAAE;AACtC;AACA,OAAO,SAASC,eAAe,CAACC,MAAM,EAAE;EACpC,IAAIA,MAAM,EAAE;IACRA,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACE,GAAG;IAC/BF,MAAM,CAACG,cAAc,GAAGH,MAAM,CAACI,MAAM;IACrCJ,MAAM,CAACK,YAAY,GAAGL,MAAM,CAACM,IAAI;IACjCN,MAAM,CAACO,aAAa,GAAGP,MAAM,CAACQ,KAAK;EACvC;EACA,OAAOR,MAAM;AACjB;AAEA,SAASS,kBAAkB,CAAClE,KAAK,EAAE;EAC/B,OAAO,CAACV,eAAe,GAAGU,KAAK,IAAIA,KAAK,GAAG,CAACV,eAAe,GAAGU,KAAK,GAAG,CAAC;AAC3E;AACA,OAAO,SAASmE,aAAa,CAACC,IAAI,EAAE;EAChC,IAAIC,EAAE,GAAGH,kBAAkB,CAAC7F,KAAK,CAAC+F,IAAI,CAACE,CAAC,CAAC,CAAC;EAC1C,IAAIC,EAAE,GAAGL,kBAAkB,CAAC7F,KAAK,CAAC+F,IAAI,CAACI,CAAC,CAAC,CAAC;EAC1C,IAAIC,EAAE,GAAGP,kBAAkB,CAAC5F,IAAI,CAAC8F,IAAI,CAACM,KAAK,GAAGN,IAAI,CAACE,CAAC,CAAC,CAAC;EACtD,IAAIK,EAAE,GAAGT,kBAAkB,CAAC5F,IAAI,CAAC8F,IAAI,CAACQ,MAAM,GAAGR,IAAI,CAACI,CAAC,CAAC,CAAC;EACvD,IAAI9B,MAAM,GAAG;IACT4B,CAAC,EAAED,EAAE;IACLG,CAAC,EAAED,EAAE;IACLG,KAAK,EAAED,EAAE,GAAGJ,EAAE;IACdO,MAAM,EAAED,EAAE,GAAGJ;EACjB,CAAC;EACD7B,MAAM,CAACmC,OAAO,GAAG,CAACnC,MAAM,CAAC4B,CAAC,IAAI,CAAC5B,MAAM,CAAC8B,CAAC,IAAI,CAAC9B,MAAM,CAACgC,KAAK,IAAI,CAAChC,MAAM,CAACkC,MAAM;EAC1E,OAAOlC,MAAM;AACjB;AACA,OAAO,SAASoC,UAAU,CAACV,IAAI,EAAEW,MAAM,EAAEzE,KAAK,EAAE;EAC5C,IAAItB,GAAG,GAAGU,OAAO,CAACX,IAAI,CAACuB,KAAK,GAAGf,UAAU,CAAC,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC;EACtD,IAAI/C,GAAG,GAAGQ,OAAO,CAACT,IAAI,CAACqB,KAAK,GAAGf,UAAU,CAAC,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC;EACtD,IAAI+C,EAAE,GAAGZ,IAAI,CAACM,KAAK,GAAG,CAAC;EACvB,IAAIO,EAAE,GAAGb,IAAI,CAACQ,MAAM,GAAG,CAAC;EACxB,IAAIM,OAAO,GAAGd,IAAI,CAACE,CAAC,GAAGU,EAAE;EACzB,IAAIG,OAAO,GAAGf,IAAI,CAACI,CAAC,GAAGS,EAAE;EACzB,IAAIG,GAAG,GAAGjH,GAAG,CAAC6G,EAAE,GAAGhG,GAAG,CAAC,GAAGb,GAAG,CAAC8G,EAAE,GAAG/F,GAAG,CAAC;EACvC,IAAImG,GAAG,GAAGlH,GAAG,CAAC6G,EAAE,GAAG9F,GAAG,CAAC,GAAGf,GAAG,CAAC8G,EAAE,GAAGjG,GAAG,CAAC;EACvC,IAAIsG,QAAQ,GAAGP,MAAM,CAAC,CAAC,CAAC,GAAG,CAACG,OAAO,GAAGH,MAAM,CAAC,CAAC,CAAC,IAAI/F,GAAG,GAAG,CAACmG,OAAO,GAAGJ,MAAM,CAAC,CAAC,CAAC,IAAI7F,GAAG;EACpF,IAAIqG,QAAQ,GAAGR,MAAM,CAAC,CAAC,CAAC,GAAG,CAACG,OAAO,GAAGH,MAAM,CAAC,CAAC,CAAC,IAAI7F,GAAG,GAAG,CAACiG,OAAO,GAAGJ,MAAM,CAAC,CAAC,CAAC,IAAI/F,GAAG;EACpF,OAAOmF,aAAa,CAAC;IACjBG,CAAC,EAAEgB,QAAQ,GAAGF,GAAG;IACjBZ,CAAC,EAAEe,QAAQ,GAAGF,GAAG;IACjBX,KAAK,EAAE,CAAC,GAAGU,GAAG;IACdR,MAAM,EAAE,CAAC,GAAGS;EAChB,CAAC,CAAC;AACN;AACA,OAAO,IAAIG,YAAY,GAAG,UAAS3C,MAAM,EAAEC,IAAI,EAAEI,QAAQ,EAAE;EACvD,IAAIuC,SAAS;EACb,GAAG;IACCA,SAAS,GAAG7C,YAAY,CAACC,MAAM,EAAEC,IAAI,CAAC;IACtC2C,SAAS,CAAC9C,IAAI,CAACrE,IAAI,CAAC4E,QAAQ,GAAGuC,SAAS,CAAChD,MAAM,CAAC,CAAC;IACjDS,QAAQ,GAAGF,cAAc,CAACH,MAAM,EAAEC,IAAI,EAAEnE,IAAI,CAAC+G,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC,EAAEvC,QAAQ,CAAC;EAClF,CAAC,QAAQA,QAAQ,GAAG,CAAC,IAAIuC,SAAS,CAAChD,MAAM,GAAG,CAAC;EAC7C,OAAOS,QAAQ;AACnB,CAAC;AACD,OAAO,IAAIyC,WAAW,GAAG,UAAS3F,KAAK,EAAE4F,YAAY,EAAE;EACnD,OAAO,KAAK,CAAC,KAAK5F,KAAK,GAAGA,KAAK,GAAG4F,YAAY;AAClD,CAAC;AACD,OAAO,IAAIC,UAAU,GAAG,UAASC,MAAM,EAAE;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAIxD,CAAC;EACL,IAAIyD,EAAE;EACN,KAAKzD,CAAC,GAAG,CAAC,EAAEyD,EAAE,GAAGF,MAAM,CAACrD,MAAM,EAAEF,CAAC,GAAGyD,EAAE,EAAE,EAAEzD,CAAC,EAAE;IACzCwD,MAAM,CAAC1C,aAAa,CAACyC,MAAM,CAACvD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EACxC;EACA,OAAO,UAASvC,KAAK,EAAE4F,YAAY,EAAE;IACjC,IAAIK,MAAM,GAAG5C,aAAa,CAACrD,KAAK,CAAC;IACjC,OAAO+F,MAAM,CAACE,MAAM,CAAC,GAAGA,MAAM,GAAGL,YAAY;EACjD,CAAC;AACL,CAAC;AACD,OAAO,IAAIM,gBAAgB,GAAG,UAASC,OAAO,EAAE;EAC5C,IAAIC,WAAW,GAAG,CAAC,CAAC;EACpBxI,IAAI,CAACuI,OAAO,IAAI,CAAC,CAAC,EAAG,UAASpD,GAAG,EAAE/C,KAAK,EAAE;IACtC,IAAI,aAAa,CAACqG,IAAI,CAACtD,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,SAAS,KAAKA,GAAG,EAAE;MACxD/C,KAAK,GAAG,IAAI;IAChB,CAAC,MAAM,IAAI,OAAO,KAAK+C,GAAG,EAAE;MACxBA,GAAG,GAAG,MAAM;MACZ,IAAI,SAAS,IAAIoD,OAAO,EAAE;QACtB,IAAIG,KAAK,GAAG,IAAItI,KAAK,CAACgC,KAAK,CAAC;QAC5BA,KAAK,GAAG,OAAO,CAACuG,MAAM,CAACD,KAAK,CAACE,CAAC,EAAE,GAAG,CAAC,CAACD,MAAM,CAACD,KAAK,CAACG,CAAC,EAAE,GAAG,CAAC,CAACF,MAAM,CAACD,KAAK,CAACI,CAAC,EAAE,GAAG,CAAC,CAACH,MAAM,CAACJ,OAAO,CAACQ,OAAO,EAAE,GAAG,CAAC;MAC/G;IACJ,CAAC,MAAM;MACH5D,GAAG,GAAG,OAAO,GAAGA,GAAG;IACvB;IACAqD,WAAW,CAACrD,GAAG,CAAC,GAAG/C,KAAK;EAC5B,CAAC,CAAE;EACH,OAAOoG,WAAW;AACtB,CAAC;AACD,OAAO,SAASQ,gBAAgB,CAACC,YAAY,EAAEC,UAAU,EAAExG,KAAK,EAAEyG,MAAM,EAAE;EACtE,IAAIC,gBAAgB,GAAGD,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC;EAC9CzG,KAAK,GAAGhD,SAAS,CAACgD,KAAK,CAAC,GAAGA,KAAK,GAAGwG,UAAU,GAAG,EAAE,GAAG,CAAC;EACtD,IAAIG,MAAM,GAAGxG,YAAY,CAACH,KAAK,CAAC;EAChC,OAAO;IACHgE,CAAC,EAAEnF,MAAM,CAAC0H,YAAY,CAACvC,CAAC,GAAG0C,gBAAgB,GAAGC,MAAM,CAACjI,GAAG,CAAC;IACzDwF,CAAC,EAAErF,MAAM,CAAC0H,YAAY,CAACrC,CAAC,GAAGwC,gBAAgB,GAAGC,MAAM,CAAC/H,GAAG;EAC5D,CAAC;AACL;AACA,OAAO,IAAIgI,gBAAgB,GAAG,UAASL,YAAY,EAAEvC,CAAC,EAAEE,CAAC,EAAE;EACvD,IAAIuC,MAAM,GAAGnG,WAAW,CAACiG,YAAY,CAACvC,CAAC,EAAEuC,YAAY,CAACrC,CAAC,EAAEF,CAAC,EAAEE,CAAC,CAAC;EAC9D,IAAIlE,KAAK,GAAG7B,KAAK,CAAC+F,CAAC,GAAGqC,YAAY,CAACrC,CAAC,EAAEF,CAAC,GAAGuC,YAAY,CAACvC,CAAC,CAAC;EACzD,OAAO;IACH6C,GAAG,EAAEhI,MAAM,CAACkB,cAAc,CAAC,GAAG,GAAGC,KAAK,GAAGrC,EAAE,CAAC,CAAC;IAC7CuI,CAAC,EAAErH,MAAM,CAAC4H,MAAM;EACpB,CAAC;AACL,CAAC;AACD,OAAO,IAAIK,qBAAqB,GAAG,UAASC,cAAc,EAAEC,KAAK,EAAE;EAC/D,IAAIC,eAAe,GAAG9J,UAAU,CAAC4J,cAAc,CAACE,eAAe,CAAC,GAAGF,cAAc,CAACE,eAAe,GAAGlK,IAAI;EACxG,IAAImK,SAAS,GAAGH,cAAc,CAACG,SAAS;EACxC,IAAIC,eAAe,GAAG,CAAC,CAAC;EACxB,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAIC,MAAM;EACV,IAAIpF,CAAC,GAAG,CAAC;EACT,IAAIE,MAAM;EACV,IAAImF,IAAI;EACRN,KAAK,GAAGA,KAAK,IAAI,EAAE;EACnB,KAAK7E,MAAM,GAAG6E,KAAK,CAAC7E,MAAM,EAAEF,CAAC,GAAGE,MAAM,EAAEF,CAAC,EAAE,EAAE;IACzCqF,IAAI,GAAGN,KAAK,CAAC/E,CAAC,CAAC;IACf,IAAIiF,SAAS,IAAII,IAAI,EAAE;MACnBD,MAAM,GAAGF,eAAe,CAACG,IAAI,CAACJ,SAAS,CAAC,CAAC;MACzC,IAAI,CAACG,MAAM,EAAE;QACTA,MAAM,GAAGF,eAAe,CAACG,IAAI,CAACJ,SAAS,CAAC,CAAC,GAAG;UACxCK,IAAI,EAAED,IAAI,CAACJ,SAAS,CAAC;UACrBM,cAAc,EAAEF,IAAI,CAACJ,SAAS;QAClC,CAAC;QACDE,WAAW,CAAC/E,IAAI,CAACgF,MAAM,CAACE,IAAI,CAAC;MACjC;IACJ;EACJ;EACA,OAAOzF,GAAG,CAACsF,WAAW,EAAG,UAASK,WAAW,EAAE;IAC3C,IAAIC,KAAK,GAAGP,eAAe,CAACM,WAAW,CAAC;IACxC,OAAOpK,MAAM,CAACqK,KAAK,EAAET,eAAe,CAACU,IAAI,CAAC,IAAI,EAAED,KAAK,CAACH,IAAI,CAAC,CAAC;EAChE,CAAC,CAAE;AACP,CAAC;AACD,OAAO,IAAIK,iBAAiB,GAAG,UAASC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EACtE,IAAI,CAAC,KAAKF,UAAU,CAAC1F,MAAM,EAAE;IACzB,OAAO;MACH0F,UAAU,EAAE;IAChB,CAAC;EACL;EACAC,UAAU,GAAG9K,SAAS,CAAC8K,UAAU,CAAC,GAAGA,UAAU,GAAGD,UAAU,CAAC,CAAC,CAAC;EAC/DE,QAAQ,GAAG/K,SAAS,CAAC+K,QAAQ,CAAC,GAAGA,QAAQ,GAAGF,UAAU,CAACA,UAAU,CAAC1F,MAAM,GAAG,CAAC,CAAC;EAC7E,IAAI6F,eAAe,GAAGlG,GAAG,CAAC+F,UAAU,EAAEI,QAAQ,IAAI,IAAI,KAAKA,QAAQ,IAAI,KAAK,CAAC,KAAKA,QAAQ,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACC,OAAO,EAAE,CAAC;EACzH,IAAIC,eAAe,GAAGH,eAAe,CAACI,OAAO,CAACN,UAAU,CAACI,OAAO,EAAE,CAAC;EACnE,IAAIG,aAAa,GAAGL,eAAe,CAACI,OAAO,CAACL,QAAQ,CAACG,OAAO,EAAE,CAAC;EAC/D,IAAII,OAAO;EACX,IAAIC,QAAQ,GAAG,KAAK;EACpBJ,eAAe,GAAG,CAAC,KAAKA,eAAe,GAAG,CAAC,CAAC;EAC5CE,aAAa,GAAG,CAAC,KAAKA,aAAa,GAAGR,UAAU,CAAC1F,MAAM,GAAG,CAAC,CAAC;EAC5D,IAAIkG,aAAa,GAAGF,eAAe,EAAE;IACjCG,OAAO,GAAGD,aAAa;IACvBA,aAAa,GAAGF,eAAe;IAC/BA,eAAe,GAAGG,OAAO;IACzBC,QAAQ,GAAG,IAAI;EACnB;EACA,IAAIC,iBAAiB,GAAGX,UAAU,CAACY,KAAK,CAACN,eAAe,EAAEE,aAAa,GAAG,CAAC,CAAC;EAC5E,IAAIK,OAAO,GAAGF,iBAAiB,CAACrG,MAAM,GAAG,CAAC;EAC1C,OAAO;IACH0F,UAAU,EAAEW,iBAAiB;IAC7BtH,KAAK,EAAEsH,iBAAiB,CAACD,QAAQ,GAAGG,OAAO,GAAG,CAAC,CAAC;IAChDvH,GAAG,EAAEqH,iBAAiB,CAACD,QAAQ,GAAG,CAAC,GAAGG,OAAO,CAAC;IAC9CH,QAAQ,EAAEA;EACd,CAAC;AACL,CAAC;AACD,OAAO,SAASI,oBAAoB,CAACC,IAAI,EAAE;EACvC,OAAO,EAAEA,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;AAC3B;AACA,OAAO,SAASC,oBAAoB,CAACC,KAAK,EAAE;EACxCA,KAAK,CAACC,OAAO,CAACJ,IAAI,IAAI;IAClB,IAAItE,MAAM,GAAGsE,IAAI,CAACtE,MAAM;IACxB,IAAIuE,IAAI,GAAG,CAAC;IACZ,IAAII,YAAY,GAAGC,UAAU,CAAC5E,MAAM,CAAC,IAAI,KAAK,CAAC;IAC/C,IAAIlH,QAAQ,CAACkH,MAAM,CAAC,IAAIA,MAAM,CAAC8D,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAInL,SAAS,CAACqH,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;MAClF2E,YAAY,GAAGpK,MAAM,CAACoK,YAAY,CAAC;MACnCJ,IAAI,GAAG,CAAC;IACZ;IACA,IAAI,CAACA,IAAI,IAAII,YAAY,EAAE;MACvB,IAAI7L,QAAQ,CAACkH,MAAM,CAAC,IAAIA,MAAM,CAAC8D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QAC9Ca,YAAY,IAAI,GAAG;QACnBJ,IAAI,GAAG,CAAC;MACZ,CAAC,MAAM,IAAII,YAAY,GAAG,CAAC,EAAE;QACzBA,YAAY,GAAGA,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGpL,GAAG,CAACoL,YAAY,CAAC;MAC5D;IACJ;IACAL,IAAI,CAACtE,MAAM,GAAG2E,YAAY;IAC1BL,IAAI,CAACC,IAAI,GAAGA,IAAI;EACpB,CAAC,CAAC;EACF,IAAIM,mBAAmB,GAAGJ,KAAK,CAACK,MAAM,CAACT,oBAAoB,CAAC;EAC5D,IAAIU,SAAS,GAAGF,mBAAmB,CAACG,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,IAAIC,IAAI,CAAClF,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACxF,IAAImF,iBAAiB,GAAGN,mBAAmB,CAAChH,MAAM;EAClD,IAAIuH,gBAAgB,GAAGP,mBAAmB,CAACC,MAAM,CAACR,IAAI,IAAI,CAACA,IAAI,CAACtE,MAAM,CAAC;EACvE,IAAIqF,gBAAgB,GAAGD,gBAAgB,CAACvH,MAAM;EAC9C,IAAIkH,SAAS,GAAG,CAAC,IAAIM,gBAAgB,EAAE;IACnCD,gBAAgB,CAACV,OAAO,CAACJ,IAAI,IAAIA,IAAI,CAACtE,MAAM,GAAG,CAAC,CAAC,GAAG+E,SAAS,IAAIM,gBAAgB,CAAC;EACtF,CAAC,MAAM,IAAIN,SAAS,GAAG,CAAC,IAAIA,SAAS,GAAG,CAAC,IAAI,CAACM,gBAAgB,IAAI,CAAC,KAAKN,SAAS,IAAIM,gBAAgB,EAAE;IACnG,IAAIA,gBAAgB,EAAE;MAClB,IAAIC,cAAc,GAAGP,SAAS,GAAGI,iBAAiB;MAClD,IAAII,cAAc,GAAGF,gBAAgB,GAAGC,cAAc;MACtDT,mBAAmB,CAACC,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACtE,MAAM,CAAC,CAAC0E,OAAO,CAACJ,IAAI,IAAIA,IAAI,CAACtE,MAAM,IAAI,CAAC+E,SAAS,GAAGQ,cAAc,IAAIR,SAAS,CAAC;MACxHK,gBAAgB,CAACV,OAAO,CAACJ,IAAI,IAAIA,IAAI,CAACtE,MAAM,GAAGsF,cAAc,CAAC;IAClE;IACAT,mBAAmB,CAACH,OAAO,CAACJ,IAAI,IAAIA,IAAI,CAACtE,MAAM,IAAI,CAAC,GAAG+E,SAAS,CAAC;EACrE;AACJ;AACA,OAAO,SAASS,mBAAmB,CAACf,KAAK,EAAE5F,MAAM,EAAE4G,OAAO,EAAE;EACxD,IAAIC,gBAAgB,GAAG,CAAC;EACxB,IAAIC,OAAO,GAAGzK,YAAY;EAC1B,IAAI0K,SAAS,GAAGH,OAAO,GAAG5G,MAAM,CAACiB,KAAK,GAAGjB,MAAM,CAACM,IAAI,GAAGN,MAAM,CAACQ,KAAK,GAAGR,MAAM,CAACmB,MAAM,GAAGnB,MAAM,CAACE,GAAG,GAAGF,MAAM,CAACI,MAAM;EAChH,IAAI4G,gBAAgB,GAAGpB,KAAK,CAACO,MAAM,CAAC,CAACC,IAAI,EAAEa,GAAG,KAAKb,IAAI,IAAI,CAACZ,oBAAoB,CAACyB,GAAG,CAAC,GAAGA,GAAG,CAAC9F,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3G,IAAI+F,WAAW,GAAGH,SAAS,GAAGD,OAAO,IAAIlB,KAAK,CAAC5G,MAAM,GAAG,CAAC,CAAC,GAAGgI,gBAAgB;EAC7E,IAAIG,SAAS,GAAGP,OAAO,GAAG,MAAM,GAAG,KAAK;EACxC,IAAIQ,OAAO,GAAGR,OAAO,GAAG,OAAO,GAAG,QAAQ;EAC1ChB,KAAK,CAACC,OAAO,CAACJ,IAAI,IAAI;IAClB,IAAI4B,UAAU,GAAG,CAAC7B,oBAAoB,CAACC,IAAI,CAAC,GAAGA,IAAI,CAACtE,MAAM,GAAGzF,MAAM,CAAC+J,IAAI,CAACtE,MAAM,GAAG+F,WAAW,CAAC;IAC9FzB,IAAI,CAACzF,MAAM,GAAGyF,IAAI,CAACzF,MAAM,IAAI,CAAC,CAAC;IAC/B9F,MAAM,CAACuL,IAAI,CAACzF,MAAM,EAAEA,MAAM,CAAC;IAC3ByF,IAAI,CAACzF,MAAM,CAACmH,SAAS,CAAC,GAAGnH,MAAM,CAACmH,SAAS,CAAC,GAAGN,gBAAgB;IAC7DpB,IAAI,CAACzF,MAAM,CAACoH,OAAO,CAAC,GAAGpH,MAAM,CAACoH,OAAO,CAAC,IAAIL,SAAS,GAAGM,UAAU,GAAGR,gBAAgB,CAAC;IACpFA,gBAAgB,GAAGA,gBAAgB,GAAGQ,UAAU,GAAGP,OAAO;IAC1D/G,eAAe,CAAC0F,IAAI,CAACzF,MAAM,CAAC;EAChC,CAAC,CAAC;AACN;AACA,OAAO,IAAIsH,MAAM,GAAG,UAAS1I,KAAK,EAAE;EAChC,IAAIyD,MAAM,GAAG,CAAC,CAAC;EACf,OAAO1D,GAAG,CAACC,KAAK,EAAG,UAAS2I,IAAI,EAAE;IAC9B,IAAItI,MAAM,GAAG,CAACoD,MAAM,CAACkF,IAAI,CAAC,GAAGA,IAAI,GAAG,IAAI;IACxClF,MAAM,CAACkF,IAAI,CAAC,GAAG,IAAI;IACnB,OAAOtI,MAAM;EACjB,CAAC,CAAE;AACP,CAAC;AACD,OAAO,IAAIuI,iCAAiC,GAAG,UAAS7G,IAAI,EAAE8G,EAAE,EAAEnG,MAAM,EAAE;EACtE,IAAIoG,UAAU,GAAG/G,IAAI,CAACE,CAAC,GAAGF,IAAI,CAACM,KAAK,GAAG,CAAC,IAAIK,MAAM,CAACT,CAAC;EACpD,IAAI8G,iBAAiB,GAAG,CAACD,UAAU,GAAG/G,IAAI,CAACE,CAAC,GAAGF,IAAI,CAACE,CAAC,GAAGF,IAAI,CAACM,KAAK,IAAIK,MAAM,CAACT,CAAC;EAC9E,IAAI+G,eAAe,GAAGjH,IAAI,CAACI,CAAC,GAAGO,MAAM,CAACP,CAAC;EACvC,IAAI8G,eAAe,GAAGD,eAAe,GAAGH,EAAE;EAC1C,IAAIK,iBAAiB,GAAGpM,MAAM,CAACX,IAAI,CAAC4M,iBAAiB,GAAGA,iBAAiB,GAAGC,eAAe,GAAGA,eAAe,GAAGC,eAAe,GAAGA,eAAe,CAAC,CAAC;EACnJ,IAAIE,EAAE,GAAG,CAACL,UAAU,GAAG,CAACI,iBAAiB,GAAG,CAACA,iBAAiB,KAAKH,iBAAiB;EACpF,OAAO;IACH9G,CAAC,EAAES,MAAM,CAACT,CAAC,IAAI6G,UAAU,GAAGK,EAAE,GAAGA,EAAE,GAAGpH,IAAI,CAACM,KAAK,CAAC;IACjDF,CAAC,EAAEJ,IAAI,CAACI,CAAC,GAAG0G;EAChB,CAAC;AACL,CAAC;AACD,OAAO,SAASO,kBAAkB,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC3C,OAAO;IACHC,aAAa,EAAEF,IAAI,CAACE,aAAa,IAAID,IAAI,CAACC,aAAa;IACvDC,IAAI,EAAEhN,IAAI,CAAC6M,IAAI,CAACG,IAAI,IAAI,CAAC,EAAEF,IAAI,CAACE,IAAI,IAAI,CAAC,CAAC;IAC1CC,YAAY,EAAEJ,IAAI,CAACI,YAAY,IAAIH,IAAI,CAACG,YAAY;IACpDC,oBAAoB,EAAElN,IAAI,CAAC6M,IAAI,CAACK,oBAAoB,IAAI,CAAC,EAAEJ,IAAI,CAACI,oBAAoB,IAAI,CAAC;EAC7F,CAAC;AACL;AACA,OAAO,SAASC,iBAAiB,CAAChM,KAAK,EAAE;EACrC,IAAIiM,KAAK,CAACC,OAAO,CAAClM,KAAK,CAAC,EAAE;IACtB,OAAO;MACHoI,UAAU,EAAEpI,KAAK,CAAC,CAAC,CAAC;MACpBqI,QAAQ,EAAErI,KAAK,CAAC,CAAC;IACrB,CAAC;EACL,CAAC,MAAM;IACH,OAAOA,KAAK,IAAI,CAAC,CAAC;EACtB;AACJ;AACA,OAAO,SAASmM,wBAAwB,CAACC,WAAW,EAAEC,oBAAoB,EAAE;EACxE,IAAIA,oBAAoB,EAAE;IACtB,OAAOD,WAAW;EACtB;EACA,OAAO,CAACA,WAAW,CAAChE,UAAU,EAAEgE,WAAW,CAAC/D,QAAQ,CAAC;AACzD;AACA,OAAO,SAASiE,cAAc,CAACC,KAAK,EAAEC,gBAAgB,EAAE;EACpD,IAAI,UAAU,KAAKD,KAAK,CAACE,QAAQ,EAAE;IAC/B,OAAO,UAASC,UAAU,EAAEC,WAAW,EAAE;MACrC,IAAI7O,IAAI,GAAG8O,SAAS,CAACnK,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKmK,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MAC7E,OAAO,IAAIC,IAAI,CAACH,UAAU,CAACI,OAAO,EAAE,GAAGhP,IAAI,GAAG6O,WAAW,CAAC;IAC9D,CAAC;EACL;EACA,IAAI,aAAa,KAAKJ,KAAK,CAACQ,QAAQ,EAAE;IAClC,OAAO,UAASL,UAAU,EAAEC,WAAW,EAAE;MACrC,IAAI7O,IAAI,GAAG8O,SAAS,CAACnK,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKmK,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MAC7E,IAAIxO,GAAG,GAAG4O,SAAS,CAACN,UAAU,EAAEH,KAAK,CAACtM,IAAI,CAAC,GAAGnC,IAAI,GAAG6O,WAAW;MAChE,OAAOM,UAAU,CAAC7O,GAAG,EAAEmO,KAAK,CAACtM,IAAI,CAAC;IACtC,CAAC;EACL;EACA,OAAO,UAASyM,UAAU,EAAEC,WAAW,EAAE;IACrC,IAAI7O,IAAI,GAAG8O,SAAS,CAACnK,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKmK,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;IAC7E,IAAIM,QAAQ,GAAGR,UAAU,GAAG5O,IAAI,GAAG6O,WAAW;IAC9C,OAAOH,gBAAgB,IAAIU,QAAQ,GAAGR,UAAU,IAAI,CAAC,GAAG,CAAC,GAAGQ,QAAQ;EACxE,CAAC;AACL;AACA,OAAO,SAASC,iBAAiB,CAAChH,OAAO,EAAEiG,WAAW,EAAEgB,UAAU,EAAEC,SAAS,EAAE;EAC3E,IAAIC,UAAU,GAAGhQ,SAAS,CAAC8O,WAAW,CAAChE,UAAU,CAAC;EAClD,IAAImF,UAAU,GAAGjQ,SAAS,CAAC8O,WAAW,CAAC/D,QAAQ,CAAC;EAChD,IAAImF,WAAW,GAAG,UAAU,KAAKrH,OAAO,CAAC4G,QAAQ;EACjDM,SAAS,GAAGA,SAAS,IAAID,UAAU;EACnC,IAAIK,GAAG,GAAGnB,cAAc,CAACnG,OAAO,EAAE,KAAK,CAAC;EACxC,IAAIvH,GAAG,GAAG0O,UAAU,GAAGlB,WAAW,CAAChE,UAAU,GAAGiF,SAAS,CAACzO,GAAG;EAC7D,IAAIE,GAAG,GAAGyO,UAAU,GAAGnB,WAAW,CAAC/D,QAAQ,GAAGgF,SAAS,CAACvO,GAAG;EAC3D,IAAI4O,WAAW,GAAGtB,WAAW,CAAC3J,MAAM;EACpC,IAAI0F,UAAU,GAAGkF,SAAS,CAAClF,UAAU;EACrC,IAAIqF,WAAW,IAAI,CAAClQ,SAAS,CAACsB,GAAG,CAAC,IAAI,CAACtB,SAAS,CAACwB,GAAG,CAAC,EAAE;IACnD,OAAO;MACHsJ,UAAU,EAAExJ,GAAG;MACfyJ,QAAQ,EAAEvJ;IACd,CAAC;EACL;EACA,IAAIxB,SAAS,CAACoQ,WAAW,CAAC,EAAE;IACxB,IAAIF,WAAW,EAAE;MACb,IAAI,UAAU,KAAKrH,OAAO,CAACsG,QAAQ,IAAI,CAAClP,SAAS,CAACmQ,WAAW,CAAC,EAAE;QAC5DA,WAAW,GAAGrO,kBAAkB,CAACqO,WAAW,CAAC;MACjD;MACA,IAAIH,UAAU,IAAI,CAACD,UAAU,IAAI,CAACC,UAAU,IAAI,CAACD,UAAU,EAAE;QACzDhQ,SAAS,CAAC8P,UAAU,CAACtO,GAAG,CAAC,KAAKA,GAAG,GAAGA,GAAG,GAAGsO,UAAU,CAACtO,GAAG,GAAGsO,UAAU,CAACtO,GAAG,GAAGA,GAAG,CAAC;QAChFF,GAAG,GAAG6O,GAAG,CAAC3O,GAAG,EAAE4O,WAAW,EAAE,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM,IAAIJ,UAAU,IAAI,CAACC,UAAU,EAAE;QAClCjQ,SAAS,CAAC8P,UAAU,CAACxO,GAAG,CAAC,KAAKA,GAAG,GAAGA,GAAG,GAAGwO,UAAU,CAACxO,GAAG,GAAGwO,UAAU,CAACxO,GAAG,GAAGA,GAAG,CAAC;QAChFE,GAAG,GAAG2O,GAAG,CAAC7O,GAAG,EAAE8O,WAAW,CAAC;MAC/B;IACJ,CAAC,MAAM;MACHA,WAAW,GAAGC,QAAQ,CAACD,WAAW,CAAC;MACnC,IAAI,CAACjO,KAAK,CAACiO,WAAW,CAAC,IAAIE,QAAQ,CAACF,WAAW,CAAC,EAAE;QAC9CA,WAAW,EAAE;QACb,IAAI,CAACH,UAAU,IAAI,CAACD,UAAU,EAAE;UAC5BxO,GAAG,GAAGqJ,UAAU,CAACA,UAAU,CAAC1F,MAAM,GAAG,CAAC,CAAC;UACvC7D,GAAG,GAAGuJ,UAAU,CAACA,UAAU,CAAC1F,MAAM,GAAG,CAAC,GAAGiL,WAAW,CAAC;QACzD,CAAC,MAAM,IAAIJ,UAAU,IAAI,CAACC,UAAU,EAAE;UAClC,IAAIM,cAAc,GAAG3F,iBAAiB,CAACC,UAAU,EAAEvJ,GAAG,EAAE,KAAK,CAAC,CAAC;UAC/DE,GAAG,GAAG+O,cAAc,CAAC1F,UAAU,CAACuF,WAAW,CAAC;QAChD,CAAC,MAAM,IAAI,CAACJ,UAAU,IAAIC,UAAU,EAAE;UAClC,IAAIO,eAAe,GAAG5F,iBAAiB,CAACC,UAAU,EAAE,KAAK,CAAC,EAAErJ,GAAG,CAAC;UAChEF,GAAG,GAAGkP,eAAe,CAAC3F,UAAU,CAAC2F,eAAe,CAAC3F,UAAU,CAAC1F,MAAM,GAAG,CAAC,GAAGiL,WAAW,CAAC;QACzF;MACJ;IACJ;EACJ;EACA,IAAIF,WAAW,EAAE;IACb,IAAIlQ,SAAS,CAAC8P,UAAU,CAACtO,GAAG,CAAC,IAAIA,GAAG,GAAGsO,UAAU,CAACtO,GAAG,EAAE;MACnDA,GAAG,GAAGsO,UAAU,CAACtO,GAAG;IACxB;IACA,IAAIxB,SAAS,CAAC8P,UAAU,CAACxO,GAAG,CAAC,IAAIA,GAAG,GAAGwO,UAAU,CAACxO,GAAG,EAAE;MACnDA,GAAG,GAAGwO,UAAU,CAACxO,GAAG;IACxB;EACJ;EACA,OAAO;IACHwJ,UAAU,EAAExJ,GAAG;IACfyJ,QAAQ,EAAEvJ;EACd,CAAC;AACL;AACA,OAAO,SAASkO,SAAS,CAAChN,KAAK,EAAEC,IAAI,EAAE;EACnC,IAAI8N,cAAc,GAAGnB,SAAS,CAACnK,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKmK,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EAC3F,IAAIoB,eAAe,GAAGpB,SAAS,CAACnK,MAAM,GAAG,CAAC,GAAGmK,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;EAClE,IAAI,CAACmB,cAAc,EAAE;IACjB,OAAOhO,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC;EAC9B;EACA,IAAI,CAAC,KAAKD,KAAK,EAAE;IACb,OAAO,CAAC;EACZ;EACA,IAAIiO,cAAc,GAAGlO,MAAM,CAAC5B,GAAG,CAAC6B,KAAK,CAAC,EAAEC,IAAI,CAAC,IAAI+N,eAAe,GAAG,CAAC,CAAC;EACrE,IAAIC,cAAc,GAAG,CAAC,EAAE;IACpB,OAAO,CAAC;EACZ;EACA,OAAOpQ,MAAM,CAACC,IAAI,CAACkC,KAAK,CAAC,GAAGiO,cAAc,EAAEtO,MAAM,CAACpB,GAAG,CAAC0B,IAAI,EAAE+N,eAAe,GAAG,CAAC,CAAC,CAAC/L,OAAO,CAAC9D,GAAG,CAAC6P,eAAe,CAAC,CAAC,CAAC,CAAC;AACrH;AACA,OAAO,SAASf,UAAU,CAACjN,KAAK,EAAEC,IAAI,EAAE;EACpC,IAAI8N,cAAc,GAAGnB,SAAS,CAACnK,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKmK,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EAC3F,IAAIoB,eAAe,GAAGpB,SAAS,CAACnK,MAAM,GAAG,CAAC,GAAGmK,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;EAClE,IAAI,CAACmB,cAAc,EAAE;IACjB,OAAO5N,OAAO,CAACH,KAAK,EAAEC,IAAI,CAAC;EAC/B;EACA,IAAI,CAAC,KAAKD,KAAK,EAAE;IACb,OAAO,CAAC;EACZ;EACA,IAAIiO,cAAc,GAAG9N,OAAO,CAAChC,GAAG,CAAC6B,KAAK,CAAC,IAAIgO,eAAe,GAAG,CAAC,CAAC,EAAE/N,IAAI,CAAC;EACtE,IAAIgO,cAAc,GAAG,CAAC,EAAE;IACpB,OAAO,CAAC;EACZ;EACA,OAAOpQ,MAAM,CAACC,IAAI,CAACkC,KAAK,CAAC,GAAGiO,cAAc,EAAEtO,MAAM,CAACpB,GAAG,CAAC0B,IAAI,EAAE+N,eAAe,CAAC,CAAC/L,OAAO,CAAC9D,GAAG,CAAC6P,eAAe,CAAC,CAAC,CAAC,CAAC;AACjH;AACA,OAAO,SAASE,cAAc,CAAC3B,KAAK,EAAE4B,gBAAgB,EAAE;EACpD,IAAIlC,KAAK,CAACC,OAAO,CAACiC,gBAAgB,CAAC,EAAE;IACjC,OAAO5B,KAAK,CAAC9J,MAAM,KAAK0L,gBAAgB,CAAC1L,MAAM,IAAI8J,KAAK,CAAC6B,KAAK,CAAC,CAACpD,IAAI,EAAEzI,CAAC,KAAKiG,OAAO,CAACwC,IAAI,CAAC,KAAKxC,OAAO,CAAC2F,gBAAgB,CAAC5L,CAAC,CAAC,CAAC,CAAC;EAC/H,CAAC,MAAM;IACH,OAAOiG,OAAO,CAAC+D,KAAK,CAACnE,UAAU,CAAC,KAAKI,OAAO,CAAC2F,gBAAgB,CAAC/F,UAAU,CAAC,IAAII,OAAO,CAAC+D,KAAK,CAAClE,QAAQ,CAAC,KAAKG,OAAO,CAAC2F,gBAAgB,CAAC9F,QAAQ,CAAC;EAC/I;AACJ;AACA,OAAO,SAASG,OAAO,CAACxI,KAAK,EAAE;EAC3B,OAAOA,KAAK,IAAIA,KAAK,CAACwI,OAAO,EAAE;AACnC;AACA,OAAO,SAAS6F,aAAa,CAAC5K,MAAM,EAAEa,CAAC,EAAEE,CAAC,EAAE;EACxC,OAAOF,CAAC,IAAIb,MAAM,CAACM,IAAI,IAAIO,CAAC,IAAIb,MAAM,CAACQ,KAAK,IAAIO,CAAC,IAAIf,MAAM,CAACE,GAAG,IAAIa,CAAC,IAAIf,MAAM,CAACI,MAAM;AACzF"},"metadata":{},"sourceType":"module","externalDependencies":[]}