{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/translators/range.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined, isDate, isFunction } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nvar _isDefined = isDefined;\nvar _isDate = isDate;\nvar _isFunction = isFunction;\nimport { unique } from \"../core/utils\";\nvar minSelector = \"min\";\nvar maxSelector = \"max\";\nvar minVisibleSelector = \"minVisible\";\nvar maxVisibleSelector = \"maxVisible\";\nvar baseSelector = \"base\";\nvar axisTypeSelector = \"axisType\";\nfunction otherLessThan(thisValue, otherValue) {\n  return otherValue < thisValue;\n}\nfunction otherGreaterThan(thisValue, otherValue) {\n  return otherValue > thisValue;\n}\nfunction compareAndReplace(thisValue, otherValue, setValue, compare) {\n  var otherValueDefined = _isDefined(otherValue);\n  if (_isDefined(thisValue)) {\n    if (otherValueDefined && compare(thisValue, otherValue)) {\n      setValue(otherValue);\n    }\n  } else if (otherValueDefined) {\n    setValue(otherValue);\n  }\n}\nexport var Range = function (range) {\n  range && extend(this, range);\n};\nvar _Range = Range;\n_Range.prototype = {\n  constructor: _Range,\n  addRange: function (otherRange) {\n    var that = this;\n    var categories = that.categories;\n    var otherCategories = otherRange.categories;\n    var isDiscrete = \"discrete\" === that[axisTypeSelector];\n    var compareAndReplaceByField = function (field, compare) {\n      compareAndReplace(that[field], otherRange[field], function (value) {\n        that[field] = value;\n      }, compare);\n    };\n    var controlValuesByVisibleBounds = function (valueField, visibleValueField, compare) {\n      compareAndReplace(that[valueField], that[visibleValueField], function (value) {\n        _isDefined(that[valueField]) && (that[valueField] = value);\n      }, compare);\n    };\n    var checkField = function (field) {\n      that[field] = that[field] || otherRange[field];\n    };\n    checkField(\"invert\");\n    checkField(\"containsConstantLine\");\n    checkField(axisTypeSelector);\n    checkField(\"dataType\");\n    checkField(\"isSpacedMargin\");\n    if (\"logarithmic\" === that[axisTypeSelector]) {\n      checkField(baseSelector);\n    } else {\n      that[baseSelector] = void 0;\n    }\n    compareAndReplaceByField(minSelector, otherLessThan);\n    compareAndReplaceByField(maxSelector, otherGreaterThan);\n    if (isDiscrete) {\n      checkField(minVisibleSelector);\n      checkField(maxVisibleSelector);\n    } else {\n      compareAndReplaceByField(minVisibleSelector, otherLessThan);\n      compareAndReplaceByField(maxVisibleSelector, otherGreaterThan);\n    }\n    compareAndReplaceByField(\"interval\", otherLessThan);\n    if (!isDiscrete) {\n      controlValuesByVisibleBounds(minSelector, minVisibleSelector, otherLessThan);\n      controlValuesByVisibleBounds(minSelector, maxVisibleSelector, otherLessThan);\n      controlValuesByVisibleBounds(maxSelector, maxVisibleSelector, otherGreaterThan);\n      controlValuesByVisibleBounds(maxSelector, minVisibleSelector, otherGreaterThan);\n    }\n    if (void 0 === categories) {\n      that.categories = otherCategories;\n    } else {\n      that.categories = otherCategories ? unique(categories.concat(otherCategories)) : categories;\n    }\n    if (\"logarithmic\" === that[axisTypeSelector]) {\n      checkField(\"allowNegatives\");\n      compareAndReplaceByField(\"linearThreshold\", otherLessThan);\n    }\n    return that;\n  },\n  isEmpty: function () {\n    return (!_isDefined(this[minSelector]) || !_isDefined(this[maxSelector])) && (!this.categories || 0 === this.categories.length);\n  },\n  correctValueZeroLevel: function () {\n    var that = this;\n    if (_isDate(that[maxSelector]) || _isDate(that[minSelector])) {\n      return that;\n    }\n    function setZeroLevel(min, max) {\n      that[min] < 0 && that[max] < 0 && (that[max] = 0);\n      that[min] > 0 && that[max] > 0 && (that[min] = 0);\n    }\n    setZeroLevel(minSelector, maxSelector);\n    setZeroLevel(minVisibleSelector, maxVisibleSelector);\n    return that;\n  },\n  sortCategories(sort) {\n    if (false === sort || !this.categories) {\n      return;\n    }\n    if (Array.isArray(sort)) {\n      var sortValues = sort.map(item => item.valueOf());\n      var filteredSeriesCategories = this.categories.filter(item => -1 === sortValues.indexOf(item.valueOf()));\n      this.categories = sort.concat(filteredSeriesCategories);\n    } else {\n      var notAFunction = !_isFunction(sort);\n      if (notAFunction && \"string\" !== this.dataType) {\n        sort = (a, b) => a.valueOf() - b.valueOf();\n      } else if (notAFunction) {\n        sort = false;\n      }\n      sort && this.categories.sort(sort);\n    }\n  }\n};","map":{"version":3,"names":["isDefined","isDate","isFunction","extend","_isDefined","_isDate","_isFunction","unique","minSelector","maxSelector","minVisibleSelector","maxVisibleSelector","baseSelector","axisTypeSelector","otherLessThan","thisValue","otherValue","otherGreaterThan","compareAndReplace","setValue","compare","otherValueDefined","Range","range","_Range","prototype","constructor","addRange","otherRange","that","categories","otherCategories","isDiscrete","compareAndReplaceByField","field","value","controlValuesByVisibleBounds","valueField","visibleValueField","checkField","concat","isEmpty","length","correctValueZeroLevel","setZeroLevel","min","max","sortCategories","sort","Array","isArray","sortValues","map","item","valueOf","filteredSeriesCategories","filter","indexOf","notAFunction","dataType","a","b"],"sources":["C:/Users/User/vue-chart/node_modules/devextreme/esm/viz/translators/range.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/translators/range.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined,\r\n    isDate,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar _isDefined = isDefined;\r\nvar _isDate = isDate;\r\nvar _isFunction = isFunction;\r\nimport {\r\n    unique\r\n} from \"../core/utils\";\r\nvar minSelector = \"min\";\r\nvar maxSelector = \"max\";\r\nvar minVisibleSelector = \"minVisible\";\r\nvar maxVisibleSelector = \"maxVisible\";\r\nvar baseSelector = \"base\";\r\nvar axisTypeSelector = \"axisType\";\r\n\r\nfunction otherLessThan(thisValue, otherValue) {\r\n    return otherValue < thisValue\r\n}\r\n\r\nfunction otherGreaterThan(thisValue, otherValue) {\r\n    return otherValue > thisValue\r\n}\r\n\r\nfunction compareAndReplace(thisValue, otherValue, setValue, compare) {\r\n    var otherValueDefined = _isDefined(otherValue);\r\n    if (_isDefined(thisValue)) {\r\n        if (otherValueDefined && compare(thisValue, otherValue)) {\r\n            setValue(otherValue)\r\n        }\r\n    } else if (otherValueDefined) {\r\n        setValue(otherValue)\r\n    }\r\n}\r\nexport var Range = function(range) {\r\n    range && extend(this, range)\r\n};\r\nvar _Range = Range;\r\n_Range.prototype = {\r\n    constructor: _Range,\r\n    addRange: function(otherRange) {\r\n        var that = this;\r\n        var categories = that.categories;\r\n        var otherCategories = otherRange.categories;\r\n        var isDiscrete = \"discrete\" === that[axisTypeSelector];\r\n        var compareAndReplaceByField = function(field, compare) {\r\n            compareAndReplace(that[field], otherRange[field], (function(value) {\r\n                that[field] = value\r\n            }), compare)\r\n        };\r\n        var controlValuesByVisibleBounds = function(valueField, visibleValueField, compare) {\r\n            compareAndReplace(that[valueField], that[visibleValueField], (function(value) {\r\n                _isDefined(that[valueField]) && (that[valueField] = value)\r\n            }), compare)\r\n        };\r\n        var checkField = function(field) {\r\n            that[field] = that[field] || otherRange[field]\r\n        };\r\n        checkField(\"invert\");\r\n        checkField(\"containsConstantLine\");\r\n        checkField(axisTypeSelector);\r\n        checkField(\"dataType\");\r\n        checkField(\"isSpacedMargin\");\r\n        if (\"logarithmic\" === that[axisTypeSelector]) {\r\n            checkField(baseSelector)\r\n        } else {\r\n            that[baseSelector] = void 0\r\n        }\r\n        compareAndReplaceByField(minSelector, otherLessThan);\r\n        compareAndReplaceByField(maxSelector, otherGreaterThan);\r\n        if (isDiscrete) {\r\n            checkField(minVisibleSelector);\r\n            checkField(maxVisibleSelector)\r\n        } else {\r\n            compareAndReplaceByField(minVisibleSelector, otherLessThan);\r\n            compareAndReplaceByField(maxVisibleSelector, otherGreaterThan)\r\n        }\r\n        compareAndReplaceByField(\"interval\", otherLessThan);\r\n        if (!isDiscrete) {\r\n            controlValuesByVisibleBounds(minSelector, minVisibleSelector, otherLessThan);\r\n            controlValuesByVisibleBounds(minSelector, maxVisibleSelector, otherLessThan);\r\n            controlValuesByVisibleBounds(maxSelector, maxVisibleSelector, otherGreaterThan);\r\n            controlValuesByVisibleBounds(maxSelector, minVisibleSelector, otherGreaterThan)\r\n        }\r\n        if (void 0 === categories) {\r\n            that.categories = otherCategories\r\n        } else {\r\n            that.categories = otherCategories ? unique(categories.concat(otherCategories)) : categories\r\n        }\r\n        if (\"logarithmic\" === that[axisTypeSelector]) {\r\n            checkField(\"allowNegatives\");\r\n            compareAndReplaceByField(\"linearThreshold\", otherLessThan)\r\n        }\r\n        return that\r\n    },\r\n    isEmpty: function() {\r\n        return (!_isDefined(this[minSelector]) || !_isDefined(this[maxSelector])) && (!this.categories || 0 === this.categories.length)\r\n    },\r\n    correctValueZeroLevel: function() {\r\n        var that = this;\r\n        if (_isDate(that[maxSelector]) || _isDate(that[minSelector])) {\r\n            return that\r\n        }\r\n\r\n        function setZeroLevel(min, max) {\r\n            that[min] < 0 && that[max] < 0 && (that[max] = 0);\r\n            that[min] > 0 && that[max] > 0 && (that[min] = 0)\r\n        }\r\n        setZeroLevel(minSelector, maxSelector);\r\n        setZeroLevel(minVisibleSelector, maxVisibleSelector);\r\n        return that\r\n    },\r\n    sortCategories(sort) {\r\n        if (false === sort || !this.categories) {\r\n            return\r\n        }\r\n        if (Array.isArray(sort)) {\r\n            var sortValues = sort.map(item => item.valueOf());\r\n            var filteredSeriesCategories = this.categories.filter(item => -1 === sortValues.indexOf(item.valueOf()));\r\n            this.categories = sort.concat(filteredSeriesCategories)\r\n        } else {\r\n            var notAFunction = !_isFunction(sort);\r\n            if (notAFunction && \"string\" !== this.dataType) {\r\n                sort = (a, b) => a.valueOf() - b.valueOf()\r\n            } else if (notAFunction) {\r\n                sort = false\r\n            }\r\n            sort && this.categories.sort(sort)\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}